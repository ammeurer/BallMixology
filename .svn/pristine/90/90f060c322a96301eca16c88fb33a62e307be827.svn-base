<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0_06) on Mon Oct 07 11:14:49 CDT 2013 -->
<title>M-Index</title>
<meta name="date" content="2013-10-07">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="M-Index";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li>Package</li>
<li>Class</li>
<li>Use</li>
<li><a href="../overview-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li class="navBarCell1Rev">Index</li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="index-9.html">Prev Letter</a></li>
<li><a href="index-11.html">Next Letter</a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?index-filesindex-10.html" target="_top">Frames</a></li>
<li><a href="index-10.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<div class="contentContainer"><a href="index-1.html">A</a>&nbsp;<a href="index-2.html">B</a>&nbsp;<a href="index-3.html">C</a>&nbsp;<a href="index-4.html">D</a>&nbsp;<a href="index-5.html">E</a>&nbsp;<a href="index-6.html">F</a>&nbsp;<a href="index-7.html">G</a>&nbsp;<a href="index-8.html">I</a>&nbsp;<a href="index-9.html">L</a>&nbsp;<a href="index-10.html">M</a>&nbsp;<a href="index-11.html">N</a>&nbsp;<a href="index-12.html">P</a>&nbsp;<a href="index-13.html">R</a>&nbsp;<a href="index-14.html">S</a>&nbsp;<a href="index-15.html">T</a>&nbsp;<a href="index-16.html">U</a>&nbsp;<a href="index-17.html">V</a>&nbsp;<a href="index-18.html">W</a>&nbsp;<a href="index-19.html">X</a>&nbsp;<a href="index-20.html">Y</a>&nbsp;<a href="index-21.html">_</a>&nbsp;<a name="_M_">
<!--   -->
</a>
<h2 class="title">M</h2>
<dl>
<dt><span class="strong"><a href="../controller/Controller.html#main(java.lang.String[])">main(String[])</a></span> - Static method in class controller.<a href="../controller/Controller.html" title="class in controller">Controller</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../paint_strategies/IPaintStrategyFac.html#make()">make()</a></span> - Method in interface paint_strategies.<a href="../paint_strategies/IPaintStrategyFac.html" title="interface in paint_strategies">IPaintStrategyFac</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../update_strategies/IStrategyFac.html#make()">make()</a></span> - Method in interface update_strategies.<a href="../update_strategies/IStrategyFac.html" title="interface in update_strategies">IStrategyFac</a></dt>
<dd>
<div class="block">Instantiate the specific IUpdateStrategy for which
 this factory is defined.</div>
</dd>
<dt><span class="strong"><a href="../view/IModelAdapter.html#makeBall(TStrategyDropListItem, TPaintDropListItem)">makeBall(TStrategyDropListItem, TPaintDropListItem)</a></span> - Method in interface view.<a href="../view/IModelAdapter.html" title="interface in view">IModelAdapter</a></dt>
<dd>
<div class="block">Create a ball.</div>
</dd>
<dt><span class="strong"><a href="../model/BallWorldModel.html#makePaintStrategyFac(java.lang.String)">makePaintStrategyFac(String)</a></span> - Method in class model.<a href="../model/BallWorldModel.html" title="class in model">BallWorldModel</a></dt>
<dd>
<div class="block">makePaintStrategyFac allows us to send packages b/t the model and view.</div>
</dd>
<dt><span class="strong"><a href="../paint_strategies/shape/EllipseShapeFactory.html#makeShape(double, double, double, double)">makeShape(double, double, double, double)</a></span> - Method in class paint_strategies.shape.<a href="../paint_strategies/shape/EllipseShapeFactory.html" title="class in paint_strategies.shape">EllipseShapeFactory</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../paint_strategies/shape/IShapeFactory.html#makeShape(double, double, double, double)">makeShape(double, double, double, double)</a></span> - Method in interface paint_strategies.shape.<a href="../paint_strategies/shape/IShapeFactory.html" title="interface in paint_strategies.shape">IShapeFactory</a></dt>
<dd>
<div class="block">Create a shape</div>
</dd>
<dt><span class="strong"><a href="../paint_strategies/shape/PolygonFactory.html#makeShape(double, double, double, double)">makeShape(double, double, double, double)</a></span> - Method in class paint_strategies.shape.<a href="../paint_strategies/shape/PolygonFactory.html" title="class in paint_strategies.shape">PolygonFactory</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../paint_strategies/shape/RectangleShapeFactory.html#makeShape(double, double, double, double)">makeShape(double, double, double, double)</a></span> - Method in class paint_strategies.shape.<a href="../paint_strategies/shape/RectangleShapeFactory.html" title="class in paint_strategies.shape">RectangleShapeFactory</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../model/BallWorldModel.html#makeStrategyFac(java.lang.String)">makeStrategyFac(String)</a></span> - Method in class model.<a href="../model/BallWorldModel.html" title="class in model">BallWorldModel</a></dt>
<dd>
<div class="block">makeStrategyFac allows us to send packages b/t the model and view.</div>
</dd>
<dt><span class="strong"><a href="../view/IModelAdapter.html#makeSwitcher()">makeSwitcher()</a></span> - Method in interface view.<a href="../view/IModelAdapter.html" title="interface in view">IModelAdapter</a></dt>
<dd>
<div class="block">create a switcher ball</div>
</dd>
<dt><span class="strong"><a href="../model/BallWorldModel.html#makeSwitcherBall()">makeSwitcherBall()</a></span> - Method in class model.<a href="../model/BallWorldModel.html" title="class in model">BallWorldModel</a></dt>
<dd>
<div class="block">Switch all the balls at once to a single strategy</div>
</dd>
<dt><a href="../model/package-summary.html">model</a> - package model</dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../controller/Controller.html#model">model</a></span> - Variable in class controller.<a href="../controller/Controller.html" title="class in controller">Controller</a></dt>
<dd>
<div class="block">The model component of the MVC design pattern</div>
</dd>
<dt><a href="../model/ball/package-summary.html">model.ball</a> - package model.ball</dt>
<dd>&nbsp;</dd>
<dt><a href="../interaction_strategies/MultiInteractStrategy.html" title="class in interaction_strategies"><span class="strong">MultiInteractStrategy</span></a> - Class in <a href="../interaction_strategies/package-summary.html">interaction_strategies</a></dt>
<dd>
<div class="block">MultiStrategy is a recursive tree that allows the user to combine
 as many strategies as they want.</div>
</dd>
<dt><span class="strong"><a href="../interaction_strategies/MultiInteractStrategy.html#MultiInteractStrategy(interaction_strategies.IInteractStrategy, interaction_strategies.IInteractStrategy)">MultiInteractStrategy(IInteractStrategy, IInteractStrategy)</a></span> - Constructor for class interaction_strategies.<a href="../interaction_strategies/MultiInteractStrategy.html" title="class in interaction_strategies">MultiInteractStrategy</a></dt>
<dd>&nbsp;</dd>
<dt><a href="../paint_strategies/MultiPaintStrategy.html" title="class in paint_strategies"><span class="strong">MultiPaintStrategy</span></a> - Class in <a href="../paint_strategies/package-summary.html">paint_strategies</a></dt>
<dd>
<div class="block">MultiPaintStrategy creates a composite paint strategy</div>
</dd>
<dt><span class="strong"><a href="../paint_strategies/MultiPaintStrategy.html#MultiPaintStrategy(java.awt.geom.AffineTransform, paint_strategies.APaintStrategy[])">MultiPaintStrategy(AffineTransform, APaintStrategy[])</a></span> - Constructor for class paint_strategies.<a href="../paint_strategies/MultiPaintStrategy.html" title="class in paint_strategies">MultiPaintStrategy</a></dt>
<dd>&nbsp;</dd>
<dt><a href="../update_strategies/MultiStrategy.html" title="class in update_strategies"><span class="strong">MultiStrategy</span></a> - Class in <a href="../update_strategies/package-summary.html">update_strategies</a></dt>
<dd>
<div class="block">MultiStrategy is a recursive tree that allows the user to combine
 as many strategies as they want.</div>
</dd>
<dt><span class="strong"><a href="../update_strategies/MultiStrategy.html#MultiStrategy(update_strategies.IUpdateStrategy, update_strategies.IUpdateStrategy)">MultiStrategy(IUpdateStrategy, IUpdateStrategy)</a></span> - Constructor for class update_strategies.<a href="../update_strategies/MultiStrategy.html" title="class in update_strategies">MultiStrategy</a></dt>
<dd>&nbsp;</dd>
</dl>
<a href="index-1.html">A</a>&nbsp;<a href="index-2.html">B</a>&nbsp;<a href="index-3.html">C</a>&nbsp;<a href="index-4.html">D</a>&nbsp;<a href="index-5.html">E</a>&nbsp;<a href="index-6.html">F</a>&nbsp;<a href="index-7.html">G</a>&nbsp;<a href="index-8.html">I</a>&nbsp;<a href="index-9.html">L</a>&nbsp;<a href="index-10.html">M</a>&nbsp;<a href="index-11.html">N</a>&nbsp;<a href="index-12.html">P</a>&nbsp;<a href="index-13.html">R</a>&nbsp;<a href="index-14.html">S</a>&nbsp;<a href="index-15.html">T</a>&nbsp;<a href="index-16.html">U</a>&nbsp;<a href="index-17.html">V</a>&nbsp;<a href="index-18.html">W</a>&nbsp;<a href="index-19.html">X</a>&nbsp;<a href="index-20.html">Y</a>&nbsp;<a href="index-21.html">_</a>&nbsp;</div>
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li>Package</li>
<li>Class</li>
<li>Use</li>
<li><a href="../overview-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li class="navBarCell1Rev">Index</li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="index-9.html">Prev Letter</a></li>
<li><a href="index-11.html">Next Letter</a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?index-filesindex-10.html" target="_top">Frames</a></li>
<li><a href="index-10.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
