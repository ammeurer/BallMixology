<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20110701" xmlns:xmi="http://www.omg.org/spec/XMI/20110701" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/4.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_9EzRsC9uEeOq3KT-lRHlww" name="UpdateStrategies">
    <eAnnotations xmi:id="_9YjUIC9uEeOq3KT-lRHlww" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_9YjUIS9uEeOq3KT-lRHlww" source="codegen">
        <details xmi:id="_9YjUIi9uEeOq3KT-lRHlww" key="codegenDirectory" value="/HW05/src"/>
        <details xmi:id="_Cyw6EC9vEeOq3KT-lRHlww" key="AssociatedSourceCode" value="/HW05/src/controller/Controller.java;4078529113/1;/HW05/src/interaction_strategies/CollideStrategy.java;505488445/1;/HW05/src/interaction_strategies/ColorConformStrategy.java;4278432989/1;/HW05/src/interaction_strategies/IInteractStrategy.java;2273989483/1;/HW05/src/interaction_strategies/MultiInteractStrategy.java;2213940578/1;/HW05/src/interaction_strategies/NormalElasticStrategy.java;2651126203/1;/HW05/src/interaction_strategies/SlideStrategy.java;2374543294/1;/HW05/src/interaction_strategies/StickySyncStrategy.java;969969371/1;/HW05/src/model/BallWorldModel.java;2253321097/1;/HW05/src/model/ViewAdapter.java;3844052119/1;/HW05/src/model/ball/Ball.java;1780067038/1;/HW05/src/model/ball/Dispatcher.java;2704482495/1;/HW05/src/model/ball/IBallCmd.java;959923111/1;/HW05/src/paint_strategies/APaintStrategy.java;147169155/1;/HW05/src/paint_strategies/BallPaintStrategy.java;910383446/1;/HW05/src/paint_strategies/BirdPaintStrategy.java;1617380577/1;/HW05/src/paint_strategies/ButterflyPaintStrategy.java;1246600498/1;/HW05/src/paint_strategies/EllipsePaintStrategy.java;436690418/1;/HW05/src/paint_strategies/FishPaintStrategy.java;4138003259/1;/HW05/src/paint_strategies/IPaintStrategy.java;456763087/1;/HW05/src/paint_strategies/IPaintStrategyFac.java;3456262257/1;/HW05/src/paint_strategies/ImagePaintStrategy.java;3493488086/1;/HW05/src/paint_strategies/MultiPaintStrategy.java;1366200709/1;/HW05/src/paint_strategies/PolygonPaintStrategy.java;3729159296/1;/HW05/src/paint_strategies/RectanglePaintStrategy.java;2066101304/1;/HW05/src/paint_strategies/SaturnPaintStrategy.java;3148331722/1;/HW05/src/paint_strategies/ShapePaintStrategy.java;123135949/1;/HW05/src/paint_strategies/TrianglePaintStrategy.java;4084342458/1;/HW05/src/paint_strategies/UprightImagePaintStrategy.java;3992198612/1;/HW05/src/paint_strategies/shape/EllipseShapeFactory.java;581013399/1;/HW05/src/paint_strategies/shape/IShapeFactory.java;424010512/1;/HW05/src/paint_strategies/shape/PolygonFactory.java;607576289/1;/HW05/src/paint_strategies/shape/RectangleShapeFactory.java;2986203795/1;/HW05/src/update_strategies/BalloonStrategy.java;809339765/1;/HW05/src/update_strategies/DiscoStrategy.java;727874998/1;/HW05/src/update_strategies/DodgeStrategy.java;759109141/1;/HW05/src/update_strategies/IStrategyFac.java;1136257532/1;/HW05/src/update_strategies/IUpdateStrategy.java;1713861375/1;/HW05/src/update_strategies/LostStrategy.java;3697114464/1;/HW05/src/update_strategies/MultiStrategy.java;278507391/1;/HW05/src/update_strategies/StraightStrategy.java;3037477222/1;/HW05/src/update_strategies/SwitcherStrategy.java;589471949/1;/HW05/src/util/IRandomizer.java;1472937444/1;/HW05/src/util/Randomizer.java;3364366671/1;/HW05/src/util/SineMaker.java;448383622/1;/HW05/src/view/BallWorldFrame.java;590064737/1;/HW05/src/view/IModelAdapter.java;3179450392/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_9oUOcC9uEeOq3KT-lRHlww">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_9oUOcS9uEeOq3KT-lRHlww">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_9oUOci9uEeOq3KT-lRHlww">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_9oUOcy9uEeOq3KT-lRHlww">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_9oUOdC9uEeOq3KT-lRHlww">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_9oU1gC9uEeOq3KT-lRHlww">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_9oU1gS9uEeOq3KT-lRHlww">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_9oU1gi9uEeOq3KT-lRHlww">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_9oU1gy9uEeOq3KT-lRHlww">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_9oU1hC9uEeOq3KT-lRHlww" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_9oU1hS9uEeOq3KT-lRHlww" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_9oWqsC9uEeOq3KT-lRHlww" name="geom">
          <packagedElement xmi:type="uml:Class" xmi:id="_9uCb8S9uEeOq3KT-lRHlww" name="Point2D"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_9uUv0C9uEeOq3KT-lRHlww" name="AffineTransform"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_9uxbwC9uEeOq3KT-lRHlww" name="Ellipse2D"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_9uzQ8S9uEeOq3KT-lRHlww" name="Rectangle2D"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_9ofNkC9uEeOq3KT-lRHlww" name="event">
          <packagedElement xmi:type="uml:Class" xmi:id="_9uS6oi9uEeOq3KT-lRHlww" name="ActionEvent"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_9uThsS9uEeOq3KT-lRHlww" name="ActionListener"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_9t__sC9uEeOq3KT-lRHlww" name="Component"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9uAmwS9uEeOq3KT-lRHlww" name="EventQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9uBN0C9uEeOq3KT-lRHlww" name="Graphics"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9uB04C9uEeOq3KT-lRHlww" name="Point"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9uSTkC9uEeOq3KT-lRHlww" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9uS6oC9uEeOq3KT-lRHlww" name="Rectangle"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9ulOgC9uEeOq3KT-lRHlww" name="Graphics2D"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9ulOgi9uEeOq3KT-lRHlww" name="Image"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9ul1kS9uEeOq3KT-lRHlww" name="MediaTracker"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9umcoS9uEeOq3KT-lRHlww" name="Toolkit"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_9urVIC9uEeOq3KT-lRHlww" name="Shape"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9uyp4C9uEeOq3KT-lRHlww" name="Polygon"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9vJ2QC9uEeOq3KT-lRHlww" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9vNgoS9uEeOq3KT-lRHlww" name="GridBagLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9vNgoy9uEeOq3KT-lRHlww" name="GridBagConstraints"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9vOHsS9uEeOq3KT-lRHlww" name="Insets"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9v-8sy9uEeOq3KT-lRHlww" name="Dimension"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_9olUMC9uEeOq3KT-lRHlww" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_9uZBQC9uEeOq3KT-lRHlww" name="Observable"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_9uZBQi9uEeOq3KT-lRHlww" name="Observer"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_9voXYC9uEeOq3KT-lRHlww" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_9voXYS9uEeOq3KT-lRHlww" name="Object"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_9oVckC9uEeOq3KT-lRHlww" name="model">
      <packagedElement xmi:type="uml:Package" xmi:id="_9oWqsS9uEeOq3KT-lRHlww" name="ball">
        <packagedElement xmi:type="uml:Class" xmi:id="_9qPhEC9uEeOq3KT-lRHlww" clientDependency="_9vl7IS9uEeOq3KT-lRHlww" name="Ball">
          <ownedComment xmi:id="_9xAQZy9uEeOq3KT-lRHlww">
            <body>Concrete class Ball defines invariable methods for ball implementations.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_9wR3oS9uEeOq3KT-lRHlww" name="radius">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_9wSesC9uEeOq3KT-lRHlww" name="velocity" type="_9uB04C9uEeOq3KT-lRHlww" association="_9xAQaC9uEeOq3KT-lRHlww"/>
          <ownedAttribute xmi:id="_9wSesS9uEeOq3KT-lRHlww" name="location" type="_9uB04C9uEeOq3KT-lRHlww" association="_9xA3cS9uEeOq3KT-lRHlww"/>
          <ownedAttribute xmi:id="_9wSesi9uEeOq3KT-lRHlww" name="color" type="_9uSTkC9uEeOq3KT-lRHlww" association="_9xA3cy9uEeOq3KT-lRHlww"/>
          <ownedAttribute xmi:id="_9wSesy9uEeOq3KT-lRHlww" name="panel" type="_9t__sC9uEeOq3KT-lRHlww" isReadOnly="true" association="_9xZ5AC9uEeOq3KT-lRHlww"/>
          <ownedAttribute xmi:id="_9wTFwC9uEeOq3KT-lRHlww" name="strategy" type="_9rIR4S9uEeOq3KT-lRHlww" association="_9xBegC9uEeOq3KT-lRHlww"/>
          <ownedAttribute xmi:id="_9wTFwS9uEeOq3KT-lRHlww" name="paintThis" visibility="private" type="_9qjqIC9uEeOq3KT-lRHlww" association="_9xZ5Ay9uEeOq3KT-lRHlww"/>
          <ownedAttribute xmi:id="_9wTs0C9uEeOq3KT-lRHlww" name="interact" visibility="private" type="_9p3GkC9uEeOq3KT-lRHlww" association="_9xagEi9uEeOq3KT-lRHlww"/>
          <interfaceRealization xmi:id="_9vl7IS9uEeOq3KT-lRHlww" client="_9qPhEC9uEeOq3KT-lRHlww" supplier="_9uZBQi9uEeOq3KT-lRHlww" contract="_9uZBQi9uEeOq3KT-lRHlww"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wyN8C9uEeOq3KT-lRHlww" name="Ball" specification="_9vnJQC9uEeOq3KT-lRHlww">
            <ownedParameter xmi:id="_9wyN8S9uEeOq3KT-lRHlww" name="myLocation" type="_9uB04C9uEeOq3KT-lRHlww"/>
            <ownedParameter xmi:id="_9wyN8i9uEeOq3KT-lRHlww" name="myRadius">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9wyN8y9uEeOq3KT-lRHlww" name="myVelocity" type="_9uB04C9uEeOq3KT-lRHlww"/>
            <ownedParameter xmi:id="_9wyN9C9uEeOq3KT-lRHlww" name="myColor" type="_9uSTkC9uEeOq3KT-lRHlww"/>
            <ownedParameter xmi:id="_9wyN9S9uEeOq3KT-lRHlww" name="myPanel" type="_9t__sC9uEeOq3KT-lRHlww"/>
            <ownedParameter xmi:id="_9wyN9i9uEeOq3KT-lRHlww" name="myStrategy" type="_9rIR4S9uEeOq3KT-lRHlww"/>
            <ownedParameter xmi:id="_9wyN9y9uEeOq3KT-lRHlww" name="myPaint" type="_9qjqIC9uEeOq3KT-lRHlww"/>
            <ownedParameter xmi:id="_9wyN-C9uEeOq3KT-lRHlww" type="_9qPhEC9uEeOq3KT-lRHlww" direction="return"/>
            <language>java</language>
            <body>this.radius = myRadius;
		this.location = myLocation;
		this.color = myColor;
		this.velocity = myVelocity;
		this.panel = myPanel;
		this.strategy = myStrategy;
		this.paintThis = myPaint;
		interact =  new NormalElasticStrategy();
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wyN-S9uEeOq3KT-lRHlww" name="setPaintStrategy" specification="_9ua2cC9uEeOq3KT-lRHlww">
            <ownedParameter xmi:id="_9wyN-i9uEeOq3KT-lRHlww" name="newStrategy" type="_9qjqIC9uEeOq3KT-lRHlww"/>
            <language>java</language>
            <body>this.paintThis = newStrategy;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wyN-y9uEeOq3KT-lRHlww" name="getPaintStrategy" specification="_9qRWQC9uEeOq3KT-lRHlww">
            <ownedParameter xmi:id="_9wyN_C9uEeOq3KT-lRHlww" type="_9qjqIC9uEeOq3KT-lRHlww" direction="return"/>
            <language>java</language>
            <body>return this.paintThis;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wyN_S9uEeOq3KT-lRHlww" name="getInteractStrategy" specification="_9qRWQS9uEeOq3KT-lRHlww">
            <ownedParameter xmi:id="_9wyN_i9uEeOq3KT-lRHlww" type="_9p3GkC9uEeOq3KT-lRHlww" direction="return"/>
            <language>java</language>
            <body>return interact;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wy1AC9uEeOq3KT-lRHlww" name="setInteractStrategy" specification="_9ua2dC9uEeOq3KT-lRHlww">
            <ownedParameter xmi:id="_9wy1AS9uEeOq3KT-lRHlww" name="newInteraction" type="_9p3GkC9uEeOq3KT-lRHlww"/>
            <language>java</language>
            <body>interact = newInteraction;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wy1Ai9uEeOq3KT-lRHlww" name="update" specification="_9vo-cS9uEeOq3KT-lRHlww">
            <ownedParameter xmi:id="_9wy1Ay9uEeOq3KT-lRHlww" name="d" type="_9uZBQC9uEeOq3KT-lRHlww"/>
            <ownedParameter xmi:id="_9wy1BC9uEeOq3KT-lRHlww" name="cmd" type="_9voXYS9uEeOq3KT-lRHlww"/>
            <language>java</language>
            <body>((IBallCmd)cmd).apply(this, (Dispatcher) d);

	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wy1BS9uEeOq3KT-lRHlww" name="paint" specification="_9vo-dC9uEeOq3KT-lRHlww">
            <ownedParameter xmi:id="_9wy1Bi9uEeOq3KT-lRHlww" name="g" type="_9voXYS9uEeOq3KT-lRHlww"/>
            <language>java</language>
            <body>paintThis.paint((Graphics)g, this);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wy1By9uEeOq3KT-lRHlww" name="bounce" specification="_9qR9UC9uEeOq3KT-lRHlww">
            <language>java</language>
            <body>int yLoc = location.y;
		int xLoc = location.x;
		
		if (xLoc - radius &lt; 0){
			velocity.x = -velocity.x;
			location.x = (int) (2*radius - location.x);
		}
		if (xLoc + radius > panel.getWidth()){
			velocity.x = -velocity.x;
			location.x = (int) (2*(panel.getWidth()-radius) - location.x);
		}
		if (yLoc - radius &lt; 0){
			velocity.y = -velocity.y;
			location.y = (int) (2*radius - location.y);
		}
		if (yLoc + radius > panel.getHeight()){
			velocity.y = -velocity.y;
			location.y = (int) (2*(panel.getHeight()-radius) - location.y);
		}
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wy1CC9uEeOq3KT-lRHlww" name="interactWith" specification="_9ubdgS9uEeOq3KT-lRHlww">
            <ownedParameter xmi:id="_9wy1CS9uEeOq3KT-lRHlww" name="target" type="_9qPhEC9uEeOq3KT-lRHlww"/>
            <ownedParameter xmi:id="_9wy1Ci9uEeOq3KT-lRHlww" name="dispatcher" type="_9qXc4C9uEeOq3KT-lRHlww"/>
            <language>java</language>
            <body>interact.interact(this, target, dispatcher);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_9qRWQC9uEeOq3KT-lRHlww" name="getPaintStrategy" method="_9wyN-y9uEeOq3KT-lRHlww">
            <ownedParameter xmi:id="_9ua2ci9uEeOq3KT-lRHlww" type="_9qjqIC9uEeOq3KT-lRHlww" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_9qRWQS9uEeOq3KT-lRHlww" name="getInteractStrategy" method="_9wyN_S9uEeOq3KT-lRHlww">
            <ownedParameter xmi:id="_9ua2cy9uEeOq3KT-lRHlww" type="_9p3GkC9uEeOq3KT-lRHlww" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_9qR9UC9uEeOq3KT-lRHlww" name="bounce" method="_9wy1By9uEeOq3KT-lRHlww">
            <ownedComment xmi:id="_9xBehS9uEeOq3KT-lRHlww">
              <body>The bounce method defines the behavior of the ball when it 
	 * passes the boundary of the JFrame.</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_9ua2cC9uEeOq3KT-lRHlww" name="setPaintStrategy" method="_9wyN-S9uEeOq3KT-lRHlww">
            <ownedParameter xmi:id="_9ua2cS9uEeOq3KT-lRHlww" name="newStrategy" type="_9qjqIC9uEeOq3KT-lRHlww"/>
          </ownedOperation>
          <ownedOperation xmi:id="_9ua2dC9uEeOq3KT-lRHlww" name="setInteractStrategy" method="_9wy1AC9uEeOq3KT-lRHlww">
            <ownedParameter xmi:id="_9ubdgC9uEeOq3KT-lRHlww" name="newInteraction" type="_9p3GkC9uEeOq3KT-lRHlww"/>
          </ownedOperation>
          <ownedOperation xmi:id="_9ubdgS9uEeOq3KT-lRHlww" name="interactWith" method="_9wy1CC9uEeOq3KT-lRHlww">
            <ownedComment xmi:id="_9xBehi9uEeOq3KT-lRHlww">
              <body>Method to define behavior of this ball when it interacts with
	 * another ball.
	 * @param target ball to interact with
	 * @param dispatcher</body>
            </ownedComment>
            <ownedParameter xmi:id="_9ubdgi9uEeOq3KT-lRHlww" name="target" type="_9qPhEC9uEeOq3KT-lRHlww"/>
            <ownedParameter xmi:id="_9ubdgy9uEeOq3KT-lRHlww" name="dispatcher" type="_9qXc4C9uEeOq3KT-lRHlww"/>
          </ownedOperation>
          <ownedOperation xmi:id="_9vnJQC9uEeOq3KT-lRHlww" name="Ball" method="_9wyN8C9uEeOq3KT-lRHlww">
            <eAnnotations xmi:id="_9vnwUy9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_9vnwVC9uEeOq3KT-lRHlww" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_9xBegi9uEeOq3KT-lRHlww">
              <body>Constructor</body>
            </ownedComment>
            <ownedParameter xmi:id="_9vnJQS9uEeOq3KT-lRHlww" name="myLocation" type="_9uB04C9uEeOq3KT-lRHlww"/>
            <ownedParameter xmi:id="_9vnJQi9uEeOq3KT-lRHlww" name="myRadius">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9vnJQy9uEeOq3KT-lRHlww" name="myVelocity" type="_9uB04C9uEeOq3KT-lRHlww"/>
            <ownedParameter xmi:id="_9vnJRC9uEeOq3KT-lRHlww" name="myColor" type="_9uSTkC9uEeOq3KT-lRHlww"/>
            <ownedParameter xmi:id="_9vnwUC9uEeOq3KT-lRHlww" name="myPanel" type="_9t__sC9uEeOq3KT-lRHlww"/>
            <ownedParameter xmi:id="_9vnwUS9uEeOq3KT-lRHlww" name="myStrategy" type="_9rIR4S9uEeOq3KT-lRHlww"/>
            <ownedParameter xmi:id="_9vnwUi9uEeOq3KT-lRHlww" name="myPaint" type="_9qjqIC9uEeOq3KT-lRHlww"/>
            <ownedParameter xmi:id="_9vnwVS9uEeOq3KT-lRHlww" type="_9qPhEC9uEeOq3KT-lRHlww" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_9vo-cS9uEeOq3KT-lRHlww" name="update" method="_9wy1Ai9uEeOq3KT-lRHlww">
            <ownedComment xmi:id="_9xBegy9uEeOq3KT-lRHlww">
              <body>Update method is called when the dispatcher notifies all 
	 * the balls each timer cycle.
	 * @param Dispatcher d is the dispatcher
	 * @param Graphics g is the graphics object from the view</body>
            </ownedComment>
            <ownedParameter xmi:id="_9vo-ci9uEeOq3KT-lRHlww" name="d" type="_9uZBQC9uEeOq3KT-lRHlww"/>
            <ownedParameter xmi:id="_9vo-cy9uEeOq3KT-lRHlww" name="cmd" type="_9voXYS9uEeOq3KT-lRHlww"/>
          </ownedOperation>
          <ownedOperation xmi:id="_9vo-dC9uEeOq3KT-lRHlww" name="paint" method="_9wy1BS9uEeOq3KT-lRHlww">
            <ownedComment xmi:id="_9xBehC9uEeOq3KT-lRHlww">
              <body>Paint method paints circle to the view during the update method
	 * @param g Graphics object</body>
            </ownedComment>
            <ownedParameter xmi:id="_9vplgC9uEeOq3KT-lRHlww" name="g" type="_9voXYS9uEeOq3KT-lRHlww"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_9qXc4C9uEeOq3KT-lRHlww" name="Dispatcher">
          <ownedComment xmi:id="_9xBehy9uEeOq3KT-lRHlww">
            <body>The Dispatcher class communicates with all the Ball objects
and updates them each tick of the timer.
@author ammeurer
 *</body>
          </ownedComment>
          <generalization xmi:id="_9vqMkC9uEeOq3KT-lRHlww" general="_9uZBQC9uEeOq3KT-lRHlww"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wzcEC9uEeOq3KT-lRHlww" name="notifyAll" specification="_9ueg0C9uEeOq3KT-lRHlww">
            <ownedParameter xmi:id="_9wzcES9uEeOq3KT-lRHlww" name="param" type="_9qYD8C9uEeOq3KT-lRHlww"/>
            <language>java</language>
            <body>setChanged();
	    notifyObservers(param);
	  </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_9ueg0C9uEeOq3KT-lRHlww" name="notifyAll" method="_9wzcEC9uEeOq3KT-lRHlww">
            <ownedParameter xmi:id="_9ueg0S9uEeOq3KT-lRHlww" name="param" type="_9qYD8C9uEeOq3KT-lRHlww"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_9qYD8C9uEeOq3KT-lRHlww" name="IBallCmd">
          <ownedComment xmi:id="_9xBeiC9uEeOq3KT-lRHlww">
            <body>The IBallCmd interface 
@author ammeurer
 *</body>
          </ownedComment>
          <ownedOperation xmi:id="_9ufH4C9uEeOq3KT-lRHlww" name="apply" isAbstract="true">
            <ownedParameter xmi:id="_9ufH4S9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww"/>
            <ownedParameter xmi:id="_9ufH4i9uEeOq3KT-lRHlww" name="disp" type="_9qXc4C9uEeOq3KT-lRHlww"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_9xAQaC9uEeOq3KT-lRHlww" name="" memberEnd="_9wSesC9uEeOq3KT-lRHlww _9xA3cC9uEeOq3KT-lRHlww">
          <ownedEnd xmi:id="_9xA3cC9uEeOq3KT-lRHlww" name="" type="_9qPhEC9uEeOq3KT-lRHlww" association="_9xAQaC9uEeOq3KT-lRHlww"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_9xA3cS9uEeOq3KT-lRHlww" name="" memberEnd="_9wSesS9uEeOq3KT-lRHlww _9xA3ci9uEeOq3KT-lRHlww">
          <ownedEnd xmi:id="_9xA3ci9uEeOq3KT-lRHlww" name="" type="_9qPhEC9uEeOq3KT-lRHlww" association="_9xA3cS9uEeOq3KT-lRHlww"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_9xA3cy9uEeOq3KT-lRHlww" name="" memberEnd="_9wSesi9uEeOq3KT-lRHlww _9xA3dC9uEeOq3KT-lRHlww">
          <ownedEnd xmi:id="_9xA3dC9uEeOq3KT-lRHlww" name="" type="_9qPhEC9uEeOq3KT-lRHlww" association="_9xA3cy9uEeOq3KT-lRHlww"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_9xBegC9uEeOq3KT-lRHlww" name="" memberEnd="_9wTFwC9uEeOq3KT-lRHlww _9xBegS9uEeOq3KT-lRHlww">
          <ownedEnd xmi:id="_9xBegS9uEeOq3KT-lRHlww" name="" type="_9qPhEC9uEeOq3KT-lRHlww" association="_9xBegC9uEeOq3KT-lRHlww"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_9xZ5AC9uEeOq3KT-lRHlww" name="" memberEnd="_9xZ5AS9uEeOq3KT-lRHlww _9wSesy9uEeOq3KT-lRHlww">
          <ownedEnd xmi:id="_9xZ5AS9uEeOq3KT-lRHlww" name="" type="_9qPhEC9uEeOq3KT-lRHlww" association="_9xZ5AC9uEeOq3KT-lRHlww"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_9xZ5Ay9uEeOq3KT-lRHlww" name="" memberEnd="_9xagEC9uEeOq3KT-lRHlww _9wTFwS9uEeOq3KT-lRHlww">
          <ownedEnd xmi:id="_9xagEC9uEeOq3KT-lRHlww" name="" type="_9qPhEC9uEeOq3KT-lRHlww" association="_9xZ5Ay9uEeOq3KT-lRHlww"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_9xagEi9uEeOq3KT-lRHlww" name="" memberEnd="_9xagEy9uEeOq3KT-lRHlww _9wTs0C9uEeOq3KT-lRHlww">
          <ownedEnd xmi:id="_9xagEy9uEeOq3KT-lRHlww" name="" type="_9qPhEC9uEeOq3KT-lRHlww" association="_9xagEi9uEeOq3KT-lRHlww"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9qFJAC9uEeOq3KT-lRHlww" name="BallWorldModel">
        <ownedAttribute xmi:id="_9wO0UC9uEeOq3KT-lRHlww" name="adapter" visibility="private" type="_9qNr4C9uEeOq3KT-lRHlww" association="_9xW1sS9uEeOq3KT-lRHlww"/>
        <ownedAttribute xmi:id="_9wO0Ui9uEeOq3KT-lRHlww" name="timer" visibility="private" type="_9uUIwS9uEeOq3KT-lRHlww" association="_9xXcwC9uEeOq3KT-lRHlww"/>
        <ownedAttribute xmi:id="_9wPbYS9uEeOq3KT-lRHlww" name="dispatcher" visibility="private" type="_9qXc4C9uEeOq3KT-lRHlww" association="_9xXcwy9uEeOq3KT-lRHlww"/>
        <ownedAttribute xmi:id="_9wPbYy9uEeOq3KT-lRHlww" name="random" visibility="private" type="_9rVtQC9uEeOq3KT-lRHlww" association="_9xYD0S9uEeOq3KT-lRHlww">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_9wPbZC9uEeOq3KT-lRHlww" value="new Randomizer()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9wQCcS9uEeOq3KT-lRHlww" name="switcher" type="_9rPmoC9uEeOq3KT-lRHlww" association="_9xYq4S9uEeOq3KT-lRHlww">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_9wQpgS9uEeOq3KT-lRHlww" value="new SwitcherStrategy()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9wRQkS9uEeOq3KT-lRHlww" name="errorStrategyFac" visibility="private" type="_9rHq0C9uEeOq3KT-lRHlww" association="_9xZR8S9uEeOq3KT-lRHlww">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_9wRQki9uEeOq3KT-lRHlww" value="new IStrategyFac(){&#xA;&#x9;        @Override&#xA;&#x9;        /**&#xA;&#x9;         * Make the beeping error strategy&#xA;&#x9;         * @return  An instance of a beeping error strategy&#xA;&#x9;         */&#xA;&#x9;        public IUpdateStrategy make() {&#xA;&#x9;            return new IUpdateStrategy() {&#xA;&#x9;                private int count = 0; // update counter&#xA;&#x9;                @Override&#xA;&#x9;                /**&#xA;&#x9;                 * Beep the speaker every 25 updates&#xA;&#x9;                 */&#xA;&#x9;                public void updateState(Ball context, Dispatcher d) {&#xA;&#x9;                    if(25 &lt; count++){&#xA;&#x9;                        java.awt.Toolkit.getDefaultToolkit().beep(); &#xA;&#x9;                        count = 0;&#xA;&#x9;                    }&#xA;&#x9;                }&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;@Override&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;public void init(Ball context) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;// TODO Auto-generated method stub&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;            };&#xA;&#x9;        }&#xA;&#x9;    }"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wwYwC9uEeOq3KT-lRHlww" name="BallWorldModel" specification="_9uVW4C9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9wwYwS9uEeOq3KT-lRHlww" name="viewAdapter" type="_9qNr4C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wwYwi9uEeOq3KT-lRHlww" type="_9qFJAC9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>this.adapter = viewAdapter;
		dispatcher = new Dispatcher();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wwYwy9uEeOq3KT-lRHlww" name="start" specification="_9qGXIC9uEeOq3KT-lRHlww">
          <language>java</language>
          <body>int delay = 50; //timer cycle length
		ActionListener action = new ActionListener() {
			public void actionPerformed(ActionEvent e){
				adapter.update();
			}
		};
		timer = new Timer(delay, action);
		timer.start();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wwYxC9uEeOq3KT-lRHlww" name="clearBalls" specification="_9qGXIS9uEeOq3KT-lRHlww">
          <language>java</language>
          <body>dispatcher.deleteObservers(); //Remove balls by ceasing to update them 
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wwYxS9uEeOq3KT-lRHlww" name="update" specification="_9vktAC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9wwYxi9uEeOq3KT-lRHlww" name="g" type="_9uBN0C9uEeOq3KT-lRHlww">
            <eAnnotations xmi:id="_9wwYxy9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_9wwYyC9uEeOq3KT-lRHlww" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd(){

			@Override
			public void apply(Ball context, Dispatcher disp) {
				int newXLoc = context.getLocation().x += context.getVelocity().x;
				int newYLoc = context.getLocation().y += context.getVelocity().y;
				Point newLocation = new Point(newXLoc, newYLoc);
				context.setLocation(newLocation);
				context.bounce();
			
				context.getStrategy().init(context);
				context.getStrategy().updateState(context, dispatcher);
				context.paint((Graphics)g);
			}
			
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wwYyS9uEeOq3KT-lRHlww" name="loadBall" specification="_9uV98i9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9wwYyi9uEeOq3KT-lRHlww" name="thisStrategy" type="_9rIR4S9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wwYyy9uEeOq3KT-lRHlww" name="thisPaint" type="_9qjqIC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wwYzC9uEeOq3KT-lRHlww" type="_9qPhEC9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>System.out.println(thisStrategy.toString());  
		  System.out.println(thisPaint.toString());  

		  Rectangle rectLoc = new Rectangle(300, 5);
		  double radMin = 3.0;
		  double radMax = 30.0;
		  Rectangle rectVel = new Rectangle(30, 30);
		  Point startLoc = random.randomLoc(rectLoc);
		  Point startVel = random.randomVel(rectVel);
		  double startRadius = random.randomDouble(radMin, radMax);
		  Color startColor = random.randomColor();
		  Component theCanvas = adapter.getPanel();
	    	  

		  Ball returnBall = new Ball(startLoc, startRadius, startVel, startColor, theCanvas, thisStrategy, thisPaint);
		  dispatcher.addObserver(returnBall);
		  return returnBall;

	  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9ww_0C9uEeOq3KT-lRHlww" name="loadStrategy" specification="_9qG-MC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9ww_0S9uEeOq3KT-lRHlww" name="strategyName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9ww_0i9uEeOq3KT-lRHlww" type="_9rIR4S9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>try {
	    	   
	          Object[] args = new Object[]{}; // YOUR CONSTRUCTOR MAY BE DIFFERENT!!
	          java.lang.reflect.Constructor&lt;?> cs[] = Class.forName(strategyName).getConstructors();  // get all the constructors
	          java.lang.reflect.Constructor&lt;?> c = null; 
	          for(int i=0;i &lt; cs.length; i++) {  // find the first constructor with the right number of input parameters
	              if(args.length == (cs[i]).getParameterTypes().length) {
	                  c = cs[i];
	                  break;
	              }
	          }
	          IUpdateStrategy returnStrategy = (IUpdateStrategy) c.newInstance(args);
	          System.out.println(returnStrategy.toString());
	          return returnStrategy;
	    }
	    catch(Exception ex) {
	      System.err.println(&quot;Class &quot;+strategyName+&quot; failed to load. \nException = \n&quot;+ ex);
	      ex.printStackTrace();  // print the stack trace to help in debugging.
	      return null;
	    }
	  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9ww_0y9uEeOq3KT-lRHlww" name="loadPaintStrategy" specification="_9qHlQC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9ww_1C9uEeOq3KT-lRHlww" name="paintName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9ww_1S9uEeOq3KT-lRHlww" type="_9qjqIC9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>try {
		    	 System.out.println(&quot;got to loadPaintStrategy for &quot; + paintName);
		          Object[] args = new Object[]{}; 
		          java.lang.reflect.Constructor&lt;?> cs[] = Class.forName(paintName).getConstructors();  // get all the constructors
		          java.lang.reflect.Constructor&lt;?> c = null; 
		          for(int i=0;i &lt; cs.length; i++) {  // find the first constructor with the right number of input parameters
		              if(args.length == (cs[i]).getParameterTypes().length) {
		                  c = cs[i];
		                  break;
		              }
		          }
		          IPaintStrategy returnStrategy = (IPaintStrategy) c.newInstance(args);
		          System.out.println(returnStrategy.toString());
		          return returnStrategy;
		    }
		    catch(Exception ex) {
		      System.err.println(&quot;Class &quot;+paintName+&quot; failed to load. \nException = \n&quot;+ ex);
		      ex.printStackTrace();  // print the stack trace to help in debugging.
		      return null;
		    }
	  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9ww_1i9uEeOq3KT-lRHlww" name="makeStrategyFac" specification="_9qIMUC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9ww_1y9uEeOq3KT-lRHlww" name="className">
            <eAnnotations xmi:id="_9ww_2C9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_9ww_2S9uEeOq3KT-lRHlww" key="final"/>
            </eAnnotations>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9ww_2i9uEeOq3KT-lRHlww" type="_9rHq0C9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>if(null == className) return errorStrategyFac;
		 return new IStrategyFac(){
			 public IUpdateStrategy make(){
				 System.out.println(className);
				 return loadStrategy(className);
			 }
			 public String toString(){
				 return className;
			 }
		 };
	 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9ww_2y9uEeOq3KT-lRHlww" name="makePaintStrategyFac" specification="_9qIzYC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9ww_3C9uEeOq3KT-lRHlww" name="className">
            <eAnnotations xmi:id="_9ww_3S9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_9ww_3i9uEeOq3KT-lRHlww" key="final"/>
            </eAnnotations>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9ww_3y9uEeOq3KT-lRHlww" type="_9qk4QC9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>System.out.println(&quot;Got to the makePaintFac for &quot; + className);
		 if(null == className) return null;
		 return new IPaintStrategyFac(){
			 public IPaintStrategy make(){
				 System.out.println(className);
				 return loadPaintStrategy(className);
			 }
			 public String toString(){
				 return className;
			 }
		 };
	 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wxm4C9uEeOq3KT-lRHlww" name="combineStrategyFacs" specification="_9uWlBC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9wxm4S9uEeOq3KT-lRHlww" name="stratFac1" type="_9rHq0C9uEeOq3KT-lRHlww">
            <eAnnotations xmi:id="_9wxm4i9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_9wxm4y9uEeOq3KT-lRHlww" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_9wxm5C9uEeOq3KT-lRHlww" name="stratFac2" type="_9rHq0C9uEeOq3KT-lRHlww">
            <eAnnotations xmi:id="_9wxm5S9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_9wxm5i9uEeOq3KT-lRHlww" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_9wxm5y9uEeOq3KT-lRHlww" type="_9rHq0C9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>if (null == stratFac1 || null == stratFac2) return errorStrategyFac;
		 return new IStrategyFac() {
			 public IUpdateStrategy make() {
				 return new MultiStrategy(stratFac1.make(), stratFac2.make());
			 }
			 public String toString(){
				 return stratFac1.toString() + &quot;-&quot; + stratFac2.toString();
			 }
		 };
	 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wxm6C9uEeOq3KT-lRHlww" name="makeSwitcherBall" specification="_9qJacC9uEeOq3KT-lRHlww">
          <language>java</language>
          <body>// TO-DO grab paint strategy from view 
		this.loadBall(switcher, null);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_9qGXIC9uEeOq3KT-lRHlww" name="start" method="_9wwYwy9uEeOq3KT-lRHlww">
          <ownedComment xmi:id="_9w_pVS9uEeOq3KT-lRHlww">
            <body>start method starts up timer and anything else that needs to happen 
	 * when the GUI is first run.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_9qGXIS9uEeOq3KT-lRHlww" name="clearBalls" method="_9wwYxC9uEeOq3KT-lRHlww">
          <ownedComment xmi:id="_9w_pVi9uEeOq3KT-lRHlww">
            <body>clearBalls wipes all the balls from the GUI.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_9qG-MC9uEeOq3KT-lRHlww" name="loadStrategy" method="_9ww_0C9uEeOq3KT-lRHlww">
          <ownedComment xmi:id="_9w_pWS9uEeOq3KT-lRHlww">
            <body>The following method returns an instance of an IUpdateStrategy, given a fully qualified class name (package.classname) of
	  * a subclass of ABall.
	  * The method assumes that there is only one constructor for the supplied class that has the same *number* of
	  * input parameters as specified in the args array and that it conforms to a specific
	  * signature, i.e. specific order and types of input parameters in the args array.
	  * @param className A string that is the fully qualified class name of the desired object
	  * @return An instance of the supplied class.</body>
          </ownedComment>
          <ownedParameter xmi:id="_9qG-MS9uEeOq3KT-lRHlww" name="strategyName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9uWlAC9uEeOq3KT-lRHlww" type="_9rIR4S9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9qHlQC9uEeOq3KT-lRHlww" name="loadPaintStrategy" method="_9ww_0y9uEeOq3KT-lRHlww">
          <ownedComment xmi:id="_9w_pWi9uEeOq3KT-lRHlww">
            <body>The following method returns an instance of an IPaintStrategy, given a fully qualified class name (package.classname) of
		  * a subclass of ABall.
		  * The method assumes that there is only one constructor for the supplied class that has the same *number* of
		  * input parameters as specified in the args array and that it conforms to a specific
		  * signature, i.e. specific order and types of input parameters in the args array.
		  * @param className A string that is the fully qualified class name of the desired object
		  * @return An instance of the supplied class.</body>
          </ownedComment>
          <ownedParameter xmi:id="_9qHlQS9uEeOq3KT-lRHlww" name="paintName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9uWlAS9uEeOq3KT-lRHlww" type="_9qjqIC9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9qIMUC9uEeOq3KT-lRHlww" name="makeStrategyFac" method="_9ww_1i9uEeOq3KT-lRHlww">
          <ownedComment xmi:id="_9xAQYC9uEeOq3KT-lRHlww">
            <body>makeStrategyFac allows us to send packages b/t the model and view.   
	  * @param className is the name of the strategy to make
	  * @return an IStrategyFac</body>
          </ownedComment>
          <ownedParameter xmi:id="_9qIMUS9uEeOq3KT-lRHlww" name="className">
            <eAnnotations xmi:id="_9qIMUi9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_9qIMUy9uEeOq3KT-lRHlww" key="final"/>
            </eAnnotations>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9uWlAi9uEeOq3KT-lRHlww" type="_9rHq0C9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9qIzYC9uEeOq3KT-lRHlww" name="makePaintStrategyFac" method="_9ww_2y9uEeOq3KT-lRHlww">
          <ownedComment xmi:id="_9xAQYS9uEeOq3KT-lRHlww">
            <body>makePaintStrategyFac allows us to send packages b/t the model and view.   
	  * @param className is the name of the strategy to make
	  * @return an IPaintStrategyFac</body>
          </ownedComment>
          <ownedParameter xmi:id="_9qIzYS9uEeOq3KT-lRHlww" name="className">
            <eAnnotations xmi:id="_9qIzYi9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_9qIzYy9uEeOq3KT-lRHlww" key="final"/>
            </eAnnotations>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9uWlAy9uEeOq3KT-lRHlww" type="_9qk4QC9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9qJacC9uEeOq3KT-lRHlww" name="makeSwitcherBall" method="_9wxm6C9uEeOq3KT-lRHlww">
          <ownedComment xmi:id="_9xAQYy9uEeOq3KT-lRHlww">
            <body>Switch all the balls at once to a single strategy</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_9uVW4C9uEeOq3KT-lRHlww" name="BallWorldModel" method="_9wwYwC9uEeOq3KT-lRHlww">
          <eAnnotations xmi:id="_9uVW4i9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_9uV98C9uEeOq3KT-lRHlww" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_9w_pVC9uEeOq3KT-lRHlww">
            <body>Constructor initializes adapter and dispatcher.</body>
          </ownedComment>
          <ownedParameter xmi:id="_9uVW4S9uEeOq3KT-lRHlww" name="viewAdapter" type="_9qNr4C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9uV98S9uEeOq3KT-lRHlww" type="_9qFJAC9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9uV98i9uEeOq3KT-lRHlww" name="loadBall" method="_9wwYyS9uEeOq3KT-lRHlww">
          <ownedComment xmi:id="_9w_pWC9uEeOq3KT-lRHlww">
            <body>The following method returns an instance of a Ball, given a fully qualified class name (package.classname) of
	  * a strategy class.
	  * The method assumes that there is only one constructor for the supplied class that has the same *number* of
	  * input parameters as specified in the args array and that it conforms to a specific
	  * signature, i.e. specific order and types of input parameters in the args array.
	  * @param className A string that is the fully qualified class name of the desired object
	  * @return An instance of the supplied class.</body>
          </ownedComment>
          <ownedParameter xmi:id="_9uV98y9uEeOq3KT-lRHlww" name="thisStrategy" type="_9rIR4S9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9uV99C9uEeOq3KT-lRHlww" name="thisPaint" type="_9qjqIC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9uV99S9uEeOq3KT-lRHlww" type="_9qPhEC9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9uWlBC9uEeOq3KT-lRHlww" name="combineStrategyFacs" method="_9wxm4C9uEeOq3KT-lRHlww">
          <ownedComment xmi:id="_9xAQYi9uEeOq3KT-lRHlww">
            <body>Function to package two IUpdateStrategies together
	  * @param stratFac1 strategy to combine
	  * @param stratFac2 strategy to combine
	  * @return and IStrategyFac that contains two strategies</body>
          </ownedComment>
          <ownedParameter xmi:id="_9uWlBS9uEeOq3KT-lRHlww" name="stratFac1" type="_9rHq0C9uEeOq3KT-lRHlww">
            <eAnnotations xmi:id="_9uXMEi9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_9uXMEy9uEeOq3KT-lRHlww" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_9uXMEC9uEeOq3KT-lRHlww" name="stratFac2" type="_9rHq0C9uEeOq3KT-lRHlww">
            <eAnnotations xmi:id="_9uXMFC9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_9uXMFS9uEeOq3KT-lRHlww" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_9uXMES9uEeOq3KT-lRHlww" type="_9rHq0C9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9vktAC9uEeOq3KT-lRHlww" name="update" method="_9wwYxS9uEeOq3KT-lRHlww">
          <ownedComment xmi:id="_9w_pVy9uEeOq3KT-lRHlww">
            <body>Triggers update method of all balls and anonymously instantiates
an IBallCmd object.
@param g Graphics object</body>
          </ownedComment>
          <ownedParameter xmi:id="_9vlUEC9uEeOq3KT-lRHlww" name="g" type="_9uBN0C9uEeOq3KT-lRHlww">
            <eAnnotations xmi:id="_9vlUES9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_9vlUEi9uEeOq3KT-lRHlww" key="final"/>
            </eAnnotations>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_9qNr4C9uEeOq3KT-lRHlww" name="ViewAdapter">
        <ownedComment xmi:id="_9xAQZC9uEeOq3KT-lRHlww">
          <body>ViewAdapter is anonymously instantiated in Controller
Allows model to communicate with view.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_9qOS8i9uEeOq3KT-lRHlww" name="switcher" type="_9rIR4S9uEeOq3KT-lRHlww" isReadOnly="true" association="_9xTLUC9uEeOq3KT-lRHlww"/>
        <ownedOperation xmi:id="_9qOS8C9uEeOq3KT-lRHlww" name="getPanel">
          <ownedComment xmi:id="_9xAQZS9uEeOq3KT-lRHlww">
            <body>Returns the panel of the GUI where the balls bounce
	 * @return GUI ball panel</body>
          </ownedComment>
          <ownedParameter xmi:id="_9vl7IC9uEeOq3KT-lRHlww" type="_9t__sC9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9qOS8S9uEeOq3KT-lRHlww" name="update">
          <ownedComment xmi:id="_9xAQZi9uEeOq3KT-lRHlww">
            <body>Update the view based on the model</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xTLUC9uEeOq3KT-lRHlww" name="" memberEnd="_9xTLUS9uEeOq3KT-lRHlww _9qOS8i9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xTLUS9uEeOq3KT-lRHlww" name="" type="_9qNr4C9uEeOq3KT-lRHlww" association="_9xTLUC9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xW1sS9uEeOq3KT-lRHlww" name="" memberEnd="_9xW1si9uEeOq3KT-lRHlww _9wO0UC9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xW1si9uEeOq3KT-lRHlww" name="" type="_9qFJAC9uEeOq3KT-lRHlww" association="_9xW1sS9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xXcwC9uEeOq3KT-lRHlww" name="" memberEnd="_9xXcwS9uEeOq3KT-lRHlww _9wO0Ui9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xXcwS9uEeOq3KT-lRHlww" name="" type="_9qFJAC9uEeOq3KT-lRHlww" association="_9xXcwC9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xXcwy9uEeOq3KT-lRHlww" name="" memberEnd="_9xXcxC9uEeOq3KT-lRHlww _9wPbYS9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xXcxC9uEeOq3KT-lRHlww" name="" type="_9qFJAC9uEeOq3KT-lRHlww" association="_9xXcwy9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xYD0S9uEeOq3KT-lRHlww" name="" memberEnd="_9xYD0i9uEeOq3KT-lRHlww _9wPbYy9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xYD0i9uEeOq3KT-lRHlww" name="" type="_9qFJAC9uEeOq3KT-lRHlww" association="_9xYD0S9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xYq4S9uEeOq3KT-lRHlww" name="" memberEnd="_9xYq4i9uEeOq3KT-lRHlww _9wQCcS9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xYq4i9uEeOq3KT-lRHlww" name="" type="_9qFJAC9uEeOq3KT-lRHlww" association="_9xYq4S9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xZR8S9uEeOq3KT-lRHlww" name="" memberEnd="_9xZR8i9uEeOq3KT-lRHlww _9wRQkS9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xZR8i9uEeOq3KT-lRHlww" name="" type="_9qFJAC9uEeOq3KT-lRHlww" association="_9xZR8S9uEeOq3KT-lRHlww"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_9oVckS9uEeOq3KT-lRHlww" name="paint_strategies">
      <packagedElement xmi:type="uml:Package" xmi:id="_9otQAC9uEeOq3KT-lRHlww" name="shape">
        <packagedElement xmi:type="uml:Class" xmi:id="_9q3MIC9uEeOq3KT-lRHlww" clientDependency="_9uyC0S9uEeOq3KT-lRHlww" name="EllipseShapeFactory">
          <ownedComment xmi:id="_9xCspi9uEeOq3KT-lRHlww">
            <body>The EllipseShapeFactory creates an ellipse shape
@author ammeurer
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_9wZzcC9uEeOq3KT-lRHlww" name="Singleton" isStatic="true" type="_9q3MIC9uEeOq3KT-lRHlww" association="_9xf_oS9uEeOq3KT-lRHlww">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_9wZzcS9uEeOq3KT-lRHlww" value="new EllipseShapeFactory()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_9uyC0S9uEeOq3KT-lRHlww" client="_9q3MIC9uEeOq3KT-lRHlww" supplier="_9q5oYC9uEeOq3KT-lRHlww" contract="_9q5oYC9uEeOq3KT-lRHlww"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w47oy9uEeOq3KT-lRHlww" name="makeShape" specification="_9q3zMi9uEeOq3KT-lRHlww">
            <ownedParameter xmi:id="_9w47pC9uEeOq3KT-lRHlww" name="x">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9w47pS9uEeOq3KT-lRHlww" name="y">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9w47pi9uEeOq3KT-lRHlww" name="xScale">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9w47py9uEeOq3KT-lRHlww" name="yScale">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9w47qC9uEeOq3KT-lRHlww" type="_9urVIC9uEeOq3KT-lRHlww" direction="return"/>
            <language>java</language>
            <body>System.out.println(&quot;Got to shape factory&quot;);
		return new Ellipse2D.Double(x-(xScale/2), y-(yScale/2), xScale, yScale);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_9q3MIS9uEeOq3KT-lRHlww" name="EllipseShapeFactory">
            <eAnnotations xmi:id="_9q3MIi9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_9q3MIy9uEeOq3KT-lRHlww" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_9q3zMS9uEeOq3KT-lRHlww" type="_9q3MIC9uEeOq3KT-lRHlww" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_9q3zMi9uEeOq3KT-lRHlww" name="makeShape" method="_9w47oy9uEeOq3KT-lRHlww">
            <ownedParameter xmi:id="_9q3zMy9uEeOq3KT-lRHlww" name="x">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9q3zNC9uEeOq3KT-lRHlww" name="y">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9q3zNS9uEeOq3KT-lRHlww" name="xScale">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9q4aQC9uEeOq3KT-lRHlww" name="yScale">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9v7SUC9uEeOq3KT-lRHlww" type="_9urVIC9uEeOq3KT-lRHlww" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_9q5oYC9uEeOq3KT-lRHlww" name="IShapeFactory">
          <ownedComment xmi:id="_9xCspy9uEeOq3KT-lRHlww">
            <body>IShapeFactory is the interface that all the shape factories implement
@author ammeurer
 *</body>
          </ownedComment>
          <ownedOperation xmi:id="_9q6PcC9uEeOq3KT-lRHlww" name="makeShape">
            <ownedParameter xmi:id="_9q6PcS9uEeOq3KT-lRHlww" name="x">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9q6Pci9uEeOq3KT-lRHlww" name="y">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9q6Pcy9uEeOq3KT-lRHlww" name="xScale">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9q6PdC9uEeOq3KT-lRHlww" name="yScale">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9v7SUS9uEeOq3KT-lRHlww" type="_9urVIC9uEeOq3KT-lRHlww" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_9q62gC9uEeOq3KT-lRHlww" clientDependency="_9uz4AS9uEeOq3KT-lRHlww" name="PolygonFactory">
          <ownedComment xmi:id="_9xCsqC9uEeOq3KT-lRHlww">
            <body>The PolygonFactory creates a polygon
@author ammeurer
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_9wZzcy9uEeOq3KT-lRHlww" name="AT" visibility="private" type="_9uUv0C9uEeOq3KT-lRHlww" association="_9xgmsS9uEeOq3KT-lRHlww"/>
          <ownedAttribute xmi:id="_9waagS9uEeOq3KT-lRHlww" name="scale" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_9waagy9uEeOq3KT-lRHlww" name="polygon" visibility="private" type="_9uyp4C9uEeOq3KT-lRHlww" association="_9xhNwS9uEeOq3KT-lRHlww"/>
          <ownedAttribute xmi:id="_9wbBkS9uEeOq3KT-lRHlww" name="bounds" visibility="private" type="_9uzQ8S9uEeOq3KT-lRHlww" association="_9xh00C9uEeOq3KT-lRHlww"/>
          <ownedAttribute xmi:id="_9wbooC9uEeOq3KT-lRHlww" name="xCenter" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_9wbooi9uEeOq3KT-lRHlww" name="yCenter" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_9uz4AS9uEeOq3KT-lRHlww" client="_9q62gC9uEeOq3KT-lRHlww" supplier="_9q5oYC9uEeOq3KT-lRHlww" contract="_9q5oYC9uEeOq3KT-lRHlww"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w5isC9uEeOq3KT-lRHlww" name="PolygonFactory" specification="_9v75YC9uEeOq3KT-lRHlww">
            <ownedParameter xmi:id="_9w5isS9uEeOq3KT-lRHlww" name="at" type="_9uUv0C9uEeOq3KT-lRHlww"/>
            <ownedParameter xmi:id="_9w5isi9uEeOq3KT-lRHlww" name="scaleFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9w5isy9uEeOq3KT-lRHlww" name="points" type="_9uB04C9uEeOq3KT-lRHlww">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9w5itC9uEeOq3KT-lRHlww" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9w5itS9uEeOq3KT-lRHlww" type="_9q62gC9uEeOq3KT-lRHlww" direction="return"/>
            <language>java</language>
            <body>AT = at;
		scale = scaleFactor;
		polygon = new Polygon();
		for(int i = 0; i &lt; points.length; i++){
			polygon.addPoint(points[i].x,points[i].y);

		}
		bounds = polygon.getBounds2D();
		xCenter = bounds.getCenterX();
		yCenter = bounds.getCenterY();
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w5iti9uEeOq3KT-lRHlww" name="makeShape" specification="_9q8EoC9uEeOq3KT-lRHlww">
            <ownedParameter xmi:id="_9w5ity9uEeOq3KT-lRHlww" name="x">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9w5iuC9uEeOq3KT-lRHlww" name="y">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9w5iuS9uEeOq3KT-lRHlww" name="xScale">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9w5iui9uEeOq3KT-lRHlww" name="yScale">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9w5iuy9uEeOq3KT-lRHlww" type="_9urVIC9uEeOq3KT-lRHlww" direction="return"/>
            <language>java</language>
            <body>AT.setToTranslation(x, y);
	    AT.scale(xScale*scale, yScale*scale);  // optional rotation can be added as well
	    return AT.createTransformedShape(polygon);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_9q8EoC9uEeOq3KT-lRHlww" name="makeShape" method="_9w5iti9uEeOq3KT-lRHlww">
            <ownedParameter xmi:id="_9q8EoS9uEeOq3KT-lRHlww" name="x">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9q8Eoi9uEeOq3KT-lRHlww" name="y">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9q8Eoy9uEeOq3KT-lRHlww" name="xScale">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9q8rsC9uEeOq3KT-lRHlww" name="yScale">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9v9HgC9uEeOq3KT-lRHlww" type="_9urVIC9uEeOq3KT-lRHlww" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_9v75YC9uEeOq3KT-lRHlww" name="PolygonFactory" method="_9w5isC9uEeOq3KT-lRHlww">
            <eAnnotations xmi:id="_9v8gci9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_9v8gcy9uEeOq3KT-lRHlww" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_9v75YS9uEeOq3KT-lRHlww" name="at" type="_9uUv0C9uEeOq3KT-lRHlww"/>
            <ownedParameter xmi:id="_9v8gcC9uEeOq3KT-lRHlww" name="scaleFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9v8gcS9uEeOq3KT-lRHlww" name="points" type="_9uB04C9uEeOq3KT-lRHlww">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9v8gdS9uEeOq3KT-lRHlww" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9v8gdC9uEeOq3KT-lRHlww" type="_9q62gC9uEeOq3KT-lRHlww" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_9q_H8C9uEeOq3KT-lRHlww" clientDependency="_9u1tMC9uEeOq3KT-lRHlww" name="RectangleShapeFactory">
          <ownedComment xmi:id="_9xCsqS9uEeOq3KT-lRHlww">
            <body>The RectangeleShapeFactory creates a rectangle shape
@author ammeurer
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_9wcPsC9uEeOq3KT-lRHlww" name="Singleton" isStatic="true" type="_9q_H8C9uEeOq3KT-lRHlww" association="_9xh00y9uEeOq3KT-lRHlww">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_9wcPsS9uEeOq3KT-lRHlww" value="new RectangleShapeFactory()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_9u1tMC9uEeOq3KT-lRHlww" client="_9q_H8C9uEeOq3KT-lRHlww" supplier="_9q5oYC9uEeOq3KT-lRHlww" contract="_9q5oYC9uEeOq3KT-lRHlww"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w5ivC9uEeOq3KT-lRHlww" name="makeShape" specification="_9rAWEC9uEeOq3KT-lRHlww">
            <ownedParameter xmi:id="_9w5ivS9uEeOq3KT-lRHlww" name="x">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9w5ivi9uEeOq3KT-lRHlww" name="y">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9w5ivy9uEeOq3KT-lRHlww" name="xScale">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9w5iwC9uEeOq3KT-lRHlww" name="yScale">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9w5iwS9uEeOq3KT-lRHlww" type="_9urVIC9uEeOq3KT-lRHlww" direction="return"/>
            <language>java</language>
            <body>return new Rectangle2D.Double(x-(xScale/2), y-(yScale/2), xScale, yScale);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_9q_H8S9uEeOq3KT-lRHlww" name="RectangleShapeFactory">
            <eAnnotations xmi:id="_9q_vAC9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_9q_vAS9uEeOq3KT-lRHlww" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_9q_vAy9uEeOq3KT-lRHlww" type="_9q_H8C9uEeOq3KT-lRHlww" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_9rAWEC9uEeOq3KT-lRHlww" name="makeShape" method="_9w5ivC9uEeOq3KT-lRHlww">
            <ownedParameter xmi:id="_9rAWES9uEeOq3KT-lRHlww" name="x">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9rAWEi9uEeOq3KT-lRHlww" name="y">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9rAWEy9uEeOq3KT-lRHlww" name="xScale">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9rAWFC9uEeOq3KT-lRHlww" name="yScale">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_9v9HgS9uEeOq3KT-lRHlww" type="_9urVIC9uEeOq3KT-lRHlww" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_9xf_oS9uEeOq3KT-lRHlww" name="" memberEnd="_9xf_oi9uEeOq3KT-lRHlww _9wZzcC9uEeOq3KT-lRHlww">
          <ownedEnd xmi:id="_9xf_oi9uEeOq3KT-lRHlww" name="" type="_9q3MIC9uEeOq3KT-lRHlww" association="_9xf_oS9uEeOq3KT-lRHlww"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_9xgmsS9uEeOq3KT-lRHlww" name="" memberEnd="_9xgmsi9uEeOq3KT-lRHlww _9wZzcy9uEeOq3KT-lRHlww">
          <ownedEnd xmi:id="_9xgmsi9uEeOq3KT-lRHlww" name="" type="_9q62gC9uEeOq3KT-lRHlww" association="_9xgmsS9uEeOq3KT-lRHlww"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_9xhNwS9uEeOq3KT-lRHlww" name="" memberEnd="_9xhNwi9uEeOq3KT-lRHlww _9waagy9uEeOq3KT-lRHlww">
          <ownedEnd xmi:id="_9xhNwi9uEeOq3KT-lRHlww" name="" type="_9q62gC9uEeOq3KT-lRHlww" association="_9xhNwS9uEeOq3KT-lRHlww"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_9xh00C9uEeOq3KT-lRHlww" name="" memberEnd="_9xh00S9uEeOq3KT-lRHlww _9wbBkS9uEeOq3KT-lRHlww">
          <ownedEnd xmi:id="_9xh00S9uEeOq3KT-lRHlww" name="" type="_9q62gC9uEeOq3KT-lRHlww" association="_9xh00C9uEeOq3KT-lRHlww"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_9xh00y9uEeOq3KT-lRHlww" name="" memberEnd="_9xh01C9uEeOq3KT-lRHlww _9wcPsC9uEeOq3KT-lRHlww">
          <ownedEnd xmi:id="_9xh01C9uEeOq3KT-lRHlww" name="" type="_9q_H8C9uEeOq3KT-lRHlww" association="_9xh00y9uEeOq3KT-lRHlww"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9qZSEC9uEeOq3KT-lRHlww" clientDependency="_9ufH4y9uEeOq3KT-lRHlww" name="APaintStrategy" isAbstract="true">
        <ownedComment xmi:id="_9xBeiS9uEeOq3KT-lRHlww">
          <body>APaintStrategy is the abstract class for all painting strategies.
@author ammeurer
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_9wTs0i9uEeOq3KT-lRHlww" name="at" visibility="protected" type="_9uUv0C9uEeOq3KT-lRHlww" association="_9xbHIS9uEeOq3KT-lRHlww"/>
        <interfaceRealization xmi:id="_9ufH4y9uEeOq3KT-lRHlww" client="_9qZSEC9uEeOq3KT-lRHlww" supplier="_9qjqIC9uEeOq3KT-lRHlww" contract="_9qjqIC9uEeOq3KT-lRHlww"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wzcEi9uEeOq3KT-lRHlww" name="APaintStrategy" specification="_9vqzoC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9wzcEy9uEeOq3KT-lRHlww" name="myAT" type="_9uUv0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wzcFC9uEeOq3KT-lRHlww" type="_9qZSEC9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>at = myAT;
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wzcFS9uEeOq3KT-lRHlww" name="paint" specification="_9vrasC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9wzcFi9uEeOq3KT-lRHlww" name="g" type="_9uBN0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wzcFy9uEeOq3KT-lRHlww" name="host" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <language>java</language>
          <body>double scale = host.getRadius();
		at.setToTranslation(host.getLocation().x, host.getLocation().y);
		at.scale(scale, scale);
		at.rotate(Math.atan2(host.getVelocity().y, host.getVelocity().x));
		g.setColor(host.getColor());  
		init(host);
		paintCfg(g, host);
		paintXfrm(g, host, at);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_9ufu8C9uEeOq3KT-lRHlww" name="init">
          <ownedParameter xmi:id="_9ufu8S9uEeOq3KT-lRHlww" name="host" type="_9qPhEC9uEeOq3KT-lRHlww"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9vqzoC9uEeOq3KT-lRHlww" name="APaintStrategy" method="_9wzcEi9uEeOq3KT-lRHlww">
          <eAnnotations xmi:id="_9vqzoi9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_9vqzoy9uEeOq3KT-lRHlww" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_9vqzoS9uEeOq3KT-lRHlww" name="myAT" type="_9uUv0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9vqzpC9uEeOq3KT-lRHlww" type="_9qZSEC9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9vrasC9uEeOq3KT-lRHlww" name="paint" method="_9wzcFS9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9vrasS9uEeOq3KT-lRHlww" name="g" type="_9uBN0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9vrasi9uEeOq3KT-lRHlww" name="host" type="_9qPhEC9uEeOq3KT-lRHlww"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9vsBwi9uEeOq3KT-lRHlww" name="paintCfg" visibility="protected">
          <ownedParameter xmi:id="_9vsBwy9uEeOq3KT-lRHlww" name="g" type="_9uBN0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9vsBxC9uEeOq3KT-lRHlww" name="host" type="_9qPhEC9uEeOq3KT-lRHlww"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9vso0S9uEeOq3KT-lRHlww" name="paintXfrm" isAbstract="true">
          <ownedParameter xmi:id="_9vso0i9uEeOq3KT-lRHlww" name="g" type="_9uBN0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9vso0y9uEeOq3KT-lRHlww" name="host" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9vso1C9uEeOq3KT-lRHlww" name="myAT" type="_9uUv0C9uEeOq3KT-lRHlww"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9qcVYC9uEeOq3KT-lRHlww" clientDependency="_9uhkIC9uEeOq3KT-lRHlww" name="BallPaintStrategy">
        <ownedComment xmi:id="_9xCFkC9uEeOq3KT-lRHlww">
          <body>The Ball paint strategy directly implements the IPaintStrategy
interface, and does not use an Affine Transform, as all the 
other paint strategies do.
@author ammeurer
 *</body>
        </ownedComment>
        <interfaceRealization xmi:id="_9uhkIC9uEeOq3KT-lRHlww" client="_9qcVYC9uEeOq3KT-lRHlww" supplier="_9qjqIC9uEeOq3KT-lRHlww" contract="_9qjqIC9uEeOq3KT-lRHlww"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w0DIC9uEeOq3KT-lRHlww" name="paint" specification="_9vtP4C9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w0DIS9uEeOq3KT-lRHlww" name="g" type="_9uBN0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9w0DIi9uEeOq3KT-lRHlww" name="host" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <language>java</language>
          <body>g.setColor(host.getColor());
		int xLoc = host.getLocation().x - (int) host.getRadius();
		int yLoc = host.getLocation().y - (int) host.getRadius();
		int diameter = (int) (2*host.getRadius());
		g.fillOval(xLoc, yLoc, diameter, diameter);
		// TODO Auto-generated method stub

	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_9uiLMC9uEeOq3KT-lRHlww" name="init">
          <ownedParameter xmi:id="_9uiLMS9uEeOq3KT-lRHlww" name="host" type="_9qPhEC9uEeOq3KT-lRHlww"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9vtP4C9uEeOq3KT-lRHlww" name="paint" method="_9w0DIC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9vtP4S9uEeOq3KT-lRHlww" name="g" type="_9uBN0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9vtP4i9uEeOq3KT-lRHlww" name="host" type="_9qPhEC9uEeOq3KT-lRHlww"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9qeKkC9uEeOq3KT-lRHlww" name="BirdPaintStrategy">
        <ownedComment xmi:id="_9xCFkS9uEeOq3KT-lRHlww">
          <body>BirdPaintStrategy is a paint strategy that paints a bird gif
@author ammeurer
 *</body>
        </ownedComment>
        <generalization xmi:id="_9uiyQi9uEeOq3KT-lRHlww" general="_9q1W8C9uEeOq3KT-lRHlww"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w0DIy9uEeOq3KT-lRHlww" name="BirdPaintStrategy" specification="_9qeKkS9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w0DJC9uEeOq3KT-lRHlww" type="_9qeKkC9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>this(&quot;images/humbird_animate.gif&quot;, .5);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w0DJS9uEeOq3KT-lRHlww" name="BirdPaintStrategy" specification="_9qexoS9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w0DJi9uEeOq3KT-lRHlww" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w0DJy9uEeOq3KT-lRHlww" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w0DKC9uEeOq3KT-lRHlww" type="_9qeKkC9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>super(filename, fillFactor);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_9qeKkS9uEeOq3KT-lRHlww" name="BirdPaintStrategy" method="_9w0DIy9uEeOq3KT-lRHlww">
          <eAnnotations xmi:id="_9qeKki9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_9qeKky9uEeOq3KT-lRHlww" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_9qexoC9uEeOq3KT-lRHlww" type="_9qeKkC9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9qexoS9uEeOq3KT-lRHlww" name="BirdPaintStrategy" method="_9w0DJS9uEeOq3KT-lRHlww">
          <eAnnotations xmi:id="_9qexpC9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_9qexpS9uEeOq3KT-lRHlww" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_9qexoi9uEeOq3KT-lRHlww" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9qexoy9uEeOq3KT-lRHlww" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9qexpi9uEeOq3KT-lRHlww" type="_9qeKkC9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9qfYsC9uEeOq3KT-lRHlww" name="ButterflyPaintStrategy">
        <ownedComment xmi:id="_9xCFki9uEeOq3KT-lRHlww">
          <body>ButterflyPaintStrategy paints a butterfly gif to the GUI
@author ammeurer
 *</body>
        </ownedComment>
        <generalization xmi:id="_9ujZUC9uEeOq3KT-lRHlww" general="_9q1W8C9uEeOq3KT-lRHlww"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w0qMC9uEeOq3KT-lRHlww" name="ButterflyPaintStrategy" specification="_9qf_wC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w0qMS9uEeOq3KT-lRHlww" type="_9qfYsC9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>this(&quot;images/butterfly.gif&quot;, .5);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w0qMi9uEeOq3KT-lRHlww" name="ButterflyPaintStrategy" specification="_9qf_xC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w0qMy9uEeOq3KT-lRHlww" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w0qNC9uEeOq3KT-lRHlww" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w0qNS9uEeOq3KT-lRHlww" type="_9qfYsC9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>super(filename, fillFactor);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_9qf_wC9uEeOq3KT-lRHlww" name="ButterflyPaintStrategy" method="_9w0qMC9uEeOq3KT-lRHlww">
          <eAnnotations xmi:id="_9qf_wS9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_9qf_wi9uEeOq3KT-lRHlww" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_9qf_wy9uEeOq3KT-lRHlww" type="_9qfYsC9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9qf_xC9uEeOq3KT-lRHlww" name="ButterflyPaintStrategy" method="_9w0qMi9uEeOq3KT-lRHlww">
          <eAnnotations xmi:id="_9qgm0C9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_9qgm0S9uEeOq3KT-lRHlww" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_9qf_xS9uEeOq3KT-lRHlww" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9qf_xi9uEeOq3KT-lRHlww" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9qgm0i9uEeOq3KT-lRHlww" type="_9qfYsC9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9qgm0y9uEeOq3KT-lRHlww" name="EllipsePaintStrategy">
        <ownedComment xmi:id="_9xCFky9uEeOq3KT-lRHlww">
          <body>Paint strategy to paint an ellipse shape</body>
        </ownedComment>
        <generalization xmi:id="_9ujZUS9uEeOq3KT-lRHlww" general="_9qxFgC9uEeOq3KT-lRHlww"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w0qNi9uEeOq3KT-lRHlww" name="EllipsePaintStrategy" specification="_9qhN4C9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w0qNy9uEeOq3KT-lRHlww" type="_9qgm0y9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>this(new AffineTransform(), 0, 0, 4.0/3.0, 2.0/3.0);
	  System.out.println(&quot;got to 1st constructor&quot;);

  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w0qOC9uEeOq3KT-lRHlww" name="EllipsePaintStrategy" specification="_9vueAC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w0qOS9uEeOq3KT-lRHlww" name="at" type="_9uUv0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9w0qOi9uEeOq3KT-lRHlww" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w0qOy9uEeOq3KT-lRHlww" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w0qPC9uEeOq3KT-lRHlww" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w0qPS9uEeOq3KT-lRHlww" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w0qPi9uEeOq3KT-lRHlww" type="_9qgm0y9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>super(at, EllipseShapeFactory.Singleton.makeShape(x,y,width,height));
  </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_9qhN4C9uEeOq3KT-lRHlww" name="EllipsePaintStrategy" method="_9w0qNi9uEeOq3KT-lRHlww">
          <eAnnotations xmi:id="_9qhN4S9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_9qhN4i9uEeOq3KT-lRHlww" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_9qhN4y9uEeOq3KT-lRHlww" type="_9qgm0y9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9vueAC9uEeOq3KT-lRHlww" name="EllipsePaintStrategy" method="_9w0qOC9uEeOq3KT-lRHlww">
          <eAnnotations xmi:id="_9vueBi9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_9vueBy9uEeOq3KT-lRHlww" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_9vueAS9uEeOq3KT-lRHlww" name="at" type="_9uUv0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9vueAi9uEeOq3KT-lRHlww" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9vueAy9uEeOq3KT-lRHlww" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9vueBC9uEeOq3KT-lRHlww" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9vueBS9uEeOq3KT-lRHlww" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9vueCC9uEeOq3KT-lRHlww" type="_9qgm0y9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9qicAC9uEeOq3KT-lRHlww" name="FishPaintStrategy">
        <ownedComment xmi:id="_9xCFlC9uEeOq3KT-lRHlww">
          <body>FishPaintStrategy paints a composite shape that resembles a fish to the GUI
@author ammeurer
 *</body>
        </ownedComment>
        <generalization xmi:id="_9ukAYC9uEeOq3KT-lRHlww" general="_9qpJsC9uEeOq3KT-lRHlww"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w1RQC9uEeOq3KT-lRHlww" name="FishPaintStrategy" specification="_9qicAS9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w1RQS9uEeOq3KT-lRHlww" type="_9qicAC9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>this(new AffineTransform(), 0, 0, 10.0/3.0, 2.0/3.0);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w1RQi9uEeOq3KT-lRHlww" name="FishPaintStrategy" specification="_9vvFEC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w1RQy9uEeOq3KT-lRHlww" name="at" type="_9uUv0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9w1RRC9uEeOq3KT-lRHlww" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w1RRS9uEeOq3KT-lRHlww" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w1RRi9uEeOq3KT-lRHlww" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w1RRy9uEeOq3KT-lRHlww" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w1RSC9uEeOq3KT-lRHlww" type="_9qicAC9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>super(at, new APaintStrategy[]{new TrianglePaintStrategy(at, -4.0/3.0, -1.0/6.0, 1.0, 1.0), new EllipsePaintStrategy(at, 0, 0, 4.0/3.0, 2.0/3.0)});
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_9qicAS9uEeOq3KT-lRHlww" name="FishPaintStrategy" method="_9w1RQC9uEeOq3KT-lRHlww">
          <eAnnotations xmi:id="_9qicAi9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_9qicAy9uEeOq3KT-lRHlww" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_9qicBC9uEeOq3KT-lRHlww" type="_9qicAC9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9vvFEC9uEeOq3KT-lRHlww" name="FishPaintStrategy" method="_9w1RQi9uEeOq3KT-lRHlww">
          <eAnnotations xmi:id="_9vvsIC9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_9vvsIS9uEeOq3KT-lRHlww" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_9vvFES9uEeOq3KT-lRHlww" name="at" type="_9uUv0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9vvFEi9uEeOq3KT-lRHlww" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9vvFEy9uEeOq3KT-lRHlww" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9vvFFC9uEeOq3KT-lRHlww" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9vvFFS9uEeOq3KT-lRHlww" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9vvsIi9uEeOq3KT-lRHlww" type="_9qicAC9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_9qjqIC9uEeOq3KT-lRHlww" name="IPaintStrategy">
        <ownedComment xmi:id="_9xCFlS9uEeOq3KT-lRHlww">
          <body>IPaintStrategy is the interface that all paint strategies implement
@author ammeurer
 *</body>
        </ownedComment>
        <ownedOperation xmi:id="_9ukncC9uEeOq3KT-lRHlww" name="init">
          <ownedParameter xmi:id="_9ukncS9uEeOq3KT-lRHlww" name="host" type="_9qPhEC9uEeOq3KT-lRHlww"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9vvsIy9uEeOq3KT-lRHlww" name="paint">
          <ownedParameter xmi:id="_9vvsJC9uEeOq3KT-lRHlww" name="g" type="_9uBN0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9vvsJS9uEeOq3KT-lRHlww" name="host" type="_9qPhEC9uEeOq3KT-lRHlww"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_9qk4QC9uEeOq3KT-lRHlww" name="IPaintStrategyFac">
        <ownedComment xmi:id="_9xCFli9uEeOq3KT-lRHlww">
          <body>IPaintStrategyFac is a factory object to wrap around an IPaintStrategy object
@author ammeurer
 *</body>
        </ownedComment>
        <ownedOperation xmi:id="_9qk4QS9uEeOq3KT-lRHlww" name="make">
          <ownedParameter xmi:id="_9uknci9uEeOq3KT-lRHlww" type="_9qjqIC9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9qlfUC9uEeOq3KT-lRHlww" name="ImagePaintStrategy">
        <ownedComment xmi:id="_9xCFly9uEeOq3KT-lRHlww">
          <body>ImagePaintStrategy paints an image from a file to the GUI
@author ammeurer
 *</body>
        </ownedComment>
        <generalization xmi:id="_9unqwS9uEeOq3KT-lRHlww" general="_9qZSEC9uEeOq3KT-lRHlww"/>
        <ownedAttribute xmi:id="_9wUT4S9uEeOq3KT-lRHlww" name="localAT" visibility="protected" type="_9uUv0C9uEeOq3KT-lRHlww" association="_9xbuMS9uEeOq3KT-lRHlww">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_9wU68C9uEeOq3KT-lRHlww" value="new AffineTransform()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9wU68i9uEeOq3KT-lRHlww" name="tempAT" visibility="package" type="_9uUv0C9uEeOq3KT-lRHlww" association="_9xcVQS9uEeOq3KT-lRHlww"/>
        <ownedAttribute xmi:id="_9wViAC9uEeOq3KT-lRHlww" name="image" visibility="private" type="_9ulOgi9uEeOq3KT-lRHlww" association="_9xc8UC9uEeOq3KT-lRHlww"/>
        <ownedAttribute xmi:id="_9wViAi9uEeOq3KT-lRHlww" name="filename" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9wWJEC9uEeOq3KT-lRHlww" name="imageObs" visibility="private" type="_9t__sC9uEeOq3KT-lRHlww" association="_9xc8Uy9uEeOq3KT-lRHlww"/>
        <ownedAttribute xmi:id="_9wWJEi9uEeOq3KT-lRHlww" name="scaleFactor" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9wWwIC9uEeOq3KT-lRHlww" name="fillFactor" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w14UC9uEeOq3KT-lRHlww" name="ImagePaintStrategy" specification="_9vw6QC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w14US9uEeOq3KT-lRHlww" name="myAT" type="_9uUv0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9w14Ui9uEeOq3KT-lRHlww" name="file">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w14Uy9uEeOq3KT-lRHlww" name="fillFac">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w14VC9uEeOq3KT-lRHlww" type="_9qlfUC9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>super(myAT);
		//localAT = myAT;
		filename = file;
		
		System.out.println(filename);
		fillFactor = fillFac;
		try {
			image = Toolkit.getDefaultToolkit().getImage(this.getClass().getResource(filename));
		}
		catch (Exception e){
			System.err.println(&quot;ImagePaintStrategy: Error reading file: &quot;+filename +&quot;\n&quot;+e);
		}
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w14VS9uEeOq3KT-lRHlww" name="init" specification="_9unDsS9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w14Vi9uEeOq3KT-lRHlww" name="host" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <language>java</language>
          <body>imageObs = host.getPanel();
	  MediaTracker mt = new MediaTracker(host.getPanel());
	  mt.addImage(image, 1);
	  try {
		  mt.waitForAll();
	  }
	  catch(Exception e){
		  System.out.println(&quot;ImagePaintStrategy.init(): Error waiting for image.  Exception = &quot;+e);
	  }
	  
	  scaleFactor = 2.0/(fillFactor*(image.getWidth(imageObs)+image.getHeight(imageObs))/2.0);
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w14Vy9uEeOq3KT-lRHlww" name="paintXfrm" specification="_9vxhUC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w14WC9uEeOq3KT-lRHlww" name="g" type="_9uBN0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9w14WS9uEeOq3KT-lRHlww" name="host" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9w14Wi9uEeOq3KT-lRHlww" name="at" type="_9uUv0C9uEeOq3KT-lRHlww"/>
          <language>java</language>
          <body>localAT.setToScale(scaleFactor, scaleFactor);
	  localAT.translate(-image.getWidth(imageObs)/2.0, -image.getHeight(imageObs)/2.0);
	  localAT.preConcatenate(at);
	  ((Graphics2D)g).drawImage(image, localAT, imageObs); 
  </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_9unDsS9uEeOq3KT-lRHlww" name="init" method="_9w14VS9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9unqwC9uEeOq3KT-lRHlww" name="host" type="_9qPhEC9uEeOq3KT-lRHlww"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9vw6QC9uEeOq3KT-lRHlww" name="ImagePaintStrategy" method="_9w14UC9uEeOq3KT-lRHlww">
          <eAnnotations xmi:id="_9vw6RC9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_9vw6RS9uEeOq3KT-lRHlww" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_9vw6QS9uEeOq3KT-lRHlww" name="myAT" type="_9uUv0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9vw6Qi9uEeOq3KT-lRHlww" name="file">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9vw6Qy9uEeOq3KT-lRHlww" name="fillFac">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9vw6Ri9uEeOq3KT-lRHlww" type="_9qlfUC9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9vxhUC9uEeOq3KT-lRHlww" name="paintXfrm" method="_9w14Vy9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9vxhUS9uEeOq3KT-lRHlww" name="g" type="_9uBN0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9vxhUi9uEeOq3KT-lRHlww" name="host" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9vxhUy9uEeOq3KT-lRHlww" name="at" type="_9uUv0C9uEeOq3KT-lRHlww"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9qpJsC9uEeOq3KT-lRHlww" name="MultiPaintStrategy">
        <ownedComment xmi:id="_9xCFmC9uEeOq3KT-lRHlww">
          <body>MultiPaintStrategy creates a composite paint strategy
@author ammeurer
 *</body>
        </ownedComment>
        <generalization xmi:id="_9uqHAy9uEeOq3KT-lRHlww" general="_9qZSEC9uEeOq3KT-lRHlww"/>
        <ownedAttribute xmi:id="_9wWwIi9uEeOq3KT-lRHlww" name="paintStrategies" visibility="private" type="_9qZSEC9uEeOq3KT-lRHlww" association="_9xdjYS9uEeOq3KT-lRHlww">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9wXXMC9uEeOq3KT-lRHlww" value="*"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w14Wy9uEeOq3KT-lRHlww" name="MultiPaintStrategy" specification="_9vyvcC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w14XC9uEeOq3KT-lRHlww" name="at" type="_9uUv0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9w14XS9uEeOq3KT-lRHlww" name="pStrats" type="_9qZSEC9uEeOq3KT-lRHlww">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9w14Xi9uEeOq3KT-lRHlww" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w14Xy9uEeOq3KT-lRHlww" type="_9qpJsC9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>super(at);
		paintStrategies = pStrats;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w2fYC9uEeOq3KT-lRHlww" name="paintXfrm" specification="_9vzWgi9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w2fYS9uEeOq3KT-lRHlww" name="g" type="_9uBN0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9w2fYi9uEeOq3KT-lRHlww" name="host" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9w2fYy9uEeOq3KT-lRHlww" name="myAT" type="_9uUv0C9uEeOq3KT-lRHlww"/>
          <language>java</language>
          <body>for(int i = 0; i &lt; paintStrategies.length; i++){
			 paintStrategies[i].paintXfrm(g, host, myAT);
		 }
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_9uqHAC9uEeOq3KT-lRHlww" name="init">
          <ownedParameter xmi:id="_9uqHAS9uEeOq3KT-lRHlww" name="host" type="_9qPhEC9uEeOq3KT-lRHlww"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9vyvcC9uEeOq3KT-lRHlww" name="MultiPaintStrategy" method="_9w14Wy9uEeOq3KT-lRHlww">
          <eAnnotations xmi:id="_9vyvcy9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_9vyvdC9uEeOq3KT-lRHlww" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_9vyvcS9uEeOq3KT-lRHlww" name="at" type="_9uUv0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9vyvci9uEeOq3KT-lRHlww" name="pStrats" type="_9qZSEC9uEeOq3KT-lRHlww">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9vzWgS9uEeOq3KT-lRHlww" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9vzWgC9uEeOq3KT-lRHlww" type="_9qpJsC9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9vzWgi9uEeOq3KT-lRHlww" name="paintXfrm" method="_9w2fYC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9vzWgy9uEeOq3KT-lRHlww" name="g" type="_9uBN0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9vzWhC9uEeOq3KT-lRHlww" name="host" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9vz9kC9uEeOq3KT-lRHlww" name="myAT" type="_9uUv0C9uEeOq3KT-lRHlww"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9qrl8C9uEeOq3KT-lRHlww" name="PolygonPaintStrategy">
        <ownedComment xmi:id="_9xCsoC9uEeOq3KT-lRHlww">
          <body>PolygonPaintStrategy is a paint strategy that paints a polygon
@author ammeurer
 *</body>
        </ownedComment>
        <generalization xmi:id="_9ur8MC9uEeOq3KT-lRHlww" general="_9qZSEC9uEeOq3KT-lRHlww"/>
        <ownedAttribute xmi:id="_9wXXMy9uEeOq3KT-lRHlww" name="shape" visibility="private" type="_9urVIC9uEeOq3KT-lRHlww" association="_9xeKcS9uEeOq3KT-lRHlww"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w2fZC9uEeOq3KT-lRHlww" name="PolygonPaintStrategy" specification="_9v0koC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w2fZS9uEeOq3KT-lRHlww" name="myAT" type="_9uUv0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9w2fZi9uEeOq3KT-lRHlww" name="this_shape" type="_9urVIC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9w2fZy9uEeOq3KT-lRHlww" type="_9qrl8C9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>super(myAT);
		shape = this_shape;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w2faC9uEeOq3KT-lRHlww" name="paintXfrm" specification="_9v1Lsy9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w2faS9uEeOq3KT-lRHlww" name="g" type="_9uBN0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9w2fai9uEeOq3KT-lRHlww" name="host" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9w2fay9uEeOq3KT-lRHlww" name="myAT" type="_9uUv0C9uEeOq3KT-lRHlww"/>
          <language>java</language>
          <body>g.setColor(host.getColor());
	      host.setLocation(new Point(host.getLocation().x-((int)shape.getBounds().getCenterX()), host.getLocation().y-((int)shape.getBounds().getCenterY())));
	      ((Graphics2D) g).fill(at.createTransformedShape(shape));
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_9v0koC9uEeOq3KT-lRHlww" name="PolygonPaintStrategy" method="_9w2fZC9uEeOq3KT-lRHlww">
          <eAnnotations xmi:id="_9v1LsC9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_9v1LsS9uEeOq3KT-lRHlww" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_9v0koS9uEeOq3KT-lRHlww" name="myAT" type="_9uUv0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9v0koi9uEeOq3KT-lRHlww" name="this_shape" type="_9urVIC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9v1Lsi9uEeOq3KT-lRHlww" type="_9qrl8C9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9v1Lsy9uEeOq3KT-lRHlww" name="paintXfrm" method="_9w2faC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9v1LtC9uEeOq3KT-lRHlww" name="g" type="_9uBN0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9v1LtS9uEeOq3KT-lRHlww" name="host" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9v1Lti9uEeOq3KT-lRHlww" name="myAT" type="_9uUv0C9uEeOq3KT-lRHlww"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9quCMC9uEeOq3KT-lRHlww" name="RectanglePaintStrategy">
        <ownedComment xmi:id="_9xCsoS9uEeOq3KT-lRHlww">
          <body>Paint strategy to paint a rectangle shape</body>
        </ownedComment>
        <generalization xmi:id="_9utKUC9uEeOq3KT-lRHlww" general="_9qxFgC9uEeOq3KT-lRHlww"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w3GcC9uEeOq3KT-lRHlww" name="RectanglePaintStrategy" specification="_9qupQC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w3GcS9uEeOq3KT-lRHlww" type="_9quCMC9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>this(new AffineTransform(), 0, 0, 8.0/3.0, 2.0/3.0);
	  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w3Gci9uEeOq3KT-lRHlww" name="RectanglePaintStrategy" specification="_9v2Z0C9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w3Gcy9uEeOq3KT-lRHlww" name="at" type="_9uUv0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9w3GdC9uEeOq3KT-lRHlww" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w3GdS9uEeOq3KT-lRHlww" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w3Gdi9uEeOq3KT-lRHlww" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w3Gdy9uEeOq3KT-lRHlww" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w3GeC9uEeOq3KT-lRHlww" type="_9quCMC9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>super(at, RectangleShapeFactory.Singleton.makeShape(x,y,width,height));
	  </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_9qupQC9uEeOq3KT-lRHlww" name="RectanglePaintStrategy" method="_9w3GcC9uEeOq3KT-lRHlww">
          <eAnnotations xmi:id="_9qupQS9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_9qupQi9uEeOq3KT-lRHlww" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_9qupQy9uEeOq3KT-lRHlww" type="_9quCMC9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9v2Z0C9uEeOq3KT-lRHlww" name="RectanglePaintStrategy" method="_9w3Gci9uEeOq3KT-lRHlww">
          <eAnnotations xmi:id="_9v2Z1i9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_9v3A4C9uEeOq3KT-lRHlww" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_9v2Z0S9uEeOq3KT-lRHlww" name="at" type="_9uUv0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9v2Z0i9uEeOq3KT-lRHlww" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9v2Z0y9uEeOq3KT-lRHlww" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9v2Z1C9uEeOq3KT-lRHlww" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9v2Z1S9uEeOq3KT-lRHlww" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9v3A4S9uEeOq3KT-lRHlww" type="_9quCMC9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9qvQUC9uEeOq3KT-lRHlww" name="SaturnPaintStrategy">
        <ownedComment xmi:id="_9xCsoi9uEeOq3KT-lRHlww">
          <body>SaturnPaintStrategy paints a Saturn image to the GUI
@author ammeurer
 *</body>
        </ownedComment>
        <generalization xmi:id="_9utxYC9uEeOq3KT-lRHlww" general="_9qlfUC9uEeOq3KT-lRHlww"/>
        <ownedAttribute xmi:id="_9wX-QS9uEeOq3KT-lRHlww" name="temp" visibility="package" type="_9uUv0C9uEeOq3KT-lRHlww" association="_9xexgS9uEeOq3KT-lRHlww">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_9wX-Qi9uEeOq3KT-lRHlww" value="localAT"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w3GeS9uEeOq3KT-lRHlww" name="SaturnPaintStrategy" specification="_9qv3YC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w3Gei9uEeOq3KT-lRHlww" type="_9qvQUC9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>this(new AffineTransform(), &quot;images/Saturn.png&quot;, 1.0);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w3tgC9uEeOq3KT-lRHlww" name="SaturnPaintStrategy" specification="_9v3A4i9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w3tgS9uEeOq3KT-lRHlww" name="myAT" type="_9uUv0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9w3tgi9uEeOq3KT-lRHlww" name="file">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w3tgy9uEeOq3KT-lRHlww" name="fillFac">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w3thC9uEeOq3KT-lRHlww" type="_9qvQUC9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>super(myAT, file, fillFac);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_9qv3YC9uEeOq3KT-lRHlww" name="SaturnPaintStrategy" method="_9w3GeS9uEeOq3KT-lRHlww">
          <eAnnotations xmi:id="_9qv3YS9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_9qv3Yi9uEeOq3KT-lRHlww" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_9qv3Yy9uEeOq3KT-lRHlww" type="_9qvQUC9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9v3A4i9uEeOq3KT-lRHlww" name="SaturnPaintStrategy" method="_9w3tgC9uEeOq3KT-lRHlww">
          <eAnnotations xmi:id="_9v3n8i9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_9v3n8y9uEeOq3KT-lRHlww" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_9v3A4y9uEeOq3KT-lRHlww" name="myAT" type="_9uUv0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9v3n8C9uEeOq3KT-lRHlww" name="file">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9v3n8S9uEeOq3KT-lRHlww" name="fillFac">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9v3n9C9uEeOq3KT-lRHlww" type="_9qvQUC9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9qxFgC9uEeOq3KT-lRHlww" name="ShapePaintStrategy">
        <ownedComment xmi:id="_9xCsoy9uEeOq3KT-lRHlww">
          <body>ShapePaintStrategy is a general shape paint class that defines
invariant aspects of a shape, like color.</body>
        </ownedComment>
        <generalization xmi:id="_9uu_gC9uEeOq3KT-lRHlww" general="_9qZSEC9uEeOq3KT-lRHlww"/>
        <ownedAttribute xmi:id="_9wYlUS9uEeOq3KT-lRHlww" name="shape" visibility="private" type="_9urVIC9uEeOq3KT-lRHlww" association="_9xfYkC9uEeOq3KT-lRHlww"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w3thS9uEeOq3KT-lRHlww" name="ShapePaintStrategy" specification="_9v4PAC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w3thi9uEeOq3KT-lRHlww" name="myAT" type="_9uUv0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9w3thy9uEeOq3KT-lRHlww" name="this_shape" type="_9urVIC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9w3tiC9uEeOq3KT-lRHlww" type="_9qxFgC9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>super(myAT);
		shape = this_shape;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w3tiS9uEeOq3KT-lRHlww" name="paintXfrm" specification="_9v42EC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w3tii9uEeOq3KT-lRHlww" name="g" type="_9uBN0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9w3tiy9uEeOq3KT-lRHlww" name="host" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9w3tjC9uEeOq3KT-lRHlww" name="myAT" type="_9uUv0C9uEeOq3KT-lRHlww"/>
          <language>java</language>
          <body>g.setColor(host.getColor());
		((Graphics2D) g).fill(at.createTransformedShape(shape));
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_9v4PAC9uEeOq3KT-lRHlww" name="ShapePaintStrategy" method="_9w3thS9uEeOq3KT-lRHlww">
          <eAnnotations xmi:id="_9v4PAy9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_9v4PBC9uEeOq3KT-lRHlww" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_9v4PAS9uEeOq3KT-lRHlww" name="myAT" type="_9uUv0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9v4PAi9uEeOq3KT-lRHlww" name="this_shape" type="_9urVIC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9v4PBS9uEeOq3KT-lRHlww" type="_9qxFgC9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9v42EC9uEeOq3KT-lRHlww" name="paintXfrm" method="_9w3tiS9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9v42ES9uEeOq3KT-lRHlww" name="g" type="_9uBN0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9v42Ei9uEeOq3KT-lRHlww" name="host" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9v42Ey9uEeOq3KT-lRHlww" name="myAT" type="_9uUv0C9uEeOq3KT-lRHlww"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9qzhwC9uEeOq3KT-lRHlww" name="TrianglePaintStrategy">
        <ownedComment xmi:id="_9xCspC9uEeOq3KT-lRHlww">
          <body>Paint strategy to paint a triangle shape using the poly fac</body>
        </ownedComment>
        <generalization xmi:id="_9uwNoC9uEeOq3KT-lRHlww" general="_9qrl8C9uEeOq3KT-lRHlww"/>
        <ownedAttribute xmi:id="_9wZMYC9uEeOq3KT-lRHlww" name="points" visibility="private" isStatic="true" type="_9uB04C9uEeOq3KT-lRHlww" association="_9xfYky9uEeOq3KT-lRHlww">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9wZMYS9uEeOq3KT-lRHlww" value="*"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_9wZMYy9uEeOq3KT-lRHlww" value="{new Point(0,0), new Point(1,0), new Point(1,((int)Math.sqrt(5.0))/2)}"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w4UkC9uEeOq3KT-lRHlww" name="TrianglePaintStrategy" specification="_9q0I0C9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w4UkS9uEeOq3KT-lRHlww" type="_9qzhwC9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>this(new AffineTransform(), 0, 0, 1.0, 1.0);	
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w4Uki9uEeOq3KT-lRHlww" name="TrianglePaintStrategy" specification="_9v6EMC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w4Uky9uEeOq3KT-lRHlww" name="myAT" type="_9uUv0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9w4UlC9uEeOq3KT-lRHlww" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w4UlS9uEeOq3KT-lRHlww" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w4Uli9uEeOq3KT-lRHlww" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w4Uly9uEeOq3KT-lRHlww" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w4UmC9uEeOq3KT-lRHlww" type="_9qzhwC9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>super(myAT, (new PolygonFactory(myAT, 1.0, points)).makeShape(x, y, xScale, yScale));
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_9q0I0C9uEeOq3KT-lRHlww" name="TrianglePaintStrategy" method="_9w4UkC9uEeOq3KT-lRHlww">
          <eAnnotations xmi:id="_9q0I0S9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_9q0I0i9uEeOq3KT-lRHlww" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_9q0I0y9uEeOq3KT-lRHlww" type="_9qzhwC9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9v6EMC9uEeOq3KT-lRHlww" name="TrianglePaintStrategy" method="_9w4Uki9uEeOq3KT-lRHlww">
          <eAnnotations xmi:id="_9v6ENi9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_9v6ENy9uEeOq3KT-lRHlww" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_9v6EMS9uEeOq3KT-lRHlww" name="myAT" type="_9uUv0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9v6EMi9uEeOq3KT-lRHlww" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9v6EMy9uEeOq3KT-lRHlww" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9v6ENC9uEeOq3KT-lRHlww" name="xScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9v6ENS9uEeOq3KT-lRHlww" name="yScale">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9v6EOC9uEeOq3KT-lRHlww" type="_9qzhwC9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9q1W8C9uEeOq3KT-lRHlww" name="UprightImagePaintStrategy">
        <ownedComment xmi:id="_9xCspS9uEeOq3KT-lRHlww">
          <body>UprightImagePaintStrategy ensures that an image/shape remains upright 
as it bounces.
@author ammeurer
 *</body>
        </ownedComment>
        <generalization xmi:id="_9uw0sC9uEeOq3KT-lRHlww" general="_9qlfUC9uEeOq3KT-lRHlww"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w4UmS9uEeOq3KT-lRHlww" name="UprightImagePaintStrategy" specification="_9q1-AC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w4Umi9uEeOq3KT-lRHlww" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w4Umy9uEeOq3KT-lRHlww" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w4UnC9uEeOq3KT-lRHlww" type="_9q1W8C9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>super(new AffineTransform (), filename, fillFactor);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w47oC9uEeOq3KT-lRHlww" name="paintCfg" specification="_9v6rQC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w47oS9uEeOq3KT-lRHlww" name="g" type="_9uBN0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9w47oi9uEeOq3KT-lRHlww" name="host" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <language>java</language>
          <body>super.paintCfg(g, host);
	    if(Math.abs(Math.atan2(host.getVelocity().y, host.getVelocity().x)) > Math.PI/2.0) {
	      at.scale(1.0, -1.0);
	    } 
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_9q1-AC9uEeOq3KT-lRHlww" name="UprightImagePaintStrategy" method="_9w4UmS9uEeOq3KT-lRHlww">
          <eAnnotations xmi:id="_9q1-Ay9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_9q1-BC9uEeOq3KT-lRHlww" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_9q1-AS9uEeOq3KT-lRHlww" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9q1-Ai9uEeOq3KT-lRHlww" name="fillFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9q1-BS9uEeOq3KT-lRHlww" type="_9q1W8C9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9v6rQC9uEeOq3KT-lRHlww" name="paintCfg" method="_9w47oC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9v6rQS9uEeOq3KT-lRHlww" name="g" type="_9uBN0C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9v6rQi9uEeOq3KT-lRHlww" name="host" type="_9qPhEC9uEeOq3KT-lRHlww"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xbHIS9uEeOq3KT-lRHlww" name="" memberEnd="_9xbHIi9uEeOq3KT-lRHlww _9wTs0i9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xbHIi9uEeOq3KT-lRHlww" name="" type="_9qZSEC9uEeOq3KT-lRHlww" association="_9xbHIS9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xbuMS9uEeOq3KT-lRHlww" name="" memberEnd="_9xbuMi9uEeOq3KT-lRHlww _9wUT4S9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xbuMi9uEeOq3KT-lRHlww" name="" type="_9qlfUC9uEeOq3KT-lRHlww" association="_9xbuMS9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xcVQS9uEeOq3KT-lRHlww" name="" memberEnd="_9xcVQi9uEeOq3KT-lRHlww _9wU68i9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xcVQi9uEeOq3KT-lRHlww" name="" type="_9qlfUC9uEeOq3KT-lRHlww" association="_9xcVQS9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xc8UC9uEeOq3KT-lRHlww" name="" memberEnd="_9xc8US9uEeOq3KT-lRHlww _9wViAC9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xc8US9uEeOq3KT-lRHlww" name="" type="_9qlfUC9uEeOq3KT-lRHlww" association="_9xc8UC9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xc8Uy9uEeOq3KT-lRHlww" name="" memberEnd="_9xc8VC9uEeOq3KT-lRHlww _9wWJEC9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xc8VC9uEeOq3KT-lRHlww" name="" type="_9qlfUC9uEeOq3KT-lRHlww" association="_9xc8Uy9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xdjYS9uEeOq3KT-lRHlww" name="" memberEnd="_9xdjYi9uEeOq3KT-lRHlww _9wWwIi9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xdjYi9uEeOq3KT-lRHlww" name="" type="_9qpJsC9uEeOq3KT-lRHlww" association="_9xdjYS9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xeKcS9uEeOq3KT-lRHlww" name="" memberEnd="_9xeKci9uEeOq3KT-lRHlww _9wXXMy9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xeKci9uEeOq3KT-lRHlww" name="" type="_9qrl8C9uEeOq3KT-lRHlww" association="_9xeKcS9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xexgS9uEeOq3KT-lRHlww" name="" memberEnd="_9xexgi9uEeOq3KT-lRHlww _9wX-QS9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xexgi9uEeOq3KT-lRHlww" name="" type="_9qvQUC9uEeOq3KT-lRHlww" association="_9xexgS9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xfYkC9uEeOq3KT-lRHlww" name="" memberEnd="_9xfYkS9uEeOq3KT-lRHlww _9wYlUS9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xfYkS9uEeOq3KT-lRHlww" name="" type="_9qxFgC9uEeOq3KT-lRHlww" association="_9xfYkC9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xfYky9uEeOq3KT-lRHlww" name="" memberEnd="_9xfYlC9uEeOq3KT-lRHlww _9wZMYC9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xfYlC9uEeOq3KT-lRHlww" name="" type="_9qzhwC9uEeOq3KT-lRHlww" association="_9xfYky9uEeOq3KT-lRHlww"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_9oVcki9uEeOq3KT-lRHlww" name="update_strategies">
      <packagedElement xmi:type="uml:Class" xmi:id="_9rBkMC9uEeOq3KT-lRHlww" clientDependency="_9u2UQC9uEeOq3KT-lRHlww" name="BalloonStrategy">
        <ownedComment xmi:id="_9xDTsC9uEeOq3KT-lRHlww">
          <body>BalloonStrategy increases radius to a popping point, and then
quickly decreases radius, and appears to pop and disappear
@author ammeurer
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_9wc2wC9uEeOq3KT-lRHlww" name="rand" visibility="private" type="_9rVtQC9uEeOq3KT-lRHlww" association="_9xib4S9uEeOq3KT-lRHlww">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_9wc2wS9uEeOq3KT-lRHlww" value="new Randomizer()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9wc2wy9uEeOq3KT-lRHlww" name="pop" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_9wc2xC9uEeOq3KT-lRHlww" value="rand.randomDouble(200.0, 300.0)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9wdd0S9uEeOq3KT-lRHlww" name="popNow" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_9wdd0i9uEeOq3KT-lRHlww" value="(int) Math.floor(pop)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9wdd1C9uEeOq3KT-lRHlww" name="timeToPop" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_9weE4C9uEeOq3KT-lRHlww" value="0"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_9u2UQC9uEeOq3KT-lRHlww" client="_9rBkMC9uEeOq3KT-lRHlww" supplier="_9rIR4S9uEeOq3KT-lRHlww" contract="_9rIR4S9uEeOq3KT-lRHlww"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w6JwC9uEeOq3KT-lRHlww" name="updateState" specification="_9u27UC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w6JwS9uEeOq3KT-lRHlww" name="ball" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9w6Jwi9uEeOq3KT-lRHlww" name="d" type="_9qXc4C9uEeOq3KT-lRHlww"/>
          <language>java</language>
          <body>if((ball.getRadius() &lt; (double) popNow) &amp;&amp; (timeToPop == 0)){				
			double newRad = ball.getRadius()+0.8;
			ball.setRadius(newRad);
		}
		else{
			timeToPop = 1;
			double popRad = ball.getRadius()-7.0;
			ball.setRadius(popRad);
		}
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_9u27UC9uEeOq3KT-lRHlww" name="updateState" method="_9w6JwC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9u27US9uEeOq3KT-lRHlww" name="ball" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9u27Ui9uEeOq3KT-lRHlww" name="d" type="_9qXc4C9uEeOq3KT-lRHlww"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9u3iYi9uEeOq3KT-lRHlww" name="init">
          <ownedParameter xmi:id="_9u3iYy9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9rEAcC9uEeOq3KT-lRHlww" clientDependency="_9u4Jci9uEeOq3KT-lRHlww" name="DiscoStrategy">
        <ownedComment xmi:id="_9xDTsS9uEeOq3KT-lRHlww">
          <body>DiscoStrategy changes color each timer cycle.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_9weE4i9uEeOq3KT-lRHlww" name="rand" visibility="private" type="_9rVtQC9uEeOq3KT-lRHlww" association="_9xjC8S9uEeOq3KT-lRHlww">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_9weE4y9uEeOq3KT-lRHlww" value="new Randomizer()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_9u4Jci9uEeOq3KT-lRHlww" client="_9rEAcC9uEeOq3KT-lRHlww" supplier="_9rIR4S9uEeOq3KT-lRHlww" contract="_9rIR4S9uEeOq3KT-lRHlww"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w6Jwy9uEeOq3KT-lRHlww" name="updateState" specification="_9u4wgC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w6JxC9uEeOq3KT-lRHlww" name="ball" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9w6JxS9uEeOq3KT-lRHlww" name="d" type="_9qXc4C9uEeOq3KT-lRHlww"/>
          <language>java</language>
          <body>Color newColor = rand.randomColor();
			ball.setColor(newColor);
			
		</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_9u4wgC9uEeOq3KT-lRHlww" name="updateState" method="_9w6Jwy9uEeOq3KT-lRHlww">
          <ownedComment xmi:id="_9xDTsi9uEeOq3KT-lRHlww">
            <body>For DiscoBall, updateState sets the ball to a new color.
		 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_9u4wgS9uEeOq3KT-lRHlww" name="ball" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9u4wgi9uEeOq3KT-lRHlww" name="d" type="_9qXc4C9uEeOq3KT-lRHlww"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9u4wgy9uEeOq3KT-lRHlww" name="init">
          <ownedParameter xmi:id="_9u5XkC9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9rF1oC9uEeOq3KT-lRHlww" clientDependency="_9u5-oC9uEeOq3KT-lRHlww" name="DodgeStrategy">
        <ownedComment xmi:id="_9xDTsy9uEeOq3KT-lRHlww">
          <body>DodgeStrategy changes its velocity every 3 clock cycles 
for erratic movement like it is dodging someone
@author ammeurer
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_9wer8S9uEeOq3KT-lRHlww" name="rand" visibility="package" type="_9rVtQC9uEeOq3KT-lRHlww" association="_9xjqAC9uEeOq3KT-lRHlww">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_9wer8i9uEeOq3KT-lRHlww" value="new Randomizer()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9wfTAC9uEeOq3KT-lRHlww" name="rect" visibility="package" type="_9uS6oC9uEeOq3KT-lRHlww" association="_9xjqAy9uEeOq3KT-lRHlww">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_9wfTAS9uEeOq3KT-lRHlww" value="new Rectangle(50, 50)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9wfTAy9uEeOq3KT-lRHlww" name="wait" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_9wfTBC9uEeOq3KT-lRHlww" value="0"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_9u5-oC9uEeOq3KT-lRHlww" client="_9rF1oC9uEeOq3KT-lRHlww" supplier="_9rIR4S9uEeOq3KT-lRHlww" contract="_9rIR4S9uEeOq3KT-lRHlww"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w6Jxi9uEeOq3KT-lRHlww" name="updateState" specification="_9u5-oS9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w6Jxy9uEeOq3KT-lRHlww" name="thisBall" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9w6JyC9uEeOq3KT-lRHlww" name="d" type="_9qXc4C9uEeOq3KT-lRHlww"/>
          <language>java</language>
          <body>if(wait == 3){
			Point v = rand.randomVel(rect);
			thisBall.setVelocity(v);
			wait = 0;
		}
		else{
			wait++;
		}

	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_9u5-oS9uEeOq3KT-lRHlww" name="updateState" method="_9w6Jxi9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9u5-oi9uEeOq3KT-lRHlww" name="thisBall" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9u6lsC9uEeOq3KT-lRHlww" name="d" type="_9qXc4C9uEeOq3KT-lRHlww"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9u7z0C9uEeOq3KT-lRHlww" name="init">
          <ownedParameter xmi:id="_9u7z0S9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_9rHq0C9uEeOq3KT-lRHlww" name="IStrategyFac">
        <ownedComment xmi:id="_9xDTtC9uEeOq3KT-lRHlww">
          <body>An interface that defines a factory that instantiates a 
specific IUpdateStrategy.</body>
        </ownedComment>
        <ownedOperation xmi:id="_9rIR4C9uEeOq3KT-lRHlww" name="make">
          <ownedComment xmi:id="_9xDTtS9uEeOq3KT-lRHlww">
            <body>Instantiate the specific IUpdateStrategy for which
	 * this factory is defined. 
	 * @return An IUpdateStrategy instance.</body>
          </ownedComment>
          <ownedParameter xmi:id="_9u9B8C9uEeOq3KT-lRHlww" type="_9rIR4S9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_9rIR4S9uEeOq3KT-lRHlww" name="IUpdateStrategy">
        <ownedComment xmi:id="_9xDTti9uEeOq3KT-lRHlww">
          <body>Interface for strategies
@author ammeurer
 *</body>
        </ownedComment>
        <ownedOperation xmi:id="_9u9pAC9uEeOq3KT-lRHlww" name="updateState">
          <ownedParameter xmi:id="_9u9pAS9uEeOq3KT-lRHlww" name="thisBall" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9u9pAi9uEeOq3KT-lRHlww" name="d" type="_9qXc4C9uEeOq3KT-lRHlww"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9u-QEC9uEeOq3KT-lRHlww" name="init">
          <ownedParameter xmi:id="_9u-QES9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9rJgAC9uEeOq3KT-lRHlww" clientDependency="_9u-QEi9uEeOq3KT-lRHlww" name="LostStrategy">
        <ownedComment xmi:id="_9xDTty9uEeOq3KT-lRHlww">
          <body>LostStrategy changes its velocity every 10 clock cycles 
for erratic movement
@author ammeurer
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_9wf6ES9uEeOq3KT-lRHlww" name="rand" visibility="package" type="_9rVtQC9uEeOq3KT-lRHlww" association="_9xkRES9uEeOq3KT-lRHlww">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_9wf6Ei9uEeOq3KT-lRHlww" value="new Randomizer()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9wghIC9uEeOq3KT-lRHlww" name="rect" visibility="package" type="_9uS6oC9uEeOq3KT-lRHlww" association="_9xk4IS9uEeOq3KT-lRHlww">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_9wghIS9uEeOq3KT-lRHlww" value="new Rectangle(30, 30)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9wghIy9uEeOq3KT-lRHlww" name="wait" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_9wghJC9uEeOq3KT-lRHlww" value="0"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_9u-QEi9uEeOq3KT-lRHlww" client="_9rJgAC9uEeOq3KT-lRHlww" supplier="_9rIR4S9uEeOq3KT-lRHlww" contract="_9rIR4S9uEeOq3KT-lRHlww"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w6w0C9uEeOq3KT-lRHlww" name="updateState" specification="_9u-3IC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w6w0S9uEeOq3KT-lRHlww" name="thisBall" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9w6w0i9uEeOq3KT-lRHlww" name="d" type="_9qXc4C9uEeOq3KT-lRHlww"/>
          <language>java</language>
          <body>if(wait == 10){
			Point v = rand.randomVel(rect);
			thisBall.setVelocity(v);
			wait = 0;
		}
		else{
			wait++;
		}

	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_9u-3IC9uEeOq3KT-lRHlww" name="updateState" method="_9w6w0C9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9u_eMC9uEeOq3KT-lRHlww" name="thisBall" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9u_eMS9uEeOq3KT-lRHlww" name="d" type="_9qXc4C9uEeOq3KT-lRHlww"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9vAFQi9uEeOq3KT-lRHlww" name="init">
          <ownedParameter xmi:id="_9vAFQy9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9rL8QC9uEeOq3KT-lRHlww" clientDependency="_9vBTYC9uEeOq3KT-lRHlww" name="MultiStrategy">
        <ownedComment xmi:id="_9xDTuC9uEeOq3KT-lRHlww">
          <body>MultiStrategy is a recursive tree that allows the user to combine
as many strategies as they want.
@author ammeurer
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_9whIMS9uEeOq3KT-lRHlww" name="_s1" visibility="private" type="_9rIR4S9uEeOq3KT-lRHlww" association="_9xlfMS9uEeOq3KT-lRHlww"/>
        <ownedAttribute xmi:id="_9whIMy9uEeOq3KT-lRHlww" name="_s2" visibility="private" type="_9rIR4S9uEeOq3KT-lRHlww" association="_9xlfNC9uEeOq3KT-lRHlww"/>
        <interfaceRealization xmi:id="_9vBTYC9uEeOq3KT-lRHlww" client="_9rL8QC9uEeOq3KT-lRHlww" supplier="_9rIR4S9uEeOq3KT-lRHlww" contract="_9rIR4S9uEeOq3KT-lRHlww"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w6w0y9uEeOq3KT-lRHlww" name="MultiStrategy" specification="_9vB6cC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w6w1C9uEeOq3KT-lRHlww" name="s1" type="_9rIR4S9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9w6w1S9uEeOq3KT-lRHlww" name="s2" type="_9rIR4S9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9w6w1i9uEeOq3KT-lRHlww" type="_9rL8QC9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>_s1 = s1;
		_s2 = s2;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w6w1y9uEeOq3KT-lRHlww" name="updateState" specification="_9vChgC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w6w2C9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9w6w2S9uEeOq3KT-lRHlww" name="d" type="_9qXc4C9uEeOq3KT-lRHlww"/>
          <language>java</language>
          <body>_s1.updateState(context, d);
		_s2.updateState(context, d);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_9vB6cC9uEeOq3KT-lRHlww" name="MultiStrategy" method="_9w6w0y9uEeOq3KT-lRHlww">
          <eAnnotations xmi:id="_9vB6cy9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_9vB6dC9uEeOq3KT-lRHlww" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_9vB6cS9uEeOq3KT-lRHlww" name="s1" type="_9rIR4S9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9vB6ci9uEeOq3KT-lRHlww" name="s2" type="_9rIR4S9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9vB6dS9uEeOq3KT-lRHlww" type="_9rL8QC9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9vChgC9uEeOq3KT-lRHlww" name="updateState" method="_9w6w1y9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9vChgS9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9vChgi9uEeOq3KT-lRHlww" name="d" type="_9qXc4C9uEeOq3KT-lRHlww"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9vChgy9uEeOq3KT-lRHlww" name="init">
          <ownedParameter xmi:id="_9vChhC9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9rOYgC9uEeOq3KT-lRHlww" clientDependency="_9vDvoC9uEeOq3KT-lRHlww" name="StraightStrategy">
        <ownedComment xmi:id="_9xDTuS9uEeOq3KT-lRHlww">
          <body>StraightStrategy is the strategy for a very normal ball
@author ammeurer
 *</body>
        </ownedComment>
        <interfaceRealization xmi:id="_9vDvoC9uEeOq3KT-lRHlww" client="_9rOYgC9uEeOq3KT-lRHlww" supplier="_9rIR4S9uEeOq3KT-lRHlww" contract="_9rIR4S9uEeOq3KT-lRHlww"/>
        <ownedOperation xmi:id="_9vDvoS9uEeOq3KT-lRHlww" name="updateState">
          <ownedParameter xmi:id="_9vDvoi9uEeOq3KT-lRHlww" name="thisBall" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9vDvoy9uEeOq3KT-lRHlww" name="d" type="_9qXc4C9uEeOq3KT-lRHlww"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9vEWsy9uEeOq3KT-lRHlww" name="init">
          <ownedParameter xmi:id="_9vEWtC9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9rPmoC9uEeOq3KT-lRHlww" clientDependency="_9vFk0C9uEeOq3KT-lRHlww" name="SwitcherStrategy">
        <ownedComment xmi:id="_9xD6wC9uEeOq3KT-lRHlww">
          <body>SwitcherStrategy allows the user to change all balls at once
@author ammeurer
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_9whvQS9uEeOq3KT-lRHlww" name="Singleton" isStatic="true" type="_9rPmoC9uEeOq3KT-lRHlww" association="_9xnUYC9uEeOq3KT-lRHlww">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_9whvQi9uEeOq3KT-lRHlww" value="new SwitcherStrategy()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9wiWUC9uEeOq3KT-lRHlww" name="strategy" type="_9rIR4S9uEeOq3KT-lRHlww" association="_9xnUYy9uEeOq3KT-lRHlww">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_9wiWUS9uEeOq3KT-lRHlww" value="new StraightStrategy()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_9vFk0C9uEeOq3KT-lRHlww" client="_9rPmoC9uEeOq3KT-lRHlww" supplier="_9rIR4S9uEeOq3KT-lRHlww" contract="_9rIR4S9uEeOq3KT-lRHlww"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w7X4C9uEeOq3KT-lRHlww" name="updateState" specification="_9vFk0S9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w7X4S9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9w7X4i9uEeOq3KT-lRHlww" name="d" type="_9qXc4C9uEeOq3KT-lRHlww"/>
          <language>java</language>
          <body>strategy.updateState(context, d);
		</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_9rQNsC9uEeOq3KT-lRHlww" name="SwitcherStrategy">
          <eAnnotations xmi:id="_9rQNsS9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_9rQNsi9uEeOq3KT-lRHlww" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_9rQ0wS9uEeOq3KT-lRHlww" type="_9rPmoC9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9vFk0S9uEeOq3KT-lRHlww" name="updateState" method="_9w7X4C9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9vFk0i9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9vGL4C9uEeOq3KT-lRHlww" name="d" type="_9qXc4C9uEeOq3KT-lRHlww"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9vGL4S9uEeOq3KT-lRHlww" name="init">
          <ownedParameter xmi:id="_9vGL4i9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xib4S9uEeOq3KT-lRHlww" name="" memberEnd="_9xib4i9uEeOq3KT-lRHlww _9wc2wC9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xib4i9uEeOq3KT-lRHlww" name="" type="_9rBkMC9uEeOq3KT-lRHlww" association="_9xib4S9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xjC8S9uEeOq3KT-lRHlww" name="" memberEnd="_9xjC8i9uEeOq3KT-lRHlww _9weE4i9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xjC8i9uEeOq3KT-lRHlww" name="" type="_9rEAcC9uEeOq3KT-lRHlww" association="_9xjC8S9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xjqAC9uEeOq3KT-lRHlww" name="" memberEnd="_9xjqAS9uEeOq3KT-lRHlww _9wer8S9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xjqAS9uEeOq3KT-lRHlww" name="" type="_9rF1oC9uEeOq3KT-lRHlww" association="_9xjqAC9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xjqAy9uEeOq3KT-lRHlww" name="" memberEnd="_9xjqBC9uEeOq3KT-lRHlww _9wfTAC9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xjqBC9uEeOq3KT-lRHlww" name="" type="_9rF1oC9uEeOq3KT-lRHlww" association="_9xjqAy9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xkRES9uEeOq3KT-lRHlww" name="" memberEnd="_9xkREi9uEeOq3KT-lRHlww _9wf6ES9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xkREi9uEeOq3KT-lRHlww" name="" type="_9rJgAC9uEeOq3KT-lRHlww" association="_9xkRES9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xk4IS9uEeOq3KT-lRHlww" name="" memberEnd="_9xk4Ii9uEeOq3KT-lRHlww _9wghIC9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xk4Ii9uEeOq3KT-lRHlww" name="" type="_9rJgAC9uEeOq3KT-lRHlww" association="_9xk4IS9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xlfMS9uEeOq3KT-lRHlww" name="" memberEnd="_9xlfMi9uEeOq3KT-lRHlww _9whIMS9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xlfMi9uEeOq3KT-lRHlww" name="" type="_9rL8QC9uEeOq3KT-lRHlww" association="_9xlfMS9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xlfNC9uEeOq3KT-lRHlww" name="" memberEnd="_9xlfNS9uEeOq3KT-lRHlww _9whIMy9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xlfNS9uEeOq3KT-lRHlww" name="" type="_9rL8QC9uEeOq3KT-lRHlww" association="_9xlfNC9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xnUYC9uEeOq3KT-lRHlww" name="" memberEnd="_9xnUYS9uEeOq3KT-lRHlww _9whvQS9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xnUYS9uEeOq3KT-lRHlww" name="" type="_9rPmoC9uEeOq3KT-lRHlww" association="_9xnUYC9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xnUYy9uEeOq3KT-lRHlww" name="" memberEnd="_9xnUZC9uEeOq3KT-lRHlww _9wiWUC9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xnUZC9uEeOq3KT-lRHlww" name="" type="_9rPmoC9uEeOq3KT-lRHlww" association="_9xnUYy9uEeOq3KT-lRHlww"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_9oVcky9uEeOq3KT-lRHlww" name="view">
      <packagedElement xmi:type="uml:Class" xmi:id="_9rbz4C9uEeOq3KT-lRHlww" name="BallWorldFrame">
        <ownedComment xmi:id="_9xD6xi9uEeOq3KT-lRHlww">
          <body>BallWorldFrame defines the view, or GUI</body>
        </ownedComment>
        <generalization xmi:id="_9wEcQS9uEeOq3KT-lRHlww" general="_9vKdUS9uEeOq3KT-lRHlww"/>
        <ownedAttribute xmi:id="_9wkLgy9uEeOq3KT-lRHlww" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_9wkykC9uEeOq3KT-lRHlww" value="-4154192564225992943L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9wkykS9uEeOq3KT-lRHlww" name="contentPane" visibility="private" type="_9vLEYS9uEeOq3KT-lRHlww" association="_9xoigS9uEeOq3KT-lRHlww"/>
        <ownedAttribute xmi:id="_9wkyky9uEeOq3KT-lRHlww" name="txtBallType" visibility="private" type="_9vMSgi9uEeOq3KT-lRHlww" association="_9xoihC9uEeOq3KT-lRHlww"/>
        <ownedAttribute xmi:id="_9wlZoS9uEeOq3KT-lRHlww" name="panelBalls" visibility="private" type="_9vLEYS9uEeOq3KT-lRHlww" association="_9xpJkS9uEeOq3KT-lRHlww"/>
        <ownedAttribute xmi:id="_9wlZoy9uEeOq3KT-lRHlww" name="adapter" visibility="private" type="_9rh6gC9uEeOq3KT-lRHlww" association="_9xpwoS9uEeOq3KT-lRHlww">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_9wmAsS9uEeOq3KT-lRHlww" value="(IModelAdapter&lt;TStrategyDropListItem, TPaintDropListItem>) IModelAdapter.NULL_OBJECT"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9wmAsy9uEeOq3KT-lRHlww" name="dropListTop" visibility="private" type="_9vQj8S9uEeOq3KT-lRHlww" association="_9xqXsC9uEeOq3KT-lRHlww"/>
        <ownedAttribute xmi:id="_9wnO0C9uEeOq3KT-lRHlww" name="dropListBottom" visibility="private" type="_9vQj8S9uEeOq3KT-lRHlww" association="_9xqXsy9uEeOq3KT-lRHlww"/>
        <ownedAttribute xmi:id="_9wn14S9uEeOq3KT-lRHlww" name="btnSwitcherBall" visibility="private" type="_9vM5kS9uEeOq3KT-lRHlww" association="_9xq-wS9uEeOq3KT-lRHlww"/>
        <ownedAttribute xmi:id="_9wn14y9uEeOq3KT-lRHlww" name="btnSwitch" visibility="private" type="_9vM5kS9uEeOq3KT-lRHlww" association="_9xrl0C9uEeOq3KT-lRHlww"/>
        <ownedAttribute xmi:id="_9woc8S9uEeOq3KT-lRHlww" name="switcher" type="_9wDOIC9uEeOq3KT-lRHlww" isReadOnly="true" association="_9xrl0y9uEeOq3KT-lRHlww"/>
        <ownedAttribute xmi:id="_9woc8i9uEeOq3KT-lRHlww" name="txtPaintStrategy" visibility="private" type="_9vMSgi9uEeOq3KT-lRHlww" association="_9xsM4S9uEeOq3KT-lRHlww"/>
        <ownedAttribute xmi:id="_9wpEAC9uEeOq3KT-lRHlww" name="btnAddToPaintList" visibility="private" type="_9vM5kS9uEeOq3KT-lRHlww" association="_9xsz8S9uEeOq3KT-lRHlww"/>
        <ownedAttribute xmi:id="_9wpEAi9uEeOq3KT-lRHlww" name="comboBoxPaint" visibility="private" type="_9vQj8S9uEeOq3KT-lRHlww" association="_9xsz9C9uEeOq3KT-lRHlww"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w9NEC9uEeOq3KT-lRHlww" name="BallWorldFrame" specification="_9vRyEC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w9NES9uEeOq3KT-lRHlww" name="modelAdapter" type="_9rh6gC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9w9NEi9uEeOq3KT-lRHlww" type="_9rbz4C9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>this.adapter = modelAdapter;
		initGUI();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w9NEy9uEeOq3KT-lRHlww" name="start" specification="_9rdpEC9uEeOq3KT-lRHlww">
          <language>java</language>
          <body>setVisible(true);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w9NFC9uEeOq3KT-lRHlww" name="getPanel" specification="_9rdpES9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w9NFS9uEeOq3KT-lRHlww" type="_9t__sC9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>return panelBalls;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w9NFi9uEeOq3KT-lRHlww" name="update" specification="_9rdpEi9uEeOq3KT-lRHlww">
          <language>java</language>
          <body>panelBalls.repaint();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w9NFy9uEeOq3KT-lRHlww" name="initGUI" specification="_9reQIC9uEeOq3KT-lRHlww">
          <language>java</language>
          <body>setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		contentPane.setLayout(new BorderLayout(0, 0));
		setContentPane(contentPane);
		
		
		
		JPanel panelButton = new JPanel();
		panelButton.setBackground(Color.PINK);
		contentPane.add(panelButton, BorderLayout.NORTH);
		/**
		 * When this button is pressed, all balls are cleared from the GUI
		 */
		panelButton.setLayout(new FormLayout(new ColumnSpec[] {
				ColumnSpec.decode(&quot;109px&quot;),
				ColumnSpec.decode(&quot;122px:grow&quot;),
				FormFactory.LABEL_COMPONENT_GAP_COLSPEC,
				ColumnSpec.decode(&quot;95px&quot;),
				FormFactory.RELATED_GAP_COLSPEC,
				ColumnSpec.decode(&quot;default:grow&quot;),
				FormFactory.RELATED_GAP_COLSPEC,
				FormFactory.DEFAULT_COLSPEC,
				FormFactory.RELATED_GAP_COLSPEC,
				FormFactory.DEFAULT_COLSPEC,
				FormFactory.RELATED_GAP_COLSPEC,
				FormFactory.DEFAULT_COLSPEC,
				FormFactory.RELATED_GAP_COLSPEC,
				FormFactory.DEFAULT_COLSPEC,},
			new RowSpec[] {
				FormFactory.RELATED_GAP_ROWSPEC,
				FormFactory.DEFAULT_ROWSPEC,
				FormFactory.RELATED_GAP_ROWSPEC,
				FormFactory.DEFAULT_ROWSPEC,
				FormFactory.RELATED_GAP_ROWSPEC,
				FormFactory.DEFAULT_ROWSPEC,
				FormFactory.RELATED_GAP_ROWSPEC,
				RowSpec.decode(&quot;29px&quot;),}));
		
		panelBalls = new JPanel(){

			private static final long serialVersionUID = 2019851699131459986L;
			

			/**
			 * Overridden paintComponent method to paint a shape in the panel.
			 * @param g The Graphics object to paint on.
			 **/
			public void paintComponent(Graphics g) {				
				super.paintComponent(g);   // Do everything normally done first, e.g. clear the screen.
				adapter.paint(g);
			}
		};
		/*
		 * Add a ball when the 'Make Ball' button is pressed.
		 */
		JButton btnNewBall = new JButton(&quot;Make Ball&quot;);
		btnNewBall.setToolTipText(&quot;Make a ball with the strategy specified in the top drop list&quot;);
		btnNewBall.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				System.out.println(comboBoxPaint.getItemAt(comboBoxPaint.getSelectedIndex()));
	           adapter.makeBall((TStrategyDropListItem)(dropListTop.getItemAt(dropListTop.getSelectedIndex())), (TPaintDropListItem)(comboBoxPaint.getItemAt(comboBoxPaint.getSelectedIndex())));
			}
		});	
		panelButton.add(btnNewBall, &quot;2, 2, left, top&quot;);
		
		txtPaintStrategy = new JTextField();
		txtPaintStrategy.setText(&quot;paint_strategies.BallPaintStrategy&quot;);
		panelButton.add(txtPaintStrategy, &quot;6, 2, fill, default&quot;);
		txtPaintStrategy.setColumns(10);
		
		txtBallType = new JTextField();
		panelButton.add(txtBallType, &quot;1, 4&quot;);
		txtBallType.setText(&quot;interaction_strategies.CollideStrategy&quot;);
		txtBallType.setColumns(10);
		
		dropListTop = new JComboBox&lt;TStrategyDropListItem>();
		panelButton.add(dropListTop, &quot;2, 4, fill, default&quot;);
		
		JButton btnCombine = new JButton(&quot;Combine&quot;);
		btnCombine.setToolTipText(&quot;Make a new strategy by combining the two strategies specified in the above drop lists&quot;);
		btnCombine.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				TStrategyDropListItem top = (TStrategyDropListItem)dropListTop.getItemAt(dropListTop.getSelectedIndex());
				TStrategyDropListItem bottom = (TStrategyDropListItem)dropListBottom.getItemAt(dropListBottom.getSelectedIndex());
				if(top != null &amp;&amp; bottom != null){
				System.out.println(top.toString());
				System.out.println(bottom.toString());
				TStrategyDropListItem multi = (TStrategyDropListItem) (adapter.combineStrategies(top, bottom));
				dropListTop.insertItemAt(multi, 0);
				dropListBottom.insertItemAt(multi, 0);
				}
				else{
					System.out.println(&quot;You have not properly selected a drop list item&quot;);
				}
			}
		});
		
		JButton btnAddToLists = new JButton(&quot;Add to Lists&quot;);
		btnAddToLists.setToolTipText(&quot;Add the above strategy to both drop lists of available strategies&quot;);
		btnAddToLists.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				TStrategyDropListItem o = adapter.addStrategy(txtBallType.getText());
				
				if (null == o) return; // just in case
				dropListTop.insertItemAt(o, 0);
				dropListBottom.insertItemAt(o, 0);
			}
		});
		
		btnSwitcherBall = new JButton(&quot;Switcher&quot;);
		btnSwitcherBall.setToolTipText(&quot;Create a switcher ball&quot;);
		btnSwitcherBall.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				adapter.makeSwitcher();

			}
		});
		panelButton.add(btnSwitcherBall, &quot;4, 4&quot;);
		
		btnAddToPaintList = new JButton(&quot;Add to List&quot;);
		btnAddToPaintList.setToolTipText(&quot;Add the above paint strategy to the drop list of available paint strategies&quot;);
		btnAddToPaintList.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TPaintDropListItem o = adapter.addPaintStrategy(txtPaintStrategy.getText());
				
				if (null == o) return; // just in case
				comboBoxPaint.insertItemAt(o, 0);
			}
		});
		panelButton.add(btnAddToPaintList, &quot;6, 4&quot;);
		panelButton.add(btnAddToLists, &quot;1, 6&quot;);
		
		dropListBottom = new JComboBox&lt;TStrategyDropListItem>();
		panelButton.add(dropListBottom, &quot;2, 6, fill, default&quot;);
		
		btnSwitch = new JButton(&quot;Switch&quot;);
		btnSwitch.setToolTipText(&quot;Switch all Switcher Balls to the strategy specified in the top drop list&quot;);
		btnSwitch.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				switcher = ( dropListTop.getItemAt(dropListTop.getSelectedIndex()));
				adapter.setSwitch(switcher);
			}
		});
		panelButton.add(btnSwitch, &quot;4, 6&quot;);
		
		comboBoxPaint = new JComboBox&lt;TPaintDropListItem>();
		panelButton.add(comboBoxPaint, &quot;6, 6, fill, default&quot;);
		panelButton.add(btnCombine, &quot;2, 8&quot;);
		
		JButton btnClear = new JButton(&quot;Clear Frame\n&quot;);
		btnClear.setToolTipText(&quot;Clear the window of all objects&quot;);
		btnClear.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				adapter.clearBalls();
			}
		});
		panelButton.add(btnClear, &quot;6, 8, left, top&quot;);

		panelBalls.setBackground(Color.LIGHT_GRAY);
		contentPane.add(panelBalls, BorderLayout.CENTER);
		

	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_9rdpEC9uEeOq3KT-lRHlww" name="start" method="_9w9NEy9uEeOq3KT-lRHlww">
          <ownedComment xmi:id="_9xD6yC9uEeOq3KT-lRHlww">
            <body>Launch the application.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_9rdpES9uEeOq3KT-lRHlww" name="getPanel" method="_9w9NFC9uEeOq3KT-lRHlww">
          <ownedComment xmi:id="_9xD6yS9uEeOq3KT-lRHlww">
            <body>Getter for panel where balls bounce.</body>
          </ownedComment>
          <ownedParameter xmi:id="_9wEcQC9uEeOq3KT-lRHlww" type="_9t__sC9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9rdpEi9uEeOq3KT-lRHlww" name="update" method="_9w9NFi9uEeOq3KT-lRHlww">
          <ownedComment xmi:id="_9xD6yi9uEeOq3KT-lRHlww">
            <body>Update GUI every timer cycle.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_9reQIC9uEeOq3KT-lRHlww" name="initGUI" method="_9w9NFy9uEeOq3KT-lRHlww">
          <ownedComment xmi:id="_9xEh0C9uEeOq3KT-lRHlww">
            <body>Create the frame.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_9vRyEC9uEeOq3KT-lRHlww" name="BallWorldFrame" method="_9w9NEC9uEeOq3KT-lRHlww">
          <eAnnotations xmi:id="_9vRyEi9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_9vRyEy9uEeOq3KT-lRHlww" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_9xD6xy9uEeOq3KT-lRHlww">
            <body>Constructor used in controller.</body>
          </ownedComment>
          <ownedParameter xmi:id="_9vRyES9uEeOq3KT-lRHlww" name="modelAdapter" type="_9rh6gC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9vRyFC9uEeOq3KT-lRHlww" type="_9rbz4C9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_9rh6gC9uEeOq3KT-lRHlww" name="IModelAdapter">
        <ownedComment xmi:id="_9xEh0S9uEeOq3KT-lRHlww">
          <body>Adapter from the view back to the model</body>
        </ownedComment>
        <ownedAttribute xmi:id="_9rkWwC9uEeOq3KT-lRHlww" name="paintStrategy" type="_9wFqYi9uEeOq3KT-lRHlww" isReadOnly="true" association="_9xTyYC9uEeOq3KT-lRHlww"/>
        <ownedAttribute xmi:id="_9rk90C9uEeOq3KT-lRHlww" name="NULL_OBJECT" isLeaf="true" isStatic="true" type="_9rh6gC9uEeOq3KT-lRHlww" isReadOnly="true" association="_9xTyYy9uEeOq3KT-lRHlww">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_9rlk4S9uEeOq3KT-lRHlww" value="new IModelAdapter() {&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;public void paint(Graphics g) {&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;public void clearBalls(){&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public IStrategyFac addStrategy(String classname) {&#xD;&#xA;&#x9;&#x9;&#x9;return null;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public IStrategyFac combineStrategies(Object selectedItem1,&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Object selectedItem2) {&#xD;&#xA;&#x9;&#x9;&#x9;return null;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public void makeBall(Object item, Object thisPaint) {&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public void setSwitch(Object switcher) {&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public void makeSwitcher() {&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public Object getPaintStrategy() {&#xD;&#xA;&#x9;&#x9;&#x9;return null;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public Object addPaintStrategy(String text) {&#xD;&#xA;&#x9;&#x9;&#x9;return null;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_9rihkS9uEeOq3KT-lRHlww" name="clearBalls">
          <ownedComment xmi:id="_9xEh0y9uEeOq3KT-lRHlww">
            <body>Method to clear all the balls from the screen</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_9rjIoC9uEeOq3KT-lRHlww" name="addStrategy">
          <ownedComment xmi:id="_9xEh1C9uEeOq3KT-lRHlww">
            <body>Add a strategy to the droplist and create a strategy factory &#xD;
	 * @param classname&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_9rjIoS9uEeOq3KT-lRHlww" name="classname">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9wFqYS9uEeOq3KT-lRHlww" type="_9wDOIC9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9rjvsC9uEeOq3KT-lRHlww" name="makeSwitcher">
          <ownedComment xmi:id="_9xEh2C9uEeOq3KT-lRHlww">
            <body>create a switcher ball</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_9rkWwS9uEeOq3KT-lRHlww" name="addPaintStrategy">
          <ownedComment xmi:id="_9xEh2S9uEeOq3KT-lRHlww">
            <body>Add a paint strategy to the droplist, and create a factory for it&#xD;
	 * @param text&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_9rkWwi9uEeOq3KT-lRHlww" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9wHfki9uEeOq3KT-lRHlww" type="_9wFqYi9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9wFDUC9uEeOq3KT-lRHlww" name="paint">
          <ownedComment xmi:id="_9xEh0i9uEeOq3KT-lRHlww">
            <body>Method to paint the sprites back in the model.&#xD;
	 * @param g   The current Graphics context</body>
          </ownedComment>
          <ownedParameter xmi:id="_9wFqYC9uEeOq3KT-lRHlww" name="g" type="_9uBN0C9uEeOq3KT-lRHlww"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9wGRcS9uEeOq3KT-lRHlww" name="makeBall">
          <ownedComment xmi:id="_9xEh1S9uEeOq3KT-lRHlww">
            <body>Create a ball.</body>
          </ownedComment>
          <ownedParameter xmi:id="_9wGRci9uEeOq3KT-lRHlww" name="item" type="_9wDOIC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wGRcy9uEeOq3KT-lRHlww" name="myPaint" type="_9wFqYi9uEeOq3KT-lRHlww"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9wG4gC9uEeOq3KT-lRHlww" name="combineStrategies">
          <ownedComment xmi:id="_9xEh1i9uEeOq3KT-lRHlww">
            <body>combine strategies&#xD;
	 * @param selectedItem1 strategy to combine&#xD;
	 * @param selectedItem2 strategy to combine&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_9wG4gS9uEeOq3KT-lRHlww" name="selectedItem1" type="_9wDOIC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wG4gi9uEeOq3KT-lRHlww" name="selectedItem2" type="_9wDOIC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wG4gy9uEeOq3KT-lRHlww" type="_9wDOIC9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9wHfkC9uEeOq3KT-lRHlww" name="setSwitch">
          <ownedComment xmi:id="_9xEh1y9uEeOq3KT-lRHlww">
            <body>Set a new strategy for the switcher balls&#xD;
	 * @param switcher new strategy</body>
          </ownedComment>
          <ownedParameter xmi:id="_9wHfkS9uEeOq3KT-lRHlww" name="switcher" type="_9wDOIC9uEeOq3KT-lRHlww"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9wDOIC9uEeOq3KT-lRHlww" name="TStrategyDropListItem"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_9wFqYi9uEeOq3KT-lRHlww" name="TPaintDropListItem"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xTyYC9uEeOq3KT-lRHlww" name="" memberEnd="_9xTyYS9uEeOq3KT-lRHlww _9rkWwC9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xTyYS9uEeOq3KT-lRHlww" name="" type="_9rh6gC9uEeOq3KT-lRHlww" association="_9xTyYC9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xTyYy9uEeOq3KT-lRHlww" name="" memberEnd="_9xTyZC9uEeOq3KT-lRHlww _9rk90C9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xTyZC9uEeOq3KT-lRHlww" name="" type="_9rh6gC9uEeOq3KT-lRHlww" association="_9xTyYy9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xoigS9uEeOq3KT-lRHlww" name="" memberEnd="_9xoigi9uEeOq3KT-lRHlww _9wkykS9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xoigi9uEeOq3KT-lRHlww" name="" type="_9rbz4C9uEeOq3KT-lRHlww" association="_9xoigS9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xoihC9uEeOq3KT-lRHlww" name="" memberEnd="_9xoihS9uEeOq3KT-lRHlww _9wkyky9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xoihS9uEeOq3KT-lRHlww" name="" type="_9rbz4C9uEeOq3KT-lRHlww" association="_9xoihC9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xpJkS9uEeOq3KT-lRHlww" name="" memberEnd="_9xpJki9uEeOq3KT-lRHlww _9wlZoS9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xpJki9uEeOq3KT-lRHlww" name="" type="_9rbz4C9uEeOq3KT-lRHlww" association="_9xpJkS9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xpwoS9uEeOq3KT-lRHlww" name="" memberEnd="_9xpwoi9uEeOq3KT-lRHlww _9wlZoy9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xpwoi9uEeOq3KT-lRHlww" name="" type="_9rbz4C9uEeOq3KT-lRHlww" association="_9xpwoS9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xqXsC9uEeOq3KT-lRHlww" name="" memberEnd="_9xqXsS9uEeOq3KT-lRHlww _9wmAsy9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xqXsS9uEeOq3KT-lRHlww" name="" type="_9rbz4C9uEeOq3KT-lRHlww" association="_9xqXsC9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xqXsy9uEeOq3KT-lRHlww" name="" memberEnd="_9xqXtC9uEeOq3KT-lRHlww _9wnO0C9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xqXtC9uEeOq3KT-lRHlww" name="" type="_9rbz4C9uEeOq3KT-lRHlww" association="_9xqXsy9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xq-wS9uEeOq3KT-lRHlww" name="" memberEnd="_9xq-wi9uEeOq3KT-lRHlww _9wn14S9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xq-wi9uEeOq3KT-lRHlww" name="" type="_9rbz4C9uEeOq3KT-lRHlww" association="_9xq-wS9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xrl0C9uEeOq3KT-lRHlww" name="" memberEnd="_9xrl0S9uEeOq3KT-lRHlww _9wn14y9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xrl0S9uEeOq3KT-lRHlww" name="" type="_9rbz4C9uEeOq3KT-lRHlww" association="_9xrl0C9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xrl0y9uEeOq3KT-lRHlww" name="" memberEnd="_9xrl1C9uEeOq3KT-lRHlww _9woc8S9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xrl1C9uEeOq3KT-lRHlww" name="" type="_9rbz4C9uEeOq3KT-lRHlww" association="_9xrl0y9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xsM4S9uEeOq3KT-lRHlww" name="" memberEnd="_9xsM4i9uEeOq3KT-lRHlww _9woc8i9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xsM4i9uEeOq3KT-lRHlww" name="" type="_9rbz4C9uEeOq3KT-lRHlww" association="_9xsM4S9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xsz8S9uEeOq3KT-lRHlww" name="" memberEnd="_9xsz8i9uEeOq3KT-lRHlww _9wpEAC9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xsz8i9uEeOq3KT-lRHlww" name="" type="_9rbz4C9uEeOq3KT-lRHlww" association="_9xsz8S9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xsz9C9uEeOq3KT-lRHlww" name="" memberEnd="_9xsz9S9uEeOq3KT-lRHlww _9wpEAi9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xsz9S9uEeOq3KT-lRHlww" name="" type="_9rbz4C9uEeOq3KT-lRHlww" association="_9xsz9C9uEeOq3KT-lRHlww"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_9oWDoC9uEeOq3KT-lRHlww" name="controller">
      <packagedElement xmi:type="uml:Class" xmi:id="_9pujsC9uEeOq3KT-lRHlww" name="Controller">
        <ownedAttribute xmi:id="_9wLJ8C9uEeOq3KT-lRHlww" name="view" visibility="private" type="_9rbz4C9uEeOq3KT-lRHlww" association="_9xUZcS9uEeOq3KT-lRHlww"/>
        <ownedAttribute xmi:id="_9wLxAi9uEeOq3KT-lRHlww" name="model" visibility="private" type="_9qFJAC9uEeOq3KT-lRHlww" association="_9xVAgS9uEeOq3KT-lRHlww"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wrgQC9uEeOq3KT-lRHlww" name="Controller" specification="_9pvx0C9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9wrgQS9uEeOq3KT-lRHlww" type="_9pujsC9uEeOq3KT-lRHlww" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>view = new BallWorldFrame&lt;TStrategyDropListItem, TPaintDropListItem>(new IModelAdapter&lt;TStrategyDropListItem, TPaintDropListItem>(){

			@Override
			public void paint(Graphics g) {
				model.update(g);				
			}

			@Override
			public void makeBall(TStrategyDropListItem strategyItem, TPaintDropListItem paintItem) {
				if (null != strategyItem)
					model.loadBall(((IStrategyFac) strategyItem).make(), ((IPaintStrategyFac) paintItem).make());
			}

			@Override
			public void clearBalls() {
				model.clearBalls();				
			}
			@Override
			public TStrategyDropListItem addStrategy(String className){
				return (TStrategyDropListItem) model.makeStrategyFac(className);
			}
			
			public TPaintDropListItem addPaintStrategy(String className){
				return (TPaintDropListItem) model.makePaintStrategyFac(className);

			}

			@Override
			public TStrategyDropListItem combineStrategies(Object selectedItem1,
					Object selectedItem2) {
					return (TStrategyDropListItem) model.combineStrategyFacs((IStrategyFac)selectedItem1, (IStrategyFac)selectedItem2);
			}
			@Override
			public void setSwitch(Object switcher){
				model.setSwitcher(((IStrategyFac) switcher).make());
			}


			@Override
			public void makeSwitcher() {
				model.makeSwitcherBall();				
			}
			
			public TPaintDropListItem getPaintStrategy(){
				return null;
				
			}
	
		});
		
		model = new BallWorldModel(new ViewAdapter(){
			
			public Component getPanel(){
				return view.getPanel();				
			}
			public void update(){
				view.update();				
			}
			@Override
			public IUpdateStrategy getSwitcher() {
				// TODO Auto-generated method stub
				return null;
			}		
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wrgQi9uEeOq3KT-lRHlww" name="main" specification="_9pwY4i9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9wrgQy9uEeOq3KT-lRHlww" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9wrgRC9uEeOq3KT-lRHlww" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					new Controller&lt;Object,Object>().startControl();
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
		

	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wrgRS9uEeOq3KT-lRHlww" name="startControl" specification="_9pw_8C9uEeOq3KT-lRHlww">
          <language>java</language>
          <body>view.start();
		model.start();
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_9pvx0C9uEeOq3KT-lRHlww" name="Controller" method="_9wrgQC9uEeOq3KT-lRHlww">
          <eAnnotations xmi:id="_9pvx0S9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_9pwY4C9uEeOq3KT-lRHlww" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_9w-bMC9uEeOq3KT-lRHlww">
            <body>Constructor instantiates anonymous inner classes of
	 * adapters and link adapters to model and view.</body>
          </ownedComment>
          <ownedParameter xmi:id="_9pwY4S9uEeOq3KT-lRHlww" type="_9pujsC9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9pwY4i9uEeOq3KT-lRHlww" name="main" isStatic="true" method="_9wrgQi9uEeOq3KT-lRHlww">
          <ownedComment xmi:id="_9w-bMS9uEeOq3KT-lRHlww">
            <body>Start up the Controller and the whole model/view</body>
          </ownedComment>
          <ownedParameter xmi:id="_9pwY4y9uEeOq3KT-lRHlww" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9pwY5C9uEeOq3KT-lRHlww" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_9pw_8C9uEeOq3KT-lRHlww" name="startControl" method="_9wrgRS9uEeOq3KT-lRHlww">
          <ownedComment xmi:id="_9w-bMi9uEeOq3KT-lRHlww">
            <body>Call start methods in both model and view</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xUZcS9uEeOq3KT-lRHlww" name="" memberEnd="_9xUZci9uEeOq3KT-lRHlww _9wLJ8C9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xUZci9uEeOq3KT-lRHlww" name="" type="_9pujsC9uEeOq3KT-lRHlww" association="_9xUZcS9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xVAgS9uEeOq3KT-lRHlww" name="" memberEnd="_9xVAgi9uEeOq3KT-lRHlww _9wLxAi9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xVAgi9uEeOq3KT-lRHlww" name="" type="_9pujsC9uEeOq3KT-lRHlww" association="_9xVAgS9uEeOq3KT-lRHlww"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_9oX40C9uEeOq3KT-lRHlww" name="Point2D">
      <packagedElement xmi:type="uml:Class" xmi:id="_9uDqFS9uEeOq3KT-lRHlww" name="Double"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_9oYf4C9uEeOq3KT-lRHlww" name="interaction_strategies">
      <packagedElement xmi:type="uml:Class" xmi:id="_9pxnAC9uEeOq3KT-lRHlww" clientDependency="_9uDDAC9uEeOq3KT-lRHlww" name="CollideStrategy">
        <ownedComment xmi:id="_9w-bMy9uEeOq3KT-lRHlww">
          <body>CollideStrategy causes balls to have elactic collisions with each other when 
they overlap
@author ammeurer
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_9wMYES9uEeOq3KT-lRHlww" name="Nudge" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_9wMYEi9uEeOq3KT-lRHlww" value="1.1"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_9uDDAC9uEeOq3KT-lRHlww" client="_9pxnAC9uEeOq3KT-lRHlww" supplier="_9rIR4S9uEeOq3KT-lRHlww" contract="_9rIR4S9uEeOq3KT-lRHlww"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wsHUC9uEeOq3KT-lRHlww" name="updateState" specification="_9uDDAS9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9wsHUS9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww">
            <eAnnotations xmi:id="_9wsHUi9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_9wsHUy9uEeOq3KT-lRHlww" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_9wsHVC9uEeOq3KT-lRHlww" name="dispatcher" type="_9qXc4C9uEeOq3KT-lRHlww"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd(){
		
		public void apply(Ball target, Dispatcher disp){
			double distance = Math.sqrt((Math.pow((target.getLocation().x-context.getLocation().x), 2.0))+(Math.pow((target.getLocation().y-context.getLocation().y), 2.0)));
			double deltaR = (context.getRadius()+target.getRadius())-distance;
			if(deltaR >= 0){ 
				if (!(context.equals(target))){
					double massSource = Math.pow(context.getRadius(),2);
					double massTarget = Math.pow(target.getRadius(),2);
					double reducedMass = reducedMass(massSource, massTarget);
					Point2D.Double impulse = impulse(context.getLocation(), context.getVelocity(), target.getLocation(), target.getVelocity(), reducedMass, distance, deltaR);
					updateCollision(context, target, impulse.x, impulse.y, disp);
					updateCollision(target, context, -impulse.x, -impulse.y, disp);
				}
			}
		}
	});
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wsHVS9uEeOq3KT-lRHlww" name="reducedMass" specification="_9pyOEC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9wsHVi9uEeOq3KT-lRHlww" name="mSource">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9wsHVy9uEeOq3KT-lRHlww" name="mTarget">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9wsHWC9uEeOq3KT-lRHlww" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>if (mSource == Double.POSITIVE_INFINITY)
		return mTarget;
	if (mTarget == Double.POSITIVE_INFINITY)
		return mSource;
	else
		return (mSource * mTarget) / (mSource + mTarget);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wsHWS9uEeOq3KT-lRHlww" name="impulse" specification="_9vgbkC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9wsHWi9uEeOq3KT-lRHlww" name="lSource" type="_9uB04C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wsHWy9uEeOq3KT-lRHlww" name="vSource" type="_9uB04C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wsHXC9uEeOq3KT-lRHlww" name="lTarget" type="_9uB04C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wsHXS9uEeOq3KT-lRHlww" name="vTarget" type="_9uB04C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wsHXi9uEeOq3KT-lRHlww" name="reducedMass">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9wsHXy9uEeOq3KT-lRHlww" name="distance">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9wsHYC9uEeOq3KT-lRHlww" name="deltaR">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9wsHYS9uEeOq3KT-lRHlww" type="_9uDqFS9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>// Calculate the normal vector, from source to target
	double nx = ((double) (lTarget.x - lSource.x)) / distance;
	double ny = ((double) (lTarget.y - lSource.y)) / distance;

	// delta velocity (speed, actually) in normal direction, source to
	// target
	double dvn = (vTarget.x - vSource.x) * nx + (vTarget.y - vSource.y) * ny;

	// move the source ball beyond collision range of the target ball, along
	// the normal direction.
	lSource.translate((int) Math.ceil(-nx * (Nudge * deltaR)),
			(int) Math.ceil(-ny * (Nudge * deltaR)));


	return new Point2D.Double(2.0 * reducedMass * dvn * nx, 2.0
			* reducedMass * dvn * ny);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wsuYC9uEeOq3KT-lRHlww" name="updateCollision" specification="_9uE4MC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9wsuYS9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wsuYi9uEeOq3KT-lRHlww" name="target" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wsuYy9uEeOq3KT-lRHlww" name="impX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9wsuZC9uEeOq3KT-lRHlww" name="impY">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9wsuZS9uEeOq3KT-lRHlww" name="dispatcher" type="_9qXc4C9uEeOq3KT-lRHlww"/>
          <language>java</language>
          <body>int mContext = (int) (context.getRadius() * context.getRadius());
	context.getVelocity().translate((int) Math.round(impX / mContext),(int) Math.round(impY / mContext));
	context.interactWith(target, dispatcher);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wsuZi9uEeOq3KT-lRHlww" name="init" specification="_9uFfQC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9wsuZy9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <language>java</language>
          <body>context.setInteractStrategy(new NormalElasticStrategy());
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_9pyOEC9uEeOq3KT-lRHlww" name="reducedMass" visibility="protected" method="_9wsHVS9uEeOq3KT-lRHlww">
          <ownedComment xmi:id="_9w_CQC9uEeOq3KT-lRHlww">
            <body>Returns the reduced mass of the two balls (m1*m2)/(m1+m2) Gives correct
result if one of the balls has infinite mass.

@param mSource
           Mass of the source ball
@param mTarget
           Mass of the target ball</body>
          </ownedComment>
          <ownedParameter xmi:id="_9pyOES9uEeOq3KT-lRHlww" name="mSource">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9pyOEi9uEeOq3KT-lRHlww" name="mTarget">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9pyOEy9uEeOq3KT-lRHlww" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_9uDDAS9uEeOq3KT-lRHlww" name="updateState" method="_9wsHUC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9uDDAi9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww">
            <eAnnotations xmi:id="_9uDqES9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_9uDqEi9uEeOq3KT-lRHlww" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_9uDDAy9uEeOq3KT-lRHlww" name="dispatcher" type="_9qXc4C9uEeOq3KT-lRHlww"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9uE4MC9uEeOq3KT-lRHlww" name="updateCollision" visibility="protected" method="_9wsuYC9uEeOq3KT-lRHlww">
          <ownedComment xmi:id="_9w_CQi9uEeOq3KT-lRHlww">
            <body>Updates the velocity of the source ball, given an impulse, then uses the
context's interactWith method to determine the post collision behavior, from the context
ball's perspective. The change in velocity is the impulse divided by the (source) ball's mass. To change
the velocity of the target ball, switch the source and target input
parameters and negate the impulse values.   This will also run the post collision behavior from 
the other perspective.

@param context
           The ball to update
@param target
           The ball being collided with
@param impX
           x-coordinate of the impulse
@param impY
           y-coordinate of the impulse</body>
          </ownedComment>
          <ownedParameter xmi:id="_9uE4MS9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9uE4Mi9uEeOq3KT-lRHlww" name="target" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9uE4My9uEeOq3KT-lRHlww" name="impX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9uE4NC9uEeOq3KT-lRHlww" name="impY">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9uE4NS9uEeOq3KT-lRHlww" name="dispatcher" type="_9qXc4C9uEeOq3KT-lRHlww"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9uFfQC9uEeOq3KT-lRHlww" name="init" method="_9wsuZi9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9uFfQS9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9vgbkC9uEeOq3KT-lRHlww" name="impulse" visibility="protected" method="_9wsHWS9uEeOq3KT-lRHlww">
          <ownedComment xmi:id="_9w_CQS9uEeOq3KT-lRHlww">
            <body>Calculates the impulse (change in momentum) of the collision in the
direction from the source to the target This method calculates the
impulse on the source ball. The impulse on the target ball is the
negative of the result. Also moves source ball out of collision range
along normal direction. The change in velocity of the source ball is the
impulse divided by the source's mass The change in velocity of the target
ball is the negative of the impulse divided by the target's mass

Operational note: Even though theoretically, the difference in velocities
of two balls should be co-linear with the normal line between them, the
discrete nature of animations means that the point where collision is
detected may not be at the same point as the theoretical contact point.
This method calculates the rebound directions as if the two balls were
the appropriate radii such that they had just contacted
_at_the_point_of_collision_detection_. This may give slightly different
rebound direction than one would calculate if they contacted at the
theoretical point given by their actual radii.

@param lSource
           Location of the source ball
@param vSource
           Velocity of the source ball
@param lTarget
           Location of the target ball
@param vTarget
           Velocity of the target ball
@param reducedMass
           Reduced mass of the two balls
@param distance
           Distance between the two balls.
@param deltaR
           The minimum allowed separation(sum of the ball radii) minus the actual separation(distance between ball centers). Should be a
           positive value.  This is the amount of overlap of the balls as measured along the line between their centers.
@return</body>
          </ownedComment>
          <ownedParameter xmi:id="_9vhCoC9uEeOq3KT-lRHlww" name="lSource" type="_9uB04C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9vhCoS9uEeOq3KT-lRHlww" name="vSource" type="_9uB04C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9vhCoi9uEeOq3KT-lRHlww" name="lTarget" type="_9uB04C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9vhCoy9uEeOq3KT-lRHlww" name="vTarget" type="_9uB04C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9vhCpC9uEeOq3KT-lRHlww" name="reducedMass">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9vhCpS9uEeOq3KT-lRHlww" name="distance">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9vhCpi9uEeOq3KT-lRHlww" name="deltaR">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9vhpsC9uEeOq3KT-lRHlww" type="_9uDqFS9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9p14cC9uEeOq3KT-lRHlww" clientDependency="_9uGtYC9uEeOq3KT-lRHlww" name="ColorConformStrategy">
        <ownedComment xmi:id="_9w_CQy9uEeOq3KT-lRHlww">
          <body>When a ball with a ColorConform Strategy is created, all 
the existing balls in the GUI become the same color as the new ball
@author ammeurer
 *</body>
        </ownedComment>
        <interfaceRealization xmi:id="_9uGtYC9uEeOq3KT-lRHlww" client="_9p14cC9uEeOq3KT-lRHlww" supplier="_9rIR4S9uEeOq3KT-lRHlww" contract="_9rIR4S9uEeOq3KT-lRHlww"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wsuaC9uEeOq3KT-lRHlww" name="updateState" specification="_9uHUcC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9wsuaS9uEeOq3KT-lRHlww" name="thisBall" type="_9qPhEC9uEeOq3KT-lRHlww">
            <eAnnotations xmi:id="_9wsuai9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_9wsuay9uEeOq3KT-lRHlww" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_9wsubC9uEeOq3KT-lRHlww" name="d" type="_9qXc4C9uEeOq3KT-lRHlww"/>
          <language>java</language>
          <body>d.notifyAll(new IBallCmd(){
			
			public void apply(Ball target, Dispatcher disp){
				target.setColor(thisBall.getColor());
			}

		});		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wtVcC9uEeOq3KT-lRHlww" name="init" specification="_9uH7gi9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9wtVcS9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <language>java</language>
          <body>context.setInteractStrategy(new MultiInteractStrategy(context.getInteractStrategy(),new IInteractStrategy(){
			@Override
			public void interact(Ball context, Ball target, Dispatcher disp) {
	
			}
			
		}));		
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_9uHUcC9uEeOq3KT-lRHlww" name="updateState" method="_9wsuaC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9uHUcS9uEeOq3KT-lRHlww" name="thisBall" type="_9qPhEC9uEeOq3KT-lRHlww">
            <eAnnotations xmi:id="_9uHUdC9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_9uHUdS9uEeOq3KT-lRHlww" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_9uHUci9uEeOq3KT-lRHlww" name="d" type="_9qXc4C9uEeOq3KT-lRHlww"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9uH7gi9uEeOq3KT-lRHlww" name="init" method="_9wtVcC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9uH7gy9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_9p3GkC9uEeOq3KT-lRHlww" name="IInteractStrategy">
        <ownedComment xmi:id="_9w_CRC9uEeOq3KT-lRHlww">
          <body>Strategy that defines a directed interaction between two balls where the balls are NOT
equivalently processed. 

@author swong
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_9p3toC9uEeOq3KT-lRHlww" name="NULL_STRATEGY" isLeaf="true" isStatic="true" type="_9p3GkC9uEeOq3KT-lRHlww" isReadOnly="true" association="_9xSkQC9uEeOq3KT-lRHlww">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_9p3toS9uEeOq3KT-lRHlww" value="new IInteractStrategy() {&#xA;&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * No-op behavior&#xA;&#x9;&#x9; * @param context Ignored&#xA;&#x9;&#x9; * @param target Ignored&#xA;&#x9;&#x9; * @param disp Ignored&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;public void interact(Ball context, Ball target, Dispatcher disp) {&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_9uIikS9uEeOq3KT-lRHlww" name="interact">
          <ownedParameter xmi:id="_9uIiki9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9uIiky9uEeOq3KT-lRHlww" name="target" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9uIilC9uEeOq3KT-lRHlww" name="disp" type="_9qXc4C9uEeOq3KT-lRHlww"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9p47wC9uEeOq3KT-lRHlww" clientDependency="_9uJJoC9uEeOq3KT-lRHlww" name="MultiInteractStrategy">
        <ownedComment xmi:id="_9w_CRS9uEeOq3KT-lRHlww">
          <body>MultiStrategy is a recursive tree that allows the user to combine
as many strategies as they want.
@author ammeurer
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_9wM_IC9uEeOq3KT-lRHlww" name="_s1" visibility="private" type="_9p3GkC9uEeOq3KT-lRHlww" association="_9xVnkS9uEeOq3KT-lRHlww"/>
        <ownedAttribute xmi:id="_9wM_Ii9uEeOq3KT-lRHlww" name="_s2" visibility="private" type="_9p3GkC9uEeOq3KT-lRHlww" association="_9xWOoS9uEeOq3KT-lRHlww"/>
        <interfaceRealization xmi:id="_9uJJoC9uEeOq3KT-lRHlww" client="_9p47wC9uEeOq3KT-lRHlww" supplier="_9p3GkC9uEeOq3KT-lRHlww" contract="_9p3GkC9uEeOq3KT-lRHlww"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wtVci9uEeOq3KT-lRHlww" name="MultiInteractStrategy" specification="_9uJJoS9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9wtVcy9uEeOq3KT-lRHlww" name="s1" type="_9p3GkC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wtVdC9uEeOq3KT-lRHlww" name="s2" type="_9p3GkC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wtVdS9uEeOq3KT-lRHlww" type="_9p47wC9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>_s1 = s1;
			_s2 = s2;
		</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wtVdi9uEeOq3KT-lRHlww" name="interact" specification="_9uJwsi9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9wtVdy9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wtVeC9uEeOq3KT-lRHlww" name="target" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wtVeS9uEeOq3KT-lRHlww" name="disp" type="_9qXc4C9uEeOq3KT-lRHlww"/>
          <language>java</language>
          <body>_s1.interact(context, target, disp);
			_s2.interact(context, target, disp);
		</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_9uJJoS9uEeOq3KT-lRHlww" name="MultiInteractStrategy" method="_9wtVci9uEeOq3KT-lRHlww">
          <eAnnotations xmi:id="_9uJJpC9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_9uJwsC9uEeOq3KT-lRHlww" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_9uJJoi9uEeOq3KT-lRHlww" name="s1" type="_9p3GkC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9uJJoy9uEeOq3KT-lRHlww" name="s2" type="_9p3GkC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9uJwsS9uEeOq3KT-lRHlww" type="_9p47wC9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9uJwsi9uEeOq3KT-lRHlww" name="interact" method="_9wtVdi9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9uJwsy9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9uJwtC9uEeOq3KT-lRHlww" name="target" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9uJwtS9uEeOq3KT-lRHlww" name="disp" type="_9qXc4C9uEeOq3KT-lRHlww"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9p7YAC9uEeOq3KT-lRHlww" clientDependency="_9uKXwy9uEeOq3KT-lRHlww" name="NormalElasticStrategy">
        <ownedComment xmi:id="_9w_CRi9uEeOq3KT-lRHlww">
          <body>This class is essentially the no-op IInteractStrategy object that
each ball initially has.
@author ammeurer
 *</body>
        </ownedComment>
        <interfaceRealization xmi:id="_9uKXwy9uEeOq3KT-lRHlww" client="_9p7YAC9uEeOq3KT-lRHlww" supplier="_9p3GkC9uEeOq3KT-lRHlww" contract="_9p3GkC9uEeOq3KT-lRHlww"/>
        <ownedOperation xmi:id="_9uK-0C9uEeOq3KT-lRHlww" name="interact">
          <ownedParameter xmi:id="_9uK-0S9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9uK-0i9uEeOq3KT-lRHlww" name="target" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9uK-0y9uEeOq3KT-lRHlww" name="disp" type="_9qXc4C9uEeOq3KT-lRHlww"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9p8mIC9uEeOq3KT-lRHlww" clientDependency="_9uLl4i9uEeOq3KT-lRHlww" name="SlideStrategy">
        <ownedComment xmi:id="_9w_CRy9uEeOq3KT-lRHlww">
          <body>SlideStrategy causes balls to slide past each other when 
	 * they overlap
	 * @author ammeurer
	 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_9wNmMS9uEeOq3KT-lRHlww" name="Nudge" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_9wNmMi9uEeOq3KT-lRHlww" value="1.1"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_9uLl4i9uEeOq3KT-lRHlww" client="_9p8mIC9uEeOq3KT-lRHlww" supplier="_9rIR4S9uEeOq3KT-lRHlww" contract="_9rIR4S9uEeOq3KT-lRHlww"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wt8gC9uEeOq3KT-lRHlww" name="updateState" specification="_9uMM8C9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9wt8gS9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww">
            <eAnnotations xmi:id="_9wt8gi9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_9wt8gy9uEeOq3KT-lRHlww" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_9wt8hC9uEeOq3KT-lRHlww" name="dispatcher" type="_9qXc4C9uEeOq3KT-lRHlww"/>
          <language>java</language>
          <body>dispatcher.notifyAll(new IBallCmd(){
			
			public void apply(Ball target, Dispatcher disp){
				double distance = Math.sqrt((Math.pow((target.getLocation().x-context.getLocation().x), 2.0))+(Math.pow((target.getLocation().y-context.getLocation().y), 2.0)));
				double deltaR = (context.getRadius()+target.getRadius())-distance;
				if(deltaR >= 0){ 
					if (!(context.equals(target))){
						double massSource = Math.pow(context.getRadius(),2);
						double massTarget = Math.pow(target.getRadius(),2);
						double reducedMass = reducedMass(massSource, massTarget);
						Point2D.Double impulse = impulse(context.getLocation(), context.getVelocity(), target.getLocation(), target.getVelocity(), reducedMass, distance, deltaR);
						updateCollision(context, target, impulse.x, impulse.y, disp);
						updateCollision(target, context, -impulse.x, -impulse.y, disp);
					}
				}
			}
		});
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wt8hS9uEeOq3KT-lRHlww" name="reducedMass" specification="_9p9NMC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9wt8hi9uEeOq3KT-lRHlww" name="mSource">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9wt8hy9uEeOq3KT-lRHlww" name="mTarget">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9wt8iC9uEeOq3KT-lRHlww" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>if (mSource == Double.POSITIVE_INFINITY)
			return mTarget;
		if (mTarget == Double.POSITIVE_INFINITY)
			return mSource;
		else
			return (mSource * mTarget) / (mSource + mTarget);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wt8iS9uEeOq3KT-lRHlww" name="impulse" specification="_9viQwC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9wt8ii9uEeOq3KT-lRHlww" name="lSource" type="_9uB04C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wt8iy9uEeOq3KT-lRHlww" name="vSource" type="_9uB04C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wt8jC9uEeOq3KT-lRHlww" name="lTarget" type="_9uB04C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wt8jS9uEeOq3KT-lRHlww" name="vTarget" type="_9uB04C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wt8ji9uEeOq3KT-lRHlww" name="reducedMass">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9wt8jy9uEeOq3KT-lRHlww" name="distance">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9wt8kC9uEeOq3KT-lRHlww" name="deltaR">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9wt8kS9uEeOq3KT-lRHlww" type="_9uDqFS9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>// Calculate the normal vector, from source to target
		double nx = ((double) (lTarget.x - lSource.x)) / distance;
		double ny = ((double) (lTarget.y - lSource.y)) / distance;

		// delta velocity (speed, actually) in normal direction, source to
		// target
		double dvn = (vTarget.x - vSource.x) * nx + (vTarget.y - vSource.y) * ny;

		// move the source ball beyond collision range of the target ball, along
		// the normal direction.
		lSource.translate((int) Math.ceil(-nx * (Nudge * deltaR)),
				(int) Math.ceil(-ny * (Nudge * deltaR)));


		return new Point2D.Double(2.0 * reducedMass * dvn * nx, 2.0
				* reducedMass * dvn * ny);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wujkC9uEeOq3KT-lRHlww" name="updateCollision" specification="_9uNbEC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9wujkS9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wujki9uEeOq3KT-lRHlww" name="target" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wujky9uEeOq3KT-lRHlww" name="impX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9wujlC9uEeOq3KT-lRHlww" name="impY">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9wujlS9uEeOq3KT-lRHlww" name="dispatcher" type="_9qXc4C9uEeOq3KT-lRHlww"/>
          <language>java</language>
          <body>int mContext = (int) (context.getRadius() * context.getRadius());
		//context.getVelocity().translate((int) Math.round(impX / mContext),(int) Math.round(impY / mContext));
		context.interactWith(target, dispatcher);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wujli9uEeOq3KT-lRHlww" name="init" specification="_9uOCIC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9wujly9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <language>java</language>
          <body>context.setInteractStrategy(new NormalElasticStrategy());
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_9p9NMC9uEeOq3KT-lRHlww" name="reducedMass" visibility="protected" method="_9wt8hS9uEeOq3KT-lRHlww">
          <ownedComment xmi:id="_9w_CSC9uEeOq3KT-lRHlww">
            <body>Returns the reduced mass of the two balls (m1*m2)/(m1+m2) Gives correct
	 * result if one of the balls has infinite mass.
	 * 
	 * @param mSource
	 *            Mass of the source ball
	 * @param mTarget
	 *            Mass of the target ball</body>
          </ownedComment>
          <ownedParameter xmi:id="_9p9NMS9uEeOq3KT-lRHlww" name="mSource">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9p9NMi9uEeOq3KT-lRHlww" name="mTarget">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9p9NMy9uEeOq3KT-lRHlww" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_9uMM8C9uEeOq3KT-lRHlww" name="updateState" method="_9wt8gC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9uMM8S9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww">
            <eAnnotations xmi:id="_9uMM9C9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_9uMM9S9uEeOq3KT-lRHlww" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_9uMM8i9uEeOq3KT-lRHlww" name="dispatcher" type="_9qXc4C9uEeOq3KT-lRHlww"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9uNbEC9uEeOq3KT-lRHlww" name="updateCollision" visibility="protected" method="_9wujkC9uEeOq3KT-lRHlww">
          <ownedComment xmi:id="_9w_CSi9uEeOq3KT-lRHlww">
            <body>Updates the velocity of the source ball, given an impulse, then uses the
	 * context's interactWith method to determine the post collision behavior, from the context
	 * ball's perspective. The change in velocity is the impulse divided by the (source) ball's mass. To change
	 * the velocity of the target ball, switch the source and target input
	 * parameters and negate the impulse values.   This will also run the post collision behavior from 
	 * the other perspective.
	 * 
	 * @param context
	 *            The ball to update
	 * @param target
	 *            The ball being collided with
	 * @param impX
	 *            x-coordinate of the impulse
	 * @param impY
	 *            y-coordinate of the impulse</body>
          </ownedComment>
          <ownedParameter xmi:id="_9uNbES9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9uNbEi9uEeOq3KT-lRHlww" name="target" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9uNbEy9uEeOq3KT-lRHlww" name="impX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9uNbFC9uEeOq3KT-lRHlww" name="impY">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9uNbFS9uEeOq3KT-lRHlww" name="dispatcher" type="_9qXc4C9uEeOq3KT-lRHlww"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9uOCIC9uEeOq3KT-lRHlww" name="init" method="_9wujli9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9uOCIS9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9viQwC9uEeOq3KT-lRHlww" name="impulse" visibility="protected" method="_9wt8iS9uEeOq3KT-lRHlww">
          <ownedComment xmi:id="_9w_CSS9uEeOq3KT-lRHlww">
            <body>Calculates the impulse (change in momentum) of the collision in the
	 * direction from the source to the target This method calculates the
	 * impulse on the source ball. The impulse on the target ball is the
	 * negative of the result. Also moves source ball out of collision range
	 * along normal direction. The change in velocity of the source ball is the
	 * impulse divided by the source's mass The change in velocity of the target
	 * ball is the negative of the impulse divided by the target's mass
	 * 
	 * Operational note: Even though theoretically, the difference in velocities
	 * of two balls should be co-linear with the normal line between them, the
	 * discrete nature of animations means that the point where collision is
	 * detected may not be at the same point as the theoretical contact point.
	 * This method calculates the rebound directions as if the two balls were
	 * the appropriate radii such that they had just contacted
	 * _at_the_point_of_collision_detection_. This may give slightly different
	 * rebound direction than one would calculate if they contacted at the
	 * theoretical point given by their actual radii.
	 * 
	 * @param lSource
	 *            Location of the source ball
	 * @param vSource
	 *            Velocity of the source ball
	 * @param lTarget
	 *            Location of the target ball
	 * @param vTarget
	 *            Velocity of the target ball
	 * @param reducedMass
	 *            Reduced mass of the two balls
	 * @param distance
	 *            Distance between the two balls.
	 * @param deltaR
	 *            The minimum allowed separation(sum of the ball radii) minus the actual separation(distance between ball centers). Should be a
	 *            positive value.  This is the amount of overlap of the balls as measured along the line between their centers.
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_9viQwS9uEeOq3KT-lRHlww" name="lSource" type="_9uB04C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9viQwi9uEeOq3KT-lRHlww" name="vSource" type="_9uB04C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9viQwy9uEeOq3KT-lRHlww" name="lTarget" type="_9uB04C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9viQxC9uEeOq3KT-lRHlww" name="vTarget" type="_9uB04C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9vi30C9uEeOq3KT-lRHlww" name="reducedMass">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9vi30S9uEeOq3KT-lRHlww" name="distance">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9vi30i9uEeOq3KT-lRHlww" name="deltaR">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9vi30y9uEeOq3KT-lRHlww" type="_9uDqFS9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9qA3kC9uEeOq3KT-lRHlww" clientDependency="_9uPQQC9uEeOq3KT-lRHlww" name="StickySyncStrategy">
        <ownedComment xmi:id="_9w_pUC9uEeOq3KT-lRHlww">
          <body>StickyStrategy makes balls stick together and makes all the sticky balls'
velocities the same after a collision with another ball.
@author ammeurer
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_9wONQS9uEeOq3KT-lRHlww" name="Nudge" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_9wONQi9uEeOq3KT-lRHlww" value="1.1"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_9uPQQC9uEeOq3KT-lRHlww" client="_9qA3kC9uEeOq3KT-lRHlww" supplier="_9rIR4S9uEeOq3KT-lRHlww" contract="_9rIR4S9uEeOq3KT-lRHlww"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wujmC9uEeOq3KT-lRHlww" name="init" specification="_9uPQQS9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9wujmS9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <language>java</language>
          <body>context.setInteractStrategy(new MultiInteractStrategy(context.getInteractStrategy(),new IInteractStrategy(){
			@Override
			public void interact(Ball context, Ball target, Dispatcher disp) {
				target.setVelocity(context.getVelocity());
				//int combinedRad = (int) ((int) context.getRadius()+target.getRadius());
				Point stickLoc = new Point((context.getLocation().x), (int) (context.getLocation().y));
				target.setLocation(stickLoc);
			}
			
		}));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wvKoC9uEeOq3KT-lRHlww" name="updateState" specification="_9uP3UC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9wvKoS9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww">
            <eAnnotations xmi:id="_9wvKoi9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_9wvKoy9uEeOq3KT-lRHlww" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_9wvKpC9uEeOq3KT-lRHlww" name="disp" type="_9qXc4C9uEeOq3KT-lRHlww"/>
          <language>java</language>
          <body>disp.notifyAll(new IBallCmd(){
			
			public void apply(Ball target, Dispatcher disp){
				double distance = Math.sqrt((Math.pow((target.getLocation().x-context.getLocation().x), 2.0))+(Math.pow((target.getLocation().y-context.getLocation().y), 2.0)));
				double deltaR = (context.getRadius()+target.getRadius())-distance;
				if(deltaR >= 0){ 
					if (!(context.equals(target))){
						double massSource = Math.pow(context.getRadius(),2);
						double massTarget = Math.pow(target.getRadius(),2);
						double reducedMass = reducedMass(massSource, massTarget);
						Point2D.Double impulse = impulse(context.getLocation(), context.getVelocity(), target.getLocation(), target.getVelocity(), reducedMass, distance, deltaR);
						updateCollision(context, target, impulse.x, impulse.y, disp);
						updateCollision(target, context, -impulse.x, -impulse.y, disp);
					}
				}
			}
		});	
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wvKpS9uEeOq3KT-lRHlww" name="reducedMass" specification="_9qBeoC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9wvKpi9uEeOq3KT-lRHlww" name="mSource">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9wvKpy9uEeOq3KT-lRHlww" name="mTarget">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9wvKqC9uEeOq3KT-lRHlww" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>if (mSource == Double.POSITIVE_INFINITY)
			return mTarget;
		if (mTarget == Double.POSITIVE_INFINITY)
			return mSource;
		else
			return (mSource * mTarget) / (mSource + mTarget);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wvKqS9uEeOq3KT-lRHlww" name="impulse" specification="_9vje4C9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9wvKqi9uEeOq3KT-lRHlww" name="lSource" type="_9uB04C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wvKqy9uEeOq3KT-lRHlww" name="vSource" type="_9uB04C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wvKrC9uEeOq3KT-lRHlww" name="lTarget" type="_9uB04C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wvKrS9uEeOq3KT-lRHlww" name="vTarget" type="_9uB04C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wvKri9uEeOq3KT-lRHlww" name="reducedMass">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9wvKry9uEeOq3KT-lRHlww" name="distance">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9wvKsC9uEeOq3KT-lRHlww" name="deltaR">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9wvKsS9uEeOq3KT-lRHlww" type="_9uDqFS9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>// Calculate the normal vector, from source to target
		double nx = ((double) (lTarget.x - lSource.x)) / distance;
		double ny = ((double) (lTarget.y - lSource.y)) / distance;

		// delta velocity (speed, actually) in normal direction, source to
		// target
		double dvn = (vTarget.x - vSource.x) * nx + (vTarget.y - vSource.y) * ny;

		// move the source ball beyond collision range of the target ball, along
		// the normal direction.
		lSource.translate((int) Math.ceil(-nx * (Nudge * deltaR)),
				(int) Math.ceil(-ny * (Nudge * deltaR)));


		return new Point2D.Double(2.0 * reducedMass * dvn * nx, 2.0
				* reducedMass * dvn * ny);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9wvxsC9uEeOq3KT-lRHlww" name="updateCollision" specification="_9uRFcC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9wvxsS9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wvxsi9uEeOq3KT-lRHlww" name="target" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wvxsy9uEeOq3KT-lRHlww" name="impX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9wvxtC9uEeOq3KT-lRHlww" name="impY">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9wvxtS9uEeOq3KT-lRHlww" name="dispatcher" type="_9qXc4C9uEeOq3KT-lRHlww"/>
          <language>java</language>
          <body>int mContext = (int) (context.getRadius() * context.getRadius());
		//context.getVelocity().translate((int) Math.round(impX / mContext),(int) Math.round(impY / mContext));
		context.interactWith(target, dispatcher);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_9qBeoC9uEeOq3KT-lRHlww" name="reducedMass" visibility="protected" method="_9wvKpS9uEeOq3KT-lRHlww">
          <ownedComment xmi:id="_9w_pUS9uEeOq3KT-lRHlww">
            <body>Returns the reduced mass of the two balls (m1*m2)/(m1+m2) Gives correct
	 * result if one of the balls has infinite mass.
	 * 
	 * @param mSource
	 *            Mass of the source ball
	 * @param mTarget
	 *            Mass of the target ball</body>
          </ownedComment>
          <ownedParameter xmi:id="_9qBeoS9uEeOq3KT-lRHlww" name="mSource">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9qCFsC9uEeOq3KT-lRHlww" name="mTarget">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9qCFsS9uEeOq3KT-lRHlww" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_9uPQQS9uEeOq3KT-lRHlww" name="init" method="_9wujmC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9uPQQi9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9uP3UC9uEeOq3KT-lRHlww" name="updateState" method="_9wvKoC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9uP3US9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww">
            <eAnnotations xmi:id="_9uP3VC9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_9uP3VS9uEeOq3KT-lRHlww" key="final"/>
            </eAnnotations>
          </ownedParameter>
          <ownedParameter xmi:id="_9uP3Ui9uEeOq3KT-lRHlww" name="disp" type="_9qXc4C9uEeOq3KT-lRHlww"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9uRFcC9uEeOq3KT-lRHlww" name="updateCollision" visibility="protected" method="_9wvxsC9uEeOq3KT-lRHlww">
          <ownedComment xmi:id="_9w_pUy9uEeOq3KT-lRHlww">
            <body>Updates the velocity of the source ball, given an impulse, then uses the
	 * context's interactWith method to determine the post collision behavior, from the context
	 * ball's perspective. The change in velocity is the impulse divided by the (source) ball's mass. To change
	 * the velocity of the target ball, switch the source and target input
	 * parameters and negate the impulse values.   This will also run the post collision behavior from 
	 * the other perspective.
	 * 
	 * @param context
	 *            The ball to update
	 * @param target
	 *            The ball being collided with
	 * @param impX
	 *            x-coordinate of the impulse
	 * @param impY
	 *            y-coordinate of the impulse</body>
          </ownedComment>
          <ownedParameter xmi:id="_9uRFcS9uEeOq3KT-lRHlww" name="context" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9uRFci9uEeOq3KT-lRHlww" name="target" type="_9qPhEC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9uRFcy9uEeOq3KT-lRHlww" name="impX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9uRFdC9uEeOq3KT-lRHlww" name="impY">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9uRFdS9uEeOq3KT-lRHlww" name="dispatcher" type="_9qXc4C9uEeOq3KT-lRHlww"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9vje4C9uEeOq3KT-lRHlww" name="impulse" visibility="protected" method="_9wvKqS9uEeOq3KT-lRHlww">
          <ownedComment xmi:id="_9w_pUi9uEeOq3KT-lRHlww">
            <body>Calculates the impulse (change in momentum) of the collision in the
	 * direction from the source to the target This method calculates the
	 * impulse on the source ball. The impulse on the target ball is the
	 * negative of the result. Also moves source ball out of collision range
	 * along normal direction. The change in velocity of the source ball is the
	 * impulse divided by the source's mass The change in velocity of the target
	 * ball is the negative of the impulse divided by the target's mass
	 * 
	 * Operational note: Even though theoretically, the difference in velocities
	 * of two balls should be co-linear with the normal line between them, the
	 * discrete nature of animations means that the point where collision is
	 * detected may not be at the same point as the theoretical contact point.
	 * This method calculates the rebound directions as if the two balls were
	 * the appropriate radii such that they had just contacted
	 * _at_the_point_of_collision_detection_. This may give slightly different
	 * rebound direction than one would calculate if they contacted at the
	 * theoretical point given by their actual radii.
	 * 
	 * @param lSource
	 *            Location of the source ball
	 * @param vSource
	 *            Velocity of the source ball
	 * @param lTarget
	 *            Location of the target ball
	 * @param vTarget
	 *            Velocity of the target ball
	 * @param reducedMass
	 *            Reduced mass of the two balls
	 * @param distance
	 *            Distance between the two balls.
	 * @param deltaR
	 *            The minimum allowed separation(sum of the ball radii) minus the actual separation(distance between ball centers). Should be a
	 *            positive value.  This is the amount of overlap of the balls as measured along the line between their centers.
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_9vje4S9uEeOq3KT-lRHlww" name="lSource" type="_9uB04C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9vje4i9uEeOq3KT-lRHlww" name="vSource" type="_9uB04C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9vkF8C9uEeOq3KT-lRHlww" name="lTarget" type="_9uB04C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9vkF8S9uEeOq3KT-lRHlww" name="vTarget" type="_9uB04C9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9vkF8i9uEeOq3KT-lRHlww" name="reducedMass">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9vkF8y9uEeOq3KT-lRHlww" name="distance">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9vkF9C9uEeOq3KT-lRHlww" name="deltaR">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9vkF9S9uEeOq3KT-lRHlww" type="_9uDqFS9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xSkQC9uEeOq3KT-lRHlww" name="" memberEnd="_9xSkQS9uEeOq3KT-lRHlww _9p3toC9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xSkQS9uEeOq3KT-lRHlww" name="" type="_9p3GkC9uEeOq3KT-lRHlww" association="_9xSkQC9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xVnkS9uEeOq3KT-lRHlww" name="" memberEnd="_9xVnki9uEeOq3KT-lRHlww _9wM_IC9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xVnki9uEeOq3KT-lRHlww" name="" type="_9p47wC9uEeOq3KT-lRHlww" association="_9xVnkS9uEeOq3KT-lRHlww"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xWOoS9uEeOq3KT-lRHlww" name="" memberEnd="_9xWOoi9uEeOq3KT-lRHlww _9wM_Ii9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xWOoi9uEeOq3KT-lRHlww" name="" type="_9p47wC9uEeOq3KT-lRHlww" association="_9xWOoS9uEeOq3KT-lRHlww"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_9of0oC9uEeOq3KT-lRHlww" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_9of0oS9uEeOq3KT-lRHlww" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_9pO0cC9uEeOq3KT-lRHlww" name="border">
          <packagedElement xmi:type="uml:Class" xmi:id="_9vLrcS9uEeOq3KT-lRHlww" name="EmptyBorder"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_9uUIwS9uEeOq3KT-lRHlww" name="Timer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9vKdUS9uEeOq3KT-lRHlww" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9vLEYS9uEeOq3KT-lRHlww" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9vMSgC9uEeOq3KT-lRHlww" name="JLabel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9vMSgi9uEeOq3KT-lRHlww" name="JTextField"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9vM5kS9uEeOq3KT-lRHlww" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_9vQj8S9uEeOq3KT-lRHlww" name="JComboBox"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_9ogbsC9uEeOq3KT-lRHlww" name="util">
      <packagedElement xmi:type="uml:Interface" xmi:id="_9rSp8C9uEeOq3KT-lRHlww" name="IRandomizer">
        <ownedOperation xmi:id="_9rTRAC9uEeOq3KT-lRHlww" name="randomInt" isAbstract="true">
          <ownedParameter xmi:id="_9rTRAS9uEeOq3KT-lRHlww" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9rTRAi9uEeOq3KT-lRHlww" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9rTRAy9uEeOq3KT-lRHlww" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_9rTRBC9uEeOq3KT-lRHlww" name="randomDouble" isAbstract="true">
          <ownedParameter xmi:id="_9rTRBS9uEeOq3KT-lRHlww" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9rT4EC9uEeOq3KT-lRHlww" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9rT4ES9uEeOq3KT-lRHlww" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_9rT4Ei9uEeOq3KT-lRHlww" name="randomColor" isAbstract="true">
          <ownedParameter xmi:id="_9wAx4C9uEeOq3KT-lRHlww" type="_9uSTkC9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9v-8sC9uEeOq3KT-lRHlww" name="randomLoc" isAbstract="true">
          <ownedParameter xmi:id="_9v-8sS9uEeOq3KT-lRHlww" name="rect" type="_9uS6oC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9v-8si9uEeOq3KT-lRHlww" type="_9uB04C9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9v_jwS9uEeOq3KT-lRHlww" name="randomLoc" isAbstract="true">
          <ownedParameter xmi:id="_9v_jwi9uEeOq3KT-lRHlww" name="dim" type="_9v-8sy9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9v_jwy9uEeOq3KT-lRHlww" type="_9uB04C9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9wAK0C9uEeOq3KT-lRHlww" name="randomVel" isAbstract="true">
          <ownedParameter xmi:id="_9wAK0S9uEeOq3KT-lRHlww" name="rect" type="_9uS6oC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wAK0i9uEeOq3KT-lRHlww" type="_9uB04C9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9rVtQC9uEeOq3KT-lRHlww" clientDependency="_9vHaAC9uEeOq3KT-lRHlww" name="Randomizer">
        <ownedComment xmi:id="_9xD6wS9uEeOq3KT-lRHlww">
          <body>Utility class that supplies  class routines for generating various random values</body>
        </ownedComment>
        <ownedAttribute xmi:id="_9wiWUi9uEeOq3KT-lRHlww" name="Singleton" isStatic="true" type="_9rVtQC9uEeOq3KT-lRHlww" association="_9xn7cS9uEeOq3KT-lRHlww">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_9wiWUy9uEeOq3KT-lRHlww" value="new Randomizer()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_9vHaAC9uEeOq3KT-lRHlww" client="_9rVtQC9uEeOq3KT-lRHlww" supplier="_9rSp8C9uEeOq3KT-lRHlww" contract="_9rSp8C9uEeOq3KT-lRHlww"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w7X4y9uEeOq3KT-lRHlww" name="randomLoc" specification="_9wAx4S9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w7X5C9uEeOq3KT-lRHlww" name="rect" type="_9uS6oC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9w7X5S9uEeOq3KT-lRHlww" type="_9uB04C9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>return (new Point( randomInt(0, rect.width), randomInt(0, rect.height)));&#xD;
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w7X5i9uEeOq3KT-lRHlww" name="randomLoc" specification="_9wBY8C9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w7X5y9uEeOq3KT-lRHlww" name="dim" type="_9v-8sy9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9w7X6C9uEeOq3KT-lRHlww" type="_9uB04C9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>return (new Point( randomInt(0, dim.width), randomInt(0, dim.height)));&#xD;
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w7-8C9uEeOq3KT-lRHlww" name="randomInt" specification="_9rW7YC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w7-8S9uEeOq3KT-lRHlww" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w7-8i9uEeOq3KT-lRHlww" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w7-8y9uEeOq3KT-lRHlww" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return (int)Math.floor((Math.random()*(1+max-min))+min);&#xD;
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w7-9C9uEeOq3KT-lRHlww" name="randomDouble" specification="_9rW7ZC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w7-9S9uEeOq3KT-lRHlww" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w7-9i9uEeOq3KT-lRHlww" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w7-9y9uEeOq3KT-lRHlww" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>return (Math.random()*(max-min))+min;&#xD;
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w7--C9uEeOq3KT-lRHlww" name="randomVel" specification="_9wCAAC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w7--S9uEeOq3KT-lRHlww" name="rect" type="_9uS6oC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9w7--i9uEeOq3KT-lRHlww" type="_9uB04C9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>return (new Point (randomInt(-rect.width, rect.width), randomInt(-rect.height, rect.height)));&#xD;
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w7--y9uEeOq3KT-lRHlww" name="randomColor" specification="_9rXicS9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w7-_C9uEeOq3KT-lRHlww" type="_9uSTkC9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>return new Color( randomInt(0,255),randomInt(0,255),randomInt(0,255));&#xD;
  </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_9rVtQS9uEeOq3KT-lRHlww" name="Randomizer">
          <eAnnotations xmi:id="_9rVtQi9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_9rWUUC9uEeOq3KT-lRHlww" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_9rWUUi9uEeOq3KT-lRHlww" type="_9rVtQC9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9rW7YC9uEeOq3KT-lRHlww" name="randomInt" method="_9w7-8C9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9rW7YS9uEeOq3KT-lRHlww" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9rW7Yi9uEeOq3KT-lRHlww" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9rW7Yy9uEeOq3KT-lRHlww" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_9rW7ZC9uEeOq3KT-lRHlww" name="randomDouble" method="_9w7-9C9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9rW7ZS9uEeOq3KT-lRHlww" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9rW7Zi9uEeOq3KT-lRHlww" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9rXicC9uEeOq3KT-lRHlww" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_9rXicS9uEeOq3KT-lRHlww" name="randomColor" method="_9w7--y9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9wCAAy9uEeOq3KT-lRHlww" type="_9uSTkC9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9wAx4S9uEeOq3KT-lRHlww" name="randomLoc" method="_9w7X4y9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9wAx4i9uEeOq3KT-lRHlww" name="rect" type="_9uS6oC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wAx4y9uEeOq3KT-lRHlww" type="_9uB04C9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9wBY8C9uEeOq3KT-lRHlww" name="randomLoc" method="_9w7X5i9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9wBY8S9uEeOq3KT-lRHlww" name="dim" type="_9v-8sy9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wBY8i9uEeOq3KT-lRHlww" type="_9uB04C9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9wCAAC9uEeOq3KT-lRHlww" name="randomVel" method="_9w7--C9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9wCAAS9uEeOq3KT-lRHlww" name="rect" type="_9uS6oC9uEeOq3KT-lRHlww"/>
          <ownedParameter xmi:id="_9wCAAi9uEeOq3KT-lRHlww" type="_9uB04C9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_9rZXoC9uEeOq3KT-lRHlww" name="SineMaker">
        <ownedComment xmi:id="_9xD6wi9uEeOq3KT-lRHlww">
          <body>A utility class that can be used to create smoothly varying sinusoidal&#xD;
numerical data.&#xD;
Note that this is not a singleton class nor does it have static methods as&#xD;
its behavior depends on the minimum, maximum and delta values given to &#xD;
its constructor.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_9wi9YS9uEeOq3KT-lRHlww" name="_mid" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9wjkcC9uEeOq3KT-lRHlww" name="_ampl" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9wjkci9uEeOq3KT-lRHlww" name="_delta" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9wkLgC9uEeOq3KT-lRHlww" name="_theta" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_9wkLgS9uEeOq3KT-lRHlww" value="-Math.PI/2.0"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w8mAC9uEeOq3KT-lRHlww" name="SineMaker" specification="_9ralwC9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w8mAS9uEeOq3KT-lRHlww" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w8mAi9uEeOq3KT-lRHlww" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w8mAy9uEeOq3KT-lRHlww" name="delta">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9w8mBC9uEeOq3KT-lRHlww" type="_9rZXoC9uEeOq3KT-lRHlww" direction="return"/>
          <language>java</language>
          <body>_mid = (max+min)/2.0;&#xD;
 _ampl = (max-min)/2.0;&#xD;
 _delta = delta;&#xD;
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w8mBS9uEeOq3KT-lRHlww" name="getDblVal" specification="_9ralxy9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w8mBi9uEeOq3KT-lRHlww" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>double result = _mid + _ampl*Math.sin(_theta);&#xD;
 _theta += _delta; // shorthand for _theta = _theta + _delta&#xD;
 return result;&#xD;
  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9w8mBy9uEeOq3KT-lRHlww" name="getIntVal" specification="_9rbM0S9uEeOq3KT-lRHlww">
          <ownedParameter xmi:id="_9w8mCC9uEeOq3KT-lRHlww" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return (int) Math.round(getDblVal());&#xD;
  </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_9ralwC9uEeOq3KT-lRHlww" name="SineMaker" method="_9w8mAC9uEeOq3KT-lRHlww">
          <eAnnotations xmi:id="_9ralxC9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_9ralxS9uEeOq3KT-lRHlww" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_9xD6wy9uEeOq3KT-lRHlww">
            <body>The constructor takes several values to control the object's behavior.&#xD;
   * @param min The minimum and initial value to produce.&#xD;
   * @param max The maximum value to produce.&#xD;
   * @param delta The amount in radians that the generating angle is incremented each time&#xD;
   *</body>
          </ownedComment>
          <ownedParameter xmi:id="_9ralwS9uEeOq3KT-lRHlww" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9ralwi9uEeOq3KT-lRHlww" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9ralwy9uEeOq3KT-lRHlww" name="delta">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9ralxi9uEeOq3KT-lRHlww" type="_9rZXoC9uEeOq3KT-lRHlww" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_9ralxy9uEeOq3KT-lRHlww" name="getDblVal" method="_9w8mBS9uEeOq3KT-lRHlww">
          <ownedComment xmi:id="_9xD6xC9uEeOq3KT-lRHlww">
            <body>Returns a different value each time it is called.  The value varies smoothly in a &#xD;
   * sinusoidal fashion, incrementing each time as per the above specified delta &#xD;
   * angle increase.</body>
          </ownedComment>
          <ownedParameter xmi:id="_9rbM0C9uEeOq3KT-lRHlww" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_9rbM0S9uEeOq3KT-lRHlww" name="getIntVal" method="_9w8mBy9uEeOq3KT-lRHlww">
          <ownedComment xmi:id="_9xD6xS9uEeOq3KT-lRHlww">
            <body>Same as getDblVal, but returns the result rounded to the nearest integer.&#xD;
   * Note that getDblVal and getIntVal are not independent as getIntVal merely calls&#xD;
   * getDblVal.</body>
          </ownedComment>
          <ownedParameter xmi:id="_9rbM0i9uEeOq3KT-lRHlww" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_9xn7cS9uEeOq3KT-lRHlww" name="" memberEnd="_9xn7ci9uEeOq3KT-lRHlww _9wiWUi9uEeOq3KT-lRHlww">
        <ownedEnd xmi:id="_9xn7ci9uEeOq3KT-lRHlww" name="" type="_9rVtQC9uEeOq3KT-lRHlww" association="_9xn7cS9uEeOq3KT-lRHlww"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_9pPbgC9uEeOq3KT-lRHlww" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_9pPbgS9uEeOq3KT-lRHlww" name="jgoodies">
        <packagedElement xmi:type="uml:Package" xmi:id="_9pPbgi9uEeOq3KT-lRHlww" name="forms">
          <packagedElement xmi:type="uml:Package" xmi:id="_9pPbgy9uEeOq3KT-lRHlww" name="layout">
            <packagedElement xmi:type="uml:Class" xmi:id="_9vOuwS9uEeOq3KT-lRHlww" name="FormLayout"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_9vPV0C9uEeOq3KT-lRHlww" name="ColumnSpec"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_9vP84S9uEeOq3KT-lRHlww" name="RowSpec"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_9pPbhC9uEeOq3KT-lRHlww" name="factories">
            <packagedElement xmi:type="uml:Class" xmi:id="_9vPV0i9uEeOq3KT-lRHlww" name="FormFactory"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_9Yj7MC9uEeOq3KT-lRHlww">
      <eAnnotations xmi:id="_9YkiQC9uEeOq3KT-lRHlww" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_9YkiQS9uEeOq3KT-lRHlww" base_Package="_9EzRsC9uEeOq3KT-lRHlww">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_9pvKwC9uEeOq3KT-lRHlww" genericsValue="TStrategyDropListItem, TPaintDropListItem" base_Element="_9pujsC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9q3zMC9uEeOq3KT-lRHlww" base_Element="_9q3MIS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9q4aQS9uEeOq3KT-lRHlww" base_Element="_9q3zMi9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Annotations xmi:id="_9q4aQi9uEeOq3KT-lRHlww" base_Element="_9q3zMi9uEeOq3KT-lRHlww">
    <annotations xmi:id="_9q5BUC9uEeOq3KT-lRHlww" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9q8rsS9uEeOq3KT-lRHlww" base_Element="_9q8EoC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Annotations xmi:id="_9q8rsi9uEeOq3KT-lRHlww" base_Element="_9q8EoC9uEeOq3KT-lRHlww">
    <annotations xmi:id="_9q9SwC9uEeOq3KT-lRHlww" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9q_vAi9uEeOq3KT-lRHlww" base_Element="_9q_H8S9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9rAWFS9uEeOq3KT-lRHlww" base_Element="_9rAWEC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Annotations xmi:id="_9rA9IC9uEeOq3KT-lRHlww" base_Element="_9rAWEC9uEeOq3KT-lRHlww">
    <annotations xmi:id="_9rA9IS9uEeOq3KT-lRHlww" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9rQ0wC9uEeOq3KT-lRHlww" base_Element="_9rQNsC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9rWUUS9uEeOq3KT-lRHlww" base_Element="_9rVtQS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Generics xmi:id="_9rca8C9uEeOq3KT-lRHlww" genericsValue="TStrategyDropListItem, TPaintDropListItem" base_Element="_9rbz4C9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Generics xmi:id="_9rihkC9uEeOq3KT-lRHlww" genericsValue="TStrategyDropListItem, TPaintDropListItem" base_Element="_9rh6gC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Generics xmi:id="_9rlk4C9uEeOq3KT-lRHlww" genericsValue="?, ?" base_Element="_9rk90C9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9uAmwC9uEeOq3KT-lRHlww" base_Element="_9t__sC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9uAmwi9uEeOq3KT-lRHlww" base_Element="_9uAmwS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9uBN0S9uEeOq3KT-lRHlww" base_Element="_9uBN0C9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9uCb8C9uEeOq3KT-lRHlww" base_Element="_9uB04C9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9uCb8i9uEeOq3KT-lRHlww" base_Element="_9uCb8S9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9uDqEC9uEeOq3KT-lRHlww" base_Element="_9uDDAS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Annotations xmi:id="_9uDqEy9uEeOq3KT-lRHlww" base_Element="_9uDDAS9uEeOq3KT-lRHlww">
    <annotations xmi:id="_9uDqFC9uEeOq3KT-lRHlww" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_9uERIC9uEeOq3KT-lRHlww" base_Element="_9uDqFS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9uFfQi9uEeOq3KT-lRHlww" base_Element="_9uFfQC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Annotations xmi:id="_9uGGUC9uEeOq3KT-lRHlww" base_Element="_9uFfQC9uEeOq3KT-lRHlww">
    <annotations xmi:id="_9uGGUS9uEeOq3KT-lRHlww" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9uHUcy9uEeOq3KT-lRHlww" base_Element="_9uHUcC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Annotations xmi:id="_9uH7gC9uEeOq3KT-lRHlww" base_Element="_9uHUcC9uEeOq3KT-lRHlww">
    <annotations xmi:id="_9uH7gS9uEeOq3KT-lRHlww" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9uH7hC9uEeOq3KT-lRHlww" base_Element="_9uH7gi9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Annotations xmi:id="_9uH7hS9uEeOq3KT-lRHlww" base_Element="_9uH7gi9uEeOq3KT-lRHlww">
    <annotations xmi:id="_9uIikC9uEeOq3KT-lRHlww" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9uKXwC9uEeOq3KT-lRHlww" base_Element="_9uJwsi9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Annotations xmi:id="_9uKXwS9uEeOq3KT-lRHlww" base_Element="_9uJwsi9uEeOq3KT-lRHlww">
    <annotations xmi:id="_9uKXwi9uEeOq3KT-lRHlww" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9uK-1C9uEeOq3KT-lRHlww" base_Element="_9uK-0C9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Annotations xmi:id="_9uLl4C9uEeOq3KT-lRHlww" base_Element="_9uK-0C9uEeOq3KT-lRHlww">
    <annotations xmi:id="_9uLl4S9uEeOq3KT-lRHlww" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9uMM8y9uEeOq3KT-lRHlww" base_Element="_9uMM8C9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Annotations xmi:id="_9uM0AC9uEeOq3KT-lRHlww" base_Element="_9uMM8C9uEeOq3KT-lRHlww">
    <annotations xmi:id="_9uM0AS9uEeOq3KT-lRHlww" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9uOCIi9uEeOq3KT-lRHlww" base_Element="_9uOCIC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Annotations xmi:id="_9uOCIy9uEeOq3KT-lRHlww" base_Element="_9uOCIC9uEeOq3KT-lRHlww">
    <annotations xmi:id="_9uOCJC9uEeOq3KT-lRHlww" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9uP3Uy9uEeOq3KT-lRHlww" base_Element="_9uP3UC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Annotations xmi:id="_9uQeYC9uEeOq3KT-lRHlww" base_Element="_9uP3UC9uEeOq3KT-lRHlww">
    <annotations xmi:id="_9uQeYS9uEeOq3KT-lRHlww" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_9uSTkS9uEeOq3KT-lRHlww" base_Element="_9uSTkC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9uS6oS9uEeOq3KT-lRHlww" base_Element="_9uS6oC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9uThsC9uEeOq3KT-lRHlww" base_Element="_9uS6oi9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9uUIwC9uEeOq3KT-lRHlww" base_Element="_9uThsS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9uUIwi9uEeOq3KT-lRHlww" base_Element="_9uUIwS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9uUv0S9uEeOq3KT-lRHlww" base_Element="_9uUv0C9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9uZBQS9uEeOq3KT-lRHlww" base_Element="_9uZBQC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9uZoUC9uEeOq3KT-lRHlww" base_Element="_9uZBQi9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9ugWAC9uEeOq3KT-lRHlww" base_Element="_9ufu8C9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Annotations xmi:id="_9ugWAS9uEeOq3KT-lRHlww" base_Element="_9ufu8C9uEeOq3KT-lRHlww">
    <annotations xmi:id="_9ugWAi9uEeOq3KT-lRHlww" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9uiLMi9uEeOq3KT-lRHlww" base_Element="_9uiLMC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Annotations xmi:id="_9uiyQC9uEeOq3KT-lRHlww" base_Element="_9uiLMC9uEeOq3KT-lRHlww">
    <annotations xmi:id="_9uiyQS9uEeOq3KT-lRHlww" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_9ulOgS9uEeOq3KT-lRHlww" base_Element="_9ulOgC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9ul1kC9uEeOq3KT-lRHlww" base_Element="_9ulOgi9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9umcoC9uEeOq3KT-lRHlww" base_Element="_9ul1kS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9unDsC9uEeOq3KT-lRHlww" base_Element="_9umcoS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9uqHAi9uEeOq3KT-lRHlww" base_Element="_9uqHAC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9urVIS9uEeOq3KT-lRHlww" base_Element="_9urVIC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9uyC0C9uEeOq3KT-lRHlww" base_Element="_9uxbwC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9uzQ8C9uEeOq3KT-lRHlww" base_Element="_9uyp4C9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9uz4AC9uEeOq3KT-lRHlww" base_Element="_9uzQ8S9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9u27Uy9uEeOq3KT-lRHlww" base_Element="_9u27UC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Annotations xmi:id="_9u3iYC9uEeOq3KT-lRHlww" base_Element="_9u27UC9uEeOq3KT-lRHlww">
    <annotations xmi:id="_9u3iYS9uEeOq3KT-lRHlww" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9u3iZC9uEeOq3KT-lRHlww" base_Element="_9u3iYi9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Annotations xmi:id="_9u4JcC9uEeOq3KT-lRHlww" base_Element="_9u3iYi9uEeOq3KT-lRHlww">
    <annotations xmi:id="_9u4JcS9uEeOq3KT-lRHlww" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9u5XkS9uEeOq3KT-lRHlww" base_Element="_9u4wgy9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Annotations xmi:id="_9u5Xki9uEeOq3KT-lRHlww" base_Element="_9u4wgy9uEeOq3KT-lRHlww">
    <annotations xmi:id="_9u5Xky9uEeOq3KT-lRHlww" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9u7MwC9uEeOq3KT-lRHlww" base_Element="_9u5-oS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Annotations xmi:id="_9u7MwS9uEeOq3KT-lRHlww" base_Element="_9u5-oS9uEeOq3KT-lRHlww">
    <annotations xmi:id="_9u7Mwi9uEeOq3KT-lRHlww" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9u7z0i9uEeOq3KT-lRHlww" base_Element="_9u7z0C9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Annotations xmi:id="_9u8a4C9uEeOq3KT-lRHlww" base_Element="_9u7z0C9uEeOq3KT-lRHlww">
    <annotations xmi:id="_9u8a4S9uEeOq3KT-lRHlww" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9u_eMi9uEeOq3KT-lRHlww" base_Element="_9u-3IC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Annotations xmi:id="_9vAFQC9uEeOq3KT-lRHlww" base_Element="_9u-3IC9uEeOq3KT-lRHlww">
    <annotations xmi:id="_9vAFQS9uEeOq3KT-lRHlww" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9vAsUC9uEeOq3KT-lRHlww" base_Element="_9vAFQi9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Annotations xmi:id="_9vAsUS9uEeOq3KT-lRHlww" base_Element="_9vAFQi9uEeOq3KT-lRHlww">
    <annotations xmi:id="_9vAsUi9uEeOq3KT-lRHlww" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9vDIkC9uEeOq3KT-lRHlww" base_Element="_9vChgy9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Annotations xmi:id="_9vDIkS9uEeOq3KT-lRHlww" base_Element="_9vChgy9uEeOq3KT-lRHlww">
    <annotations xmi:id="_9vDIki9uEeOq3KT-lRHlww" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9vEWsC9uEeOq3KT-lRHlww" base_Element="_9vDvoS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Annotations xmi:id="_9vEWsS9uEeOq3KT-lRHlww" base_Element="_9vDvoS9uEeOq3KT-lRHlww">
    <annotations xmi:id="_9vEWsi9uEeOq3KT-lRHlww" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9vE9wC9uEeOq3KT-lRHlww" base_Element="_9vEWsy9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Annotations xmi:id="_9vE9wS9uEeOq3KT-lRHlww" base_Element="_9vEWsy9uEeOq3KT-lRHlww">
    <annotations xmi:id="_9vE9wi9uEeOq3KT-lRHlww" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9vGy8C9uEeOq3KT-lRHlww" base_Element="_9vGL4S9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Annotations xmi:id="_9vGy8S9uEeOq3KT-lRHlww" base_Element="_9vGL4S9uEeOq3KT-lRHlww">
    <annotations xmi:id="_9vGy8i9uEeOq3KT-lRHlww" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_9vKdUC9uEeOq3KT-lRHlww" base_Element="_9vJ2QC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9vLEYC9uEeOq3KT-lRHlww" base_Element="_9vKdUS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9vLrcC9uEeOq3KT-lRHlww" base_Element="_9vLEYS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9vLrci9uEeOq3KT-lRHlww" base_Element="_9vLrcS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9vMSgS9uEeOq3KT-lRHlww" base_Element="_9vMSgC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9vM5kC9uEeOq3KT-lRHlww" base_Element="_9vMSgi9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9vNgoC9uEeOq3KT-lRHlww" base_Element="_9vM5kS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9vNgoi9uEeOq3KT-lRHlww" base_Element="_9vNgoS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9vOHsC9uEeOq3KT-lRHlww" base_Element="_9vNgoy9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9vOuwC9uEeOq3KT-lRHlww" base_Element="_9vOHsS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9vOuwi9uEeOq3KT-lRHlww" base_Element="_9vOuwS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9vPV0S9uEeOq3KT-lRHlww" base_Element="_9vPV0C9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9vP84C9uEeOq3KT-lRHlww" base_Element="_9vPV0i9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9vQj8C9uEeOq3KT-lRHlww" base_Element="_9vP84S9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9vQj8i9uEeOq3KT-lRHlww" base_Element="_9vQj8S9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Generics xmi:id="_9vSZIC9uEeOq3KT-lRHlww" genericsValue="TStrategyDropListItem, TPaintDropListItem" base_Element="_9vRyES9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9vo-cC9uEeOq3KT-lRHlww" base_Element="_9voXYS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9vrasy9uEeOq3KT-lRHlww" base_Element="_9vrasC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Annotations xmi:id="_9vsBwC9uEeOq3KT-lRHlww" base_Element="_9vrasC9uEeOq3KT-lRHlww">
    <annotations xmi:id="_9vsBwS9uEeOq3KT-lRHlww" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9vso0C9uEeOq3KT-lRHlww" base_Element="_9vsBwi9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9vt28C9uEeOq3KT-lRHlww" base_Element="_9vtP4C9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Annotations xmi:id="_9vt28S9uEeOq3KT-lRHlww" base_Element="_9vtP4C9uEeOq3KT-lRHlww">
    <annotations xmi:id="_9vt28i9uEeOq3KT-lRHlww" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9vyIYC9uEeOq3KT-lRHlww" base_Element="_9vxhUC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Annotations xmi:id="_9vyIYS9uEeOq3KT-lRHlww" base_Element="_9vxhUC9uEeOq3KT-lRHlww">
    <annotations xmi:id="_9vyIYi9uEeOq3KT-lRHlww" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9vz9kS9uEeOq3KT-lRHlww" base_Element="_9vzWgi9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Annotations xmi:id="_9vz9ki9uEeOq3KT-lRHlww" base_Element="_9vzWgi9uEeOq3KT-lRHlww">
    <annotations xmi:id="_9vz9ky9uEeOq3KT-lRHlww" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9v1ywC9uEeOq3KT-lRHlww" base_Element="_9v1Lsy9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Annotations xmi:id="_9v1ywS9uEeOq3KT-lRHlww" base_Element="_9v1Lsy9uEeOq3KT-lRHlww">
    <annotations xmi:id="_9v1ywi9uEeOq3KT-lRHlww" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9v42FC9uEeOq3KT-lRHlww" base_Element="_9v42EC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Annotations xmi:id="_9v5dIC9uEeOq3KT-lRHlww" base_Element="_9v42EC9uEeOq3KT-lRHlww">
    <annotations xmi:id="_9v5dIS9uEeOq3KT-lRHlww" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_9v_jwC9uEeOq3KT-lRHlww" base_Element="_9v-8sy9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9wD1MC9uEeOq3KT-lRHlww" base_Element="_9wDOIC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9wGRcC9uEeOq3KT-lRHlww" base_Element="_9wFqYi9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Generics xmi:id="_9wLxAC9uEeOq3KT-lRHlww" genericsValue="TStrategyDropListItem, TPaintDropListItem" base_Element="_9wLJ8C9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wLxAS9uEeOq3KT-lRHlww" base_Element="_9wLJ8C9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wMYEC9uEeOq3KT-lRHlww" base_Element="_9wLxAi9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wMYEy9uEeOq3KT-lRHlww" base_Element="_9wMYES9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wM_IS9uEeOq3KT-lRHlww" base_Element="_9wM_IC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wNmMC9uEeOq3KT-lRHlww" base_Element="_9wM_Ii9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wONQC9uEeOq3KT-lRHlww" base_Element="_9wNmMS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wONQy9uEeOq3KT-lRHlww" base_Element="_9wONQS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wO0US9uEeOq3KT-lRHlww" base_Element="_9wO0UC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wPbYC9uEeOq3KT-lRHlww" base_Element="_9wO0Ui9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wPbYi9uEeOq3KT-lRHlww" base_Element="_9wPbYS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wQCcC9uEeOq3KT-lRHlww" base_Element="_9wPbYy9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wQpgC9uEeOq3KT-lRHlww" base_Element="_9wQCcS9uEeOq3KT-lRHlww">
    <associatedElement xmi:type="uml:Operation" xmi:id="_9wQpgi9uEeOq3KT-lRHlww" name="setSwitcher" method="_9wvxti9uEeOq3KT-lRHlww">
      <ownedParameter xmi:id="_9wQpgy9uEeOq3KT-lRHlww" name="mySwitcher" type="_9rIR4S9uEeOq3KT-lRHlww"/>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_9wQphC9uEeOq3KT-lRHlww" name="getSwitcher" method="_9wvxuC9uEeOq3KT-lRHlww">
      <ownedParameter xmi:id="_9wRQkC9uEeOq3KT-lRHlww" type="_9rIR4S9uEeOq3KT-lRHlww" direction="return"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wR3oC9uEeOq3KT-lRHlww" base_Element="_9wRQkS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wTFwi9uEeOq3KT-lRHlww" base_Element="_9wTFwS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wTs0S9uEeOq3KT-lRHlww" base_Element="_9wTs0C9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wUT4C9uEeOq3KT-lRHlww" base_Element="_9wTs0i9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wU68S9uEeOq3KT-lRHlww" base_Element="_9wUT4S9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wU68y9uEeOq3KT-lRHlww" base_Element="_9wU68i9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wViAS9uEeOq3KT-lRHlww" base_Element="_9wViAC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wViAy9uEeOq3KT-lRHlww" base_Element="_9wViAi9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wWJES9uEeOq3KT-lRHlww" base_Element="_9wWJEC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wWJEy9uEeOq3KT-lRHlww" base_Element="_9wWJEi9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wWwIS9uEeOq3KT-lRHlww" base_Element="_9wWwIC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Array xmi:id="_9wXXMS9uEeOq3KT-lRHlww" dimensions="1" base_Element="_9wWwIi9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wXXMi9uEeOq3KT-lRHlww" base_Element="_9wWwIi9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wX-QC9uEeOq3KT-lRHlww" base_Element="_9wXXMy9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wYlUC9uEeOq3KT-lRHlww" base_Element="_9wX-QS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wYlUi9uEeOq3KT-lRHlww" base_Element="_9wYlUS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Array xmi:id="_9wZMYi9uEeOq3KT-lRHlww" base_Element="_9wZMYC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wZMZC9uEeOq3KT-lRHlww" base_Element="_9wZMYC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wZzci9uEeOq3KT-lRHlww" base_Element="_9wZzcC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9waagC9uEeOq3KT-lRHlww" base_Element="_9wZzcy9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9waagi9uEeOq3KT-lRHlww" base_Element="_9waagS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wbBkC9uEeOq3KT-lRHlww" base_Element="_9waagy9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wbBki9uEeOq3KT-lRHlww" base_Element="_9wbBkS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wbooS9uEeOq3KT-lRHlww" base_Element="_9wbooC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wbooy9uEeOq3KT-lRHlww" base_Element="_9wbooi9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wcPsi9uEeOq3KT-lRHlww" base_Element="_9wcPsC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wc2wi9uEeOq3KT-lRHlww" base_Element="_9wc2wC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wdd0C9uEeOq3KT-lRHlww" base_Element="_9wc2wy9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wdd0y9uEeOq3KT-lRHlww" base_Element="_9wdd0S9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9weE4S9uEeOq3KT-lRHlww" base_Element="_9wdd1C9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wer8C9uEeOq3KT-lRHlww" base_Element="_9weE4i9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wer8y9uEeOq3KT-lRHlww" base_Element="_9wer8S9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wfTAi9uEeOq3KT-lRHlww" base_Element="_9wfTAC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wf6EC9uEeOq3KT-lRHlww" base_Element="_9wfTAy9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wf6Ey9uEeOq3KT-lRHlww" base_Element="_9wf6ES9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wghIi9uEeOq3KT-lRHlww" base_Element="_9wghIC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9whIMC9uEeOq3KT-lRHlww" base_Element="_9wghIy9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9whIMi9uEeOq3KT-lRHlww" base_Element="_9whIMS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9whvQC9uEeOq3KT-lRHlww" base_Element="_9whIMy9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9whvQy9uEeOq3KT-lRHlww" base_Element="_9whvQS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wi9YC9uEeOq3KT-lRHlww" base_Element="_9wiWUi9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wi9Yi9uEeOq3KT-lRHlww" base_Element="_9wi9YS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wjkcS9uEeOq3KT-lRHlww" base_Element="_9wjkcC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wjkcy9uEeOq3KT-lRHlww" base_Element="_9wjkci9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wkLgi9uEeOq3KT-lRHlww" base_Element="_9wkLgC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wkyki9uEeOq3KT-lRHlww" base_Element="_9wkykS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wlZoC9uEeOq3KT-lRHlww" base_Element="_9wkyky9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wlZoi9uEeOq3KT-lRHlww" base_Element="_9wlZoS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Generics xmi:id="_9wmAsC9uEeOq3KT-lRHlww" genericsValue="TStrategyDropListItem, TPaintDropListItem" base_Element="_9wlZoy9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wmAsi9uEeOq3KT-lRHlww" base_Element="_9wlZoy9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Generics xmi:id="_9wmnwC9uEeOq3KT-lRHlww" genericsValue="TStrategyDropListItem" base_Element="_9wmAsy9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wmnwS9uEeOq3KT-lRHlww" base_Element="_9wmAsy9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Generics xmi:id="_9wnO0S9uEeOq3KT-lRHlww" genericsValue="TStrategyDropListItem" base_Element="_9wnO0C9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wn14C9uEeOq3KT-lRHlww" base_Element="_9wnO0C9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wn14i9uEeOq3KT-lRHlww" base_Element="_9wn14S9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9woc8C9uEeOq3KT-lRHlww" base_Element="_9wn14y9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9woc8y9uEeOq3KT-lRHlww" base_Element="_9woc8i9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wpEAS9uEeOq3KT-lRHlww" base_Element="_9wpEAC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Generics xmi:id="_9wprEC9uEeOq3KT-lRHlww" genericsValue="TPaintDropListItem" base_Element="_9wpEAi9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9wprES9uEeOq3KT-lRHlww" base_Element="_9wpEAi9uEeOq3KT-lRHlww"/>
  <uml:OpaqueBehavior xmi:id="_9wvxti9uEeOq3KT-lRHlww" name="setSwitcher" specification="_9wQpgi9uEeOq3KT-lRHlww">
    <ownedParameter xmi:id="_9wvxty9uEeOq3KT-lRHlww" name="mySwitcher" type="_9rIR4S9uEeOq3KT-lRHlww"/>
    <language>java</language>
    <body>switcher.setStrategy(mySwitcher);
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_9wvxuC9uEeOq3KT-lRHlww" name="getSwitcher" specification="_9wQphC9uEeOq3KT-lRHlww">
    <ownedParameter xmi:id="_9wvxuS9uEeOq3KT-lRHlww" type="_9rIR4S9uEeOq3KT-lRHlww" direction="return"/>
    <language>java</language>
    <body>return adapter.getSwitcher();
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_9xSkQi9uEeOq3KT-lRHlww" base_Element="_9xSkQC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xTLUi9uEeOq3KT-lRHlww" base_Element="_9xTLUC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xTyYi9uEeOq3KT-lRHlww" base_Element="_9xTyYC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xUZcC9uEeOq3KT-lRHlww" base_Element="_9xTyYy9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xVAgC9uEeOq3KT-lRHlww" base_Element="_9xUZcS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xVnkC9uEeOq3KT-lRHlww" base_Element="_9xVAgS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xWOoC9uEeOq3KT-lRHlww" base_Element="_9xVnkS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xW1sC9uEeOq3KT-lRHlww" base_Element="_9xWOoS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xW1sy9uEeOq3KT-lRHlww" base_Element="_9xW1sS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xXcwi9uEeOq3KT-lRHlww" base_Element="_9xXcwC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xYD0C9uEeOq3KT-lRHlww" base_Element="_9xXcwy9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xYq4C9uEeOq3KT-lRHlww" base_Element="_9xYD0S9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xZR8C9uEeOq3KT-lRHlww" base_Element="_9xYq4S9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xZR8y9uEeOq3KT-lRHlww" base_Element="_9xZR8S9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xZ5Ai9uEeOq3KT-lRHlww" base_Element="_9xZ5AC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xagES9uEeOq3KT-lRHlww" base_Element="_9xZ5Ay9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xbHIC9uEeOq3KT-lRHlww" base_Element="_9xagEi9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xbuMC9uEeOq3KT-lRHlww" base_Element="_9xbHIS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xcVQC9uEeOq3KT-lRHlww" base_Element="_9xbuMS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xcVQy9uEeOq3KT-lRHlww" base_Element="_9xcVQS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xc8Ui9uEeOq3KT-lRHlww" base_Element="_9xc8UC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xdjYC9uEeOq3KT-lRHlww" base_Element="_9xc8Uy9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xeKcC9uEeOq3KT-lRHlww" base_Element="_9xdjYS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xexgC9uEeOq3KT-lRHlww" base_Element="_9xeKcS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xexgy9uEeOq3KT-lRHlww" base_Element="_9xexgS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xfYki9uEeOq3KT-lRHlww" base_Element="_9xfYkC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xf_oC9uEeOq3KT-lRHlww" base_Element="_9xfYky9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xgmsC9uEeOq3KT-lRHlww" base_Element="_9xf_oS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xhNwC9uEeOq3KT-lRHlww" base_Element="_9xgmsS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xhNwy9uEeOq3KT-lRHlww" base_Element="_9xhNwS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xh00i9uEeOq3KT-lRHlww" base_Element="_9xh00C9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xib4C9uEeOq3KT-lRHlww" base_Element="_9xh00y9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xjC8C9uEeOq3KT-lRHlww" base_Element="_9xib4S9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xjC8y9uEeOq3KT-lRHlww" base_Element="_9xjC8S9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xjqAi9uEeOq3KT-lRHlww" base_Element="_9xjqAC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xkREC9uEeOq3KT-lRHlww" base_Element="_9xjqAy9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xk4IC9uEeOq3KT-lRHlww" base_Element="_9xkRES9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xlfMC9uEeOq3KT-lRHlww" base_Element="_9xk4IS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xlfMy9uEeOq3KT-lRHlww" base_Element="_9xlfMS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xmtUC9uEeOq3KT-lRHlww" base_Element="_9xlfNC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xnUYi9uEeOq3KT-lRHlww" base_Element="_9xnUYC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xn7cC9uEeOq3KT-lRHlww" base_Element="_9xnUYy9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xoigC9uEeOq3KT-lRHlww" base_Element="_9xn7cS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xoigy9uEeOq3KT-lRHlww" base_Element="_9xoigS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xpJkC9uEeOq3KT-lRHlww" base_Element="_9xoihC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xpwoC9uEeOq3KT-lRHlww" base_Element="_9xpJkS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xpwoy9uEeOq3KT-lRHlww" base_Element="_9xpwoS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xqXsi9uEeOq3KT-lRHlww" base_Element="_9xqXsC9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xq-wC9uEeOq3KT-lRHlww" base_Element="_9xqXsy9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xq-wy9uEeOq3KT-lRHlww" base_Element="_9xq-wS9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xrl0i9uEeOq3KT-lRHlww" base_Element="_9xrl0C9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xsM4C9uEeOq3KT-lRHlww" base_Element="_9xrl0y9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xsz8C9uEeOq3KT-lRHlww" base_Element="_9xsM4S9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xsz8y9uEeOq3KT-lRHlww" base_Element="_9xsz8S9uEeOq3KT-lRHlww"/>
  <UMLLabProfile:Reference xmi:id="_9xtbAC9uEeOq3KT-lRHlww" base_Element="_9xsz9C9uEeOq3KT-lRHlww"/>
</xmi:XMI>
