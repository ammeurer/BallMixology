<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0_06) on Mon Oct 07 11:14:48 CDT 2013 -->
<title>SlideStrategy</title>
<meta name="date" content="2013-10-07">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="SlideStrategy";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/SlideStrategy.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../interaction_strategies/NormalElasticStrategy.html" title="class in interaction_strategies"><span class="strong">Prev Class</span></a></li>
<li><a href="../interaction_strategies/StickyStrategy.html" title="class in interaction_strategies"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?interaction_strategies/SlideStrategy.html" target="_top">Frames</a></li>
<li><a href="SlideStrategy.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field_summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field_detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">interaction_strategies</div>
<h2 title="Class SlideStrategy" class="title">Class SlideStrategy</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>interaction_strategies.SlideStrategy</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd><a href="../update_strategies/IUpdateStrategy.html" title="interface in update_strategies">IUpdateStrategy</a></dd>
</dl>
<hr>
<br>
<pre>public class <span class="strong">SlideStrategy</span>
extends java.lang.Object
implements <a href="../update_strategies/IUpdateStrategy.html" title="interface in update_strategies">IUpdateStrategy</a></pre>
<div class="block">SlideStrategy causes balls to slide past each other when 
 they overlap</div>
<dl><dt><span class="strong">Author:</span></dt>
  <dd>ammeurer</dd></dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private double</code></td>
<td class="colLast"><code><strong><a href="../interaction_strategies/SlideStrategy.html#Nudge">Nudge</a></strong></code>
<div class="block">The amount to add to the separation distance to insure that the two balls
 are beyond collision distance</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../interaction_strategies/SlideStrategy.html#SlideStrategy()">SlideStrategy</a></strong>()</code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>protected java.awt.geom.Point2D.Double</code></td>
<td class="colLast"><code><strong><a href="../interaction_strategies/SlideStrategy.html#impulse(java.awt.Point, java.awt.Point, java.awt.Point, java.awt.Point, double, double, double)">impulse</a></strong>(java.awt.Point&nbsp;lSource,
       java.awt.Point&nbsp;vSource,
       java.awt.Point&nbsp;lTarget,
       java.awt.Point&nbsp;vTarget,
       double&nbsp;reducedMass,
       double&nbsp;distance,
       double&nbsp;deltaR)</code>
<div class="block">Calculates the impulse (change in momentum) of the collision in the
 direction from the source to the target This method calculates the
 impulse on the source ball.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../interaction_strategies/SlideStrategy.html#init(model.ball.Ball)">init</a></strong>(<a href="../model/ball/Ball.html" title="class in model.ball">Ball</a>&nbsp;context)</code>
<div class="block">Optional initialization method for an IUpdateStrategy object</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>protected double</code></td>
<td class="colLast"><code><strong><a href="../interaction_strategies/SlideStrategy.html#reducedMass(double, double)">reducedMass</a></strong>(double&nbsp;mSource,
           double&nbsp;mTarget)</code>
<div class="block">Returns the reduced mass of the two balls (m1*m2)/(m1+m2) Gives correct
 result if one of the balls has infinite mass.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>protected void</code></td>
<td class="colLast"><code><strong><a href="../interaction_strategies/SlideStrategy.html#updateCollision(model.ball.Ball, model.ball.Ball, double, double, model.ball.Dispatcher)">updateCollision</a></strong>(<a href="../model/ball/Ball.html" title="class in model.ball">Ball</a>&nbsp;context,
               <a href="../model/ball/Ball.html" title="class in model.ball">Ball</a>&nbsp;target,
               double&nbsp;impX,
               double&nbsp;impY,
               <a href="../model/ball/Dispatcher.html" title="class in model.ball">Dispatcher</a>&nbsp;dispatcher)</code>
<div class="block">Updates the velocity of the source ball, given an impulse, then uses the
 context's interactWith method to determine the post collision behavior, from the context
 ball's perspective.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../interaction_strategies/SlideStrategy.html#updateState(model.ball.Ball, model.ball.Dispatcher)">updateState</a></strong>(<a href="../model/ball/Ball.html" title="class in model.ball">Ball</a>&nbsp;context,
           <a href="../model/ball/Dispatcher.html" title="class in model.ball">Dispatcher</a>&nbsp;dispatcher)</code>
<div class="block">Update the ball's state each time the dispatcher calls</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="Nudge">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>Nudge</h4>
<pre>private&nbsp;double Nudge</pre>
<div class="block">The amount to add to the separation distance to insure that the two balls
 are beyond collision distance</div>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="SlideStrategy()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>SlideStrategy</h4>
<pre>public&nbsp;SlideStrategy()</pre>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="updateState(model.ball.Ball, model.ball.Dispatcher)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>updateState</h4>
<pre>public&nbsp;void&nbsp;updateState(<a href="../model/ball/Ball.html" title="class in model.ball">Ball</a>&nbsp;context,
               <a href="../model/ball/Dispatcher.html" title="class in model.ball">Dispatcher</a>&nbsp;dispatcher)</pre>
<div class="block"><strong>Description copied from interface:&nbsp;<code><a href="../update_strategies/IUpdateStrategy.html#updateState(model.ball.Ball, model.ball.Dispatcher)">IUpdateStrategy</a></code></strong></div>
<div class="block">Update the ball's state each time the dispatcher calls</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../update_strategies/IUpdateStrategy.html#updateState(model.ball.Ball, model.ball.Dispatcher)">updateState</a></code>&nbsp;in interface&nbsp;<code><a href="../update_strategies/IUpdateStrategy.html" title="interface in update_strategies">IUpdateStrategy</a></code></dd>
</dl>
</li>
</ul>
<a name="reducedMass(double, double)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>reducedMass</h4>
<pre>protected&nbsp;double&nbsp;reducedMass(double&nbsp;mSource,
                 double&nbsp;mTarget)</pre>
<div class="block">Returns the reduced mass of the two balls (m1*m2)/(m1+m2) Gives correct
 result if one of the balls has infinite mass.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>mSource</code> - Mass of the source ball</dd><dd><code>mTarget</code> - Mass of the target ball</dd></dl>
</li>
</ul>
<a name="impulse(java.awt.Point, java.awt.Point, java.awt.Point, java.awt.Point, double, double, double)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>impulse</h4>
<pre>protected&nbsp;java.awt.geom.Point2D.Double&nbsp;impulse(java.awt.Point&nbsp;lSource,
                                   java.awt.Point&nbsp;vSource,
                                   java.awt.Point&nbsp;lTarget,
                                   java.awt.Point&nbsp;vTarget,
                                   double&nbsp;reducedMass,
                                   double&nbsp;distance,
                                   double&nbsp;deltaR)</pre>
<div class="block">Calculates the impulse (change in momentum) of the collision in the
 direction from the source to the target This method calculates the
 impulse on the source ball. The impulse on the target ball is the
 negative of the result. Also moves source ball out of collision range
 along normal direction. The change in velocity of the source ball is the
 impulse divided by the source's mass The change in velocity of the target
 ball is the negative of the impulse divided by the target's mass
 
 Operational note: Even though theoretically, the difference in velocities
 of two balls should be co-linear with the normal line between them, the
 discrete nature of animations means that the point where collision is
 detected may not be at the same point as the theoretical contact point.
 This method calculates the rebound directions as if the two balls were
 the appropriate radii such that they had just contacted
 _at_the_point_of_collision_detection_. This may give slightly different
 rebound direction than one would calculate if they contacted at the
 theoretical point given by their actual radii.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>lSource</code> - Location of the source ball</dd><dd><code>vSource</code> - Velocity of the source ball</dd><dd><code>lTarget</code> - Location of the target ball</dd><dd><code>vTarget</code> - Velocity of the target ball</dd><dd><code>reducedMass</code> - Reduced mass of the two balls</dd><dd><code>distance</code> - Distance between the two balls.</dd><dd><code>deltaR</code> - The minimum allowed separation(sum of the ball radii) minus the actual separation(distance between ball centers). Should be a
            positive value.  This is the amount of overlap of the balls as measured along the line between their centers.</dd>
<dt><span class="strong">Returns:</span></dt><dd></dd></dl>
</li>
</ul>
<a name="updateCollision(model.ball.Ball, model.ball.Ball, double, double, model.ball.Dispatcher)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>updateCollision</h4>
<pre>protected&nbsp;void&nbsp;updateCollision(<a href="../model/ball/Ball.html" title="class in model.ball">Ball</a>&nbsp;context,
                   <a href="../model/ball/Ball.html" title="class in model.ball">Ball</a>&nbsp;target,
                   double&nbsp;impX,
                   double&nbsp;impY,
                   <a href="../model/ball/Dispatcher.html" title="class in model.ball">Dispatcher</a>&nbsp;dispatcher)</pre>
<div class="block">Updates the velocity of the source ball, given an impulse, then uses the
 context's interactWith method to determine the post collision behavior, from the context
 ball's perspective. The change in velocity is the impulse divided by the (source) ball's mass. To change
 the velocity of the target ball, switch the source and target input
 parameters and negate the impulse values.   This will also run the post collision behavior from 
 the other perspective.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>context</code> - The ball to update</dd><dd><code>target</code> - The ball being collided with</dd><dd><code>impX</code> - x-coordinate of the impulse</dd><dd><code>impY</code> - y-coordinate of the impulse</dd></dl>
</li>
</ul>
<a name="init(model.ball.Ball)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>init</h4>
<pre>public&nbsp;void&nbsp;init(<a href="../model/ball/Ball.html" title="class in model.ball">Ball</a>&nbsp;context)</pre>
<div class="block"><strong>Description copied from interface:&nbsp;<code><a href="../update_strategies/IUpdateStrategy.html#init(model.ball.Ball)">IUpdateStrategy</a></code></strong></div>
<div class="block">Optional initialization method for an IUpdateStrategy object</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../update_strategies/IUpdateStrategy.html#init(model.ball.Ball)">init</a></code>&nbsp;in interface&nbsp;<code><a href="../update_strategies/IUpdateStrategy.html" title="interface in update_strategies">IUpdateStrategy</a></code></dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/SlideStrategy.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../interaction_strategies/NormalElasticStrategy.html" title="class in interaction_strategies"><span class="strong">Prev Class</span></a></li>
<li><a href="../interaction_strategies/StickyStrategy.html" title="class in interaction_strategies"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?interaction_strategies/SlideStrategy.html" target="_top">Frames</a></li>
<li><a href="SlideStrategy.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field_summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field_detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
